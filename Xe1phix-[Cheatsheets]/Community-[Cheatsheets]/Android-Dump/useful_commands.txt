{"payload":{"allShortcutsEnabled":false,"fileTree":{"os":{"items":[{"name":"kali_linux_commands.md","path":"os/kali_linux_commands.md","contentType":"file"},{"name":"lunux_windows_commands.md","path":"os/lunux_windows_commands.md","contentType":"file"},{"name":"preparing_kali.md","path":"os/preparing_kali.md","contentType":"file"},{"name":"preparing_windows.md","path":"os/preparing_windows.md","contentType":"file"},{"name":"useful_commands.md","path":"os/useful_commands.md","contentType":"file"}],"totalCount":5},"":{"items":[{"name":"buffer_overflow","path":"buffer_overflow","contentType":"directory"},{"name":"cheatSheets","path":"cheatSheets","contentType":"directory"},{"name":"client_side","path":"client_side","contentType":"directory"},{"name":"crypto","path":"crypto","contentType":"directory"},{"name":"enumeration","path":"enumeration","contentType":"directory"},{"name":"exploitation","path":"exploitation","contentType":"directory"},{"name":"images","path":"images","contentType":"directory"},{"name":"networking","path":"networking","contentType":"directory"},{"name":"os","path":"os","contentType":"directory"},{"name":"oscp_resources","path":"oscp_resources","contentType":"directory"},{"name":"password_attack","path":"password_attack","contentType":"directory"},{"name":"port_forwarding","path":"port_forwarding","contentType":"directory"},{"name":"priv_escalation","path":"priv_escalation","contentType":"directory"},{"name":"scripts","path":"scripts","contentType":"directory"},{"name":"social_engineering","path":"social_engineering","contentType":"directory"},{"name":"templates","path":"templates","contentType":"directory"},{"name":"web_pentest","path":"web_pentest","contentType":"directory"},{"name":"wifi","path":"wifi","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"bookmarks.md","path":"bookmarks.md","contentType":"file"},{"name":"md_tree.sh","path":"md_tree.sh","contentType":"file"},{"name":"useful_tricks.md","path":"useful_tricks.md","contentType":"file"}],"totalCount":24}},"fileTreeProcessingTime":4.67191,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":118064894,"defaultBranch":"master","name":"pentest-notes","ownerLogin":"wwong99","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2018-01-19T02:19:31.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/35420065?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"master","listCacheKey":"v0:1516328416.0","canEdit":false,"refType":"branch","currentOid":"9a9d4117cebf06597c050904b387fd14ab59096f"},"path":"os/useful_commands.md","currentUser":null,"blob":{"rawLines":null,"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/wwong99/pentest-notes/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/wwong99/pentest-notes/security/dependabot","repoSecurityAndAnalysisPath":"/wwong99/pentest-notes/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"useful_commands.md","displayUrl":"https://github.com/wwong99/pentest-notes/blob/master/os/useful_commands.md?raw=true","headerInfo":{"blobSize":"212 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"69ba4f2","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fwwong99%2Fpentest-notes%2Fblob%2Fmaster%2Fos%2Fuseful_commands.md","isCSV":false,"isRichtext":true,"toc":[{"level":1,"text":"Useful commands By @climagic","anchor":"useful-commands-by-climagic","htmlText":"Useful commands By @climagic"}],"lineInfo":{"truncatedLoc":"9320","truncatedSloc":"6217"},"mode":"executable file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Markdown","languageID":222,"large":false,"loggedIn":false,"newDiscussionPath":"/wwong99/pentest-notes/discussions/new","newIssuePath":"/wwong99/pentest-notes/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/wwong99/pentest-notes/blob/master/os/useful_commands.md","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/wwong99/pentest-notes/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/wwong99/pentest-notes/raw/master/os/useful_commands.md","renderImageOrRaw":false,"richText":"<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-useful-commands-by-climagic\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#useful-commands-by-climagic\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Useful commands By <a href=\"https://twitter.com/climagic\" rel=\"nofollow\">@climagic</a></h1>\n<ul dir=\"auto\">\n<li>See who's on the Starbucks...</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  tshark -ni en0 -Y &quot;bootp.option.type == 53&quot; -T fields -e bootp.option.hostname -e eth.src_resolved\"><pre>❯❯  tshark -ni en0 -Y <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bootp.option.type == 53<span class=\"pl-pds\">\"</span></span> -T fields -e bootp.option.hostname -e eth.src_resolved</pre></div>\n<ul dir=\"auto\">\n<li>Stop the execution of pid 5149. Same as if you pressed Ctrl-Z in the shell. Resume execution with kill -CONT 5149</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ kill -STOP 5149\"><pre>❯❯ <span class=\"pl-c1\">kill</span> -STOP 5149</pre></div>\n<ul dir=\"auto\">\n<li>Find world readable files under CWD that have \"password=\" in them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -type f -perm /o=r -print0 | xargs -0 grep -l password=\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -type f -perm /o=r -print0 <span class=\"pl-k\">|</span> xargs -0 grep -l password=</pre></div>\n<ul dir=\"auto\">\n<li>Random curses</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"#!/usr/bin/python\nimport curses as c\nimport random as r\ns = c.initscr()\nw = c.newwin(3,7,9,9)\nw.border()\nwhile 1:\n    c = s.getch()\n    if (c == 32): # Press Spacebar\n        w.mvwin(r.randint(2,25),r.randint(2,70))\n    w.addstr(1,1,&quot;F@*K!&quot;)\n    w.refresh()\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#!</span>/usr/bin/python</span>\nimport curses as c\nimport random as r\ns = <span class=\"pl-en\">c.initscr</span>()\nw = c.newwin(3,7,9,9)\n<span class=\"pl-en\">w.border</span>()\n<span class=\"pl-k\">while</span> 1:\n    c = <span class=\"pl-en\">s.getch</span>()\n    <span class=\"pl-k\">if</span> (c == 32): <span class=\"pl-c\"><span class=\"pl-c\">#</span> Press Spacebar</span>\n        w.mvwin(r.randint(2,25),r.randint(2,70))\n    w.addstr(1,1,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F@*K!<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-en\">w.refresh</span>()</pre></div>\n<ul dir=\"auto\">\n<li>Next time your publishing friends say they can't use the command line, let them know about</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/XrfO5M9MbY\"><pre>❯❯ https://t.co/XrfO5M9MbY</pre></div>\n<ul dir=\"auto\">\n<li>The ? matches any one character in that place, * matches 0 or more of any character</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l 091?17*.jpg\"><pre>❯❯ ls -l 091<span class=\"pl-k\">?</span>17<span class=\"pl-k\">*</span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>sshfs is a util that uses FUSE and SSH to mount a remote directory as a local one.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Deb: ❯❯ apt-get install sshfs\nMac OSX: ❯❯ brew install sshfs\nRed Hat: ❯❯ yum install fuse-sshfs\nYes Arch too: ❯❯ pacman -S sshfs\n\n❯❯ sshfs user@remotehost: /remotedir localdir\"><pre>Deb: ❯❯ apt-get install sshfs\nMac OSX: ❯❯ brew install sshfs\nRed Hat: ❯❯ yum install fuse-sshfs\nYes Arch too: ❯❯ pacman -S sshfs\n\n❯❯ sshfs user@remotehost: /remotedir localdir</pre></div>\n<ul dir=\"auto\">\n<li>Sort data.csv by the 5th column's numeric values in descending order</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -t, -k5nr data.csv | less\"><pre>❯❯ sort -t, -k5nr data.csv <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>Count how many times per second the word love is used on Twitter in real time.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t stream search -l love |pv -l  &gt;/dev/null\"><pre>❯❯ t stream search -l love <span class=\"pl-k\">|</span>pv -l  <span class=\"pl-k\">&gt;</span>/dev/null</pre></div>\n<ul dir=\"auto\">\n<li>Forgot your pres. remote ? use your phone</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh machine &quot;while read -r; do DISPLAY=:0 xdotool getactivewindow key space; done\"><pre>❯❯ ssh machine <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>while read -r; do DISPLAY=:0 xdotool getactivewindow key space; done</span></pre></div>\n<ul dir=\"auto\">\n<li>Math properties of 0 and unset variables</li>\n</ul>\n<p dir=\"auto\">(disclaimer: I received $0 for this tweet and have not \"sold out\")</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $((you**IBM))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span>you<span class=\"pl-k\">**</span>IBM<span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Edit binary files in a vi like editor</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ bvi GANDALF.CHA\"><pre>❯❯ bvi GANDALF.CHA</pre></div>\n<ul dir=\"auto\">\n<li>Setup vim so that scrolling within a file will provide 5 lines of preceding context before the cursor</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set scrolloff=5\"><pre>❯❯ :set scrolloff=5</pre></div>\n<ul dir=\"auto\">\n<li>Make your own spooky noises with sox</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth sin 900 bend 0.3,800,1 bend 1.2,-150,1 trim 0 3.5 reverb -w\"><pre>❯❯ play -n synth sin 900 bend 0.3,800,1 bend 1.2,-150,1 trim 0 3.5 reverb -w</pre></div>\n<ul dir=\"auto\">\n<li>Get the creation date of a domain. Happy anniversary Slashdot</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ whois slashdot.org | awk '/Creation Date/{print $NF}'\"><pre>❯❯ whois slashdot.org <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Creation Date/{print $NF}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Print the first 5 log lines from each day in syslog</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk 'a[$1 $2]++ &lt; 5' /var/log/system.log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>a[$1 $2]++ &lt; 5<span class=\"pl-pds\">'</span></span> /var/log/system.log</pre></div>\n<ul dir=\"auto\">\n<li>Please watch my recent presentation on using awk to analyze logs from the @Bro_IDS</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/eAOg5uEehJ\"><pre>❯❯ https://t.co/eAOg5uEehJ</pre></div>\n<ul dir=\"auto\">\n<li>Print the longest line in quotes.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk 'length &gt; max { max=length;maxline=$0 } END { print maxline; }' quotes.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>length &gt; max { max=length;maxline=$0 } END { print maxline; }<span class=\"pl-pds\">'</span></span> quotes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Can't wait for the next paycheck? I made 100MB in 5 seconds working from the comfort of my own home</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yum makecache fast\"><pre>❯❯ yum makecache fast</pre></div>\n<ul dir=\"auto\">\n<li>Posting this just because it's so awesome. :-)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/5NFbDt1gmF\"><pre>❯❯ https://t.co/5NFbDt1gmF</pre></div>\n<ul dir=\"auto\">\n<li>Generate line stats of a problem over time in old logs. FIXED</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in log.{48..1}.gz ; do printf &quot;$i\\\\t&quot; ; zgrep problem $i | wc -l ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> log.{48..1}.gz <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-cce\">\\\\</span>t<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> zgrep problem <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">|</span> wc -l <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Alt. way you can exclude items from a glob match is to expand the glob with Ctrl-x * and then just remove the items you don't want</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [C-x] *\"><pre>❯❯ [C-x] <span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Measure the disk space used by directories starting with a-m, skip exports dir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh [a-m]*/ --exclude=export/\"><pre>❯❯ du -sh [a-m]<span class=\"pl-k\">*</span>/ --exclude=export/</pre></div>\n<ul dir=\"auto\">\n<li>Measure the disk space used by directories AND FILES starting with a-m, skip export dir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh -I export [a-m]*\"><pre>❯❯ du -sh -I <span class=\"pl-k\">export</span> [a-m]<span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Decode a hex encoded string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo %42%65%20%63%61%72%65%66%75%6c%20%77%68%61%74%2f%68%6f%77%20%79%6f%75%20%64%65%63%6f%64%65%0a | xxd -p -r\"><pre>❯❯ <span class=\"pl-c1\">echo</span> %42%65%20%63%61%72%65%66%75%6c%20%77%68%61%74%2f%68%6f%77%20%79%6f%75%20%64%65%63%6f%64%65%0a <span class=\"pl-k\">|</span> xxd -p -r</pre></div>\n<ul dir=\"auto\">\n<li>Show a list of the other candidates for an open source SMB service. Happy 25 Years Samba!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look . | egrep &quot;^s.*m.*b&quot; | egrep &quot;^.{4,9}$\"><pre>❯❯ look <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^s.*m.*b<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^.{4,9}$</span></pre></div>\n<ul dir=\"auto\">\n<li>Stats for most common DOW for these wav files between May and Sept</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls 2017-0[5-9]-??.wav |cut -c 1-11 |date -f- +%A |sort|uniq -c|sort -nr\"><pre>❯❯ ls 2017-0[5-9]-<span class=\"pl-k\">??</span>.wav <span class=\"pl-k\">|</span>cut -c 1-11 <span class=\"pl-k\">|</span>date -f- +%A <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -nr</pre></div>\n<ul dir=\"auto\">\n<li>Base conversion: calculate binary 1101 ...</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf '%x\\\\n' $((2#1101))\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>%x\\\\n<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">2#1101</span><span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Please raise your bar for what you consider proof of pwn</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ clear ; printf &quot;root@www.equifax.com # &quot;; sleep 1 ; scrot -bu CanBeFaked.png\"><pre>❯❯ clear <span class=\"pl-k\">;</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>root@www.equifax.com # <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep 1 <span class=\"pl-k\">;</span> scrot -bu CanBeFaked.png</pre></div>\n<ul dir=\"auto\">\n<li>This is an easy way to join a file into one line if you're in a hurry. Be careful with large data though, might truncate</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xargs &lt; file.txt\"><pre>❯❯ xargs <span class=\"pl-k\">&lt;</span> file.txt</pre></div>\n<ul dir=\"auto\">\n<li>compare folder contents and show the difference @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  diff -rq dir1 dir2\"><pre>❯❯  diff -rq dir1 dir2</pre></div>\n<ul dir=\"auto\">\n<li>This will load your key into the ssh-agent session so that you can login to hosts without requiring your passphrase each time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-add\"><pre>❯❯ ssh-add</pre></div>\n<ul dir=\"auto\">\n<li>Have more than one tmux sessions running? Start tmux first and this keystroke lets you choose other tmux sessions easily</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-b] s\"><pre>❯❯ [Ctrl-b] s</pre></div>\n<ul dir=\"auto\">\n<li>Fixed headline for a @zackwhittaker article</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks https://t.co/TOoyPwWBsx |sed -e 's/Apache Struts security flaw/the fact that/' |less\"><pre>❯❯ elinks https://t.co/TOoyPwWBsx <span class=\"pl-k\">|</span>sed -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/Apache Struts security flaw/the fact that/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>less</pre></div>\n<ul dir=\"auto\">\n<li>Sometimes error text scrolls by too fast and you can't read it. Try sending STDOUT to /dev/null to see STDERR</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ column -t log &gt; /dev/null\"><pre>❯❯ column -t log <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>Did you know that if your output from 'less' is a pipe, it behaves like cat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less log log.2 log.3 | grep &quot; 404 &quot; | more\"><pre>❯❯ less log log.2 log.3 <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> 404 <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> more</pre></div>\n<ul dir=\"auto\">\n<li>Sometimes in cases where columns are truncated, you can make them visible by passing output through cat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -l '*4.10.0*' | cat\"><pre>❯❯ dpkg -l <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*4.10.0*<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> cat</pre></div>\n<ul dir=\"auto\">\n<li>Run sudo on the last command in your history. Be careful though.  &amp; [Ctrl-a] sudo can be fast too and perhaps safer</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo !!\"><pre>❯❯ sudo <span class=\"pl-k\">!!</span></pre></div>\n<ul dir=\"auto\">\n<li>Infinite \"music\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ perl -e \\'use bytes; for($t=0;;$t++){ print chr($t*(($t &gt; &gt;13|$t &gt; &gt;8)&amp;30&amp;$t &gt; &gt;4)); }\\' | play -t raw -b8 -r8k -e un - vol 0.5\"><pre>❯❯ perl -e <span class=\"pl-cce\">\\'</span>use bytes<span class=\"pl-k\">;</span> for(<span class=\"pl-smi\">$t</span>=0<span class=\"pl-k\">;;</span><span class=\"pl-smi\">$t</span>++){ print chr(<span class=\"pl-smi\">$t</span><span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">((</span><span class=\"pl-smi\">$t</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">13</span><span class=\"pl-k\">|</span><span class=\"pl-smi\">$t</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">8</span>)<span class=\"pl-k\">&amp;</span><span class=\"pl-c1\">30</span><span class=\"pl-k\">&amp;</span><span class=\"pl-smi\">$t</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">4</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> }<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> play -t raw -b8 -r8k -e un - vol 0.5</pre></div>\n<ul dir=\"auto\">\n<li>\"Infinite\" data breach</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do rig |head -1 |tr \\'\\\\n\\' ,;echo $RANDOM{,,,,} |tr -d \\' \\' ;done |sed -r -e \\'s/,(...)(..)(....).*/,\\\\1-\\\\2-\\\\3/\\'\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> rig <span class=\"pl-k\">|</span>head -1 <span class=\"pl-k\">|</span>tr <span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> ,<span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$RANDOM</span>{,,,,} <span class=\"pl-k\">|</span>tr -d <span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>sed -r -e <span class=\"pl-cce\">\\'</span>s/,(...)(..)(....).<span class=\"pl-k\">*</span>/,<span class=\"pl-cce\">\\\\</span>1-<span class=\"pl-cce\">\\\\</span>2-<span class=\"pl-cce\">\\\\</span>3/<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>39 character infinite ASCII maze generator</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -ao &quot;[/\\\\\\\\]&quot; /dev/urandom|tr -d \\\\\\\\n\"><pre>❯❯ grep -ao <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[/<span class=\"pl-cce\">\\\\\\\\</span>]<span class=\"pl-pds\">\"</span></span> /dev/urandom<span class=\"pl-k\">|</span>tr -d <span class=\"pl-cce\">\\\\\\\\</span>n</pre></div>\n<ul dir=\"auto\">\n<li>Pretend you are on a starship (Uses sox)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1\"><pre>❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1</pre></div>\n<ul dir=\"auto\">\n<li>Rename all non-hidden files under current directory by replacing spaces with underscores. Uses Larry Wall's 'rename</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rename 's/ /_/g' *\"><pre>❯❯ rename <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/ /_/g<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Create an alias for awk that includes your own custom awk functions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias ohmyawk='awk -i ~/.awk/myfunctions'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> ohmyawk=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>awk -i ~/.awk/myfunctions<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show the most recent 20 lines of dmesg with the times converted to local human readable times</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dmesg -T | tail -n20\"><pre>❯❯ dmesg -T <span class=\"pl-k\">|</span> tail -n20</pre></div>\n<ul dir=\"auto\">\n<li>Bro_IDS cols by name in awk</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F\\\\\\\\t \\'/^#fields/{for (i=2;i&amp;lt;=NF;i++){bro[$i]=i-1}} {print $bro[&quot;=ts&quot;] FS $bro[&quot;id.resp_h&quot;]}\\' http.log\"><pre>❯❯ awk -F<span class=\"pl-cce\">\\\\\\\\</span>t <span class=\"pl-cce\">\\'</span>/^<span class=\"pl-c\"><span class=\"pl-c\">#</span>fields/{for (i=2;i&amp;lt;=NF;i++){bro[$i]=i-1}} {print $bro[\"=ts\"] FS $bro[\"id.resp_h\"]}\\' http.log</span></pre></div>\n<ul dir=\"auto\">\n<li>Remove all the exif metadata tags from photo.jpg to improve privacy before uploading. Thanks @dmpop</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiftool -all= photo.jpg\"><pre>❯❯ exiftool -all= photo.jpg</pre></div>\n<ul dir=\"auto\">\n<li>If you can't make it to watch totality</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ stellarium --sky-date 20170821 --sky-time 14:27:00 --longitude 87.342581W --latitude 36.782564N\"><pre>❯❯ stellarium --sky-date 20170821 --sky-time 14:27:00 --longitude 87.342581W --latitude 36.782564N</pre></div>\n<ul dir=\"auto\">\n<li>Solve the basic arithmetic CAPTCHA</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -dump https://t.co/FfH8nmk7pB | awk -F: '/Math question:/{print $2}' | bc\"><pre>❯❯ elinks -dump https://t.co/FfH8nmk7pB <span class=\"pl-k\">|</span> awk -F: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Math question:/{print $2}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Get a list of 10/8 internal IPs showing up in col 3 or 4</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$3~/^src:10\\\\./{print $3};$4~/^dest:10\\\\./{print $4}' network.log |sort |uniq\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$3~/^src:10\\\\./{print $3};$4~/^dest:10\\\\./{print $4}<span class=\"pl-pds\">'</span></span> network.log <span class=\"pl-k\">|</span>sort <span class=\"pl-k\">|</span>uniq</pre></div>\n<ul dir=\"auto\">\n<li>Poly synth. Press asdfghj. Uses sox</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=CDEFGAB;l=asdfghj;while read -n1 k;do x=$(tr $l $n &lt; $k);play -qn synth pl ${x}3 fade 0 .7 &amp; done\"><pre>❯❯ n=CDEFGAB<span class=\"pl-k\">;</span>l=asdfghj<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> -n1 k<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> x=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tr <span class=\"pl-smi\">$l</span> <span class=\"pl-smi\">$n</span> <span class=\"pl-k\">&lt;</span> <span class=\"pl-smi\">$k</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>play -qn synth pl <span class=\"pl-smi\">${x}</span>3 fade 0 .7 <span class=\"pl-k\">&amp;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Asked 5 years ago this month</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks https://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor | grep viewed\"><pre>❯❯ elinks https://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor <span class=\"pl-k\">|</span> grep viewed</pre></div>\n<ul dir=\"auto\">\n<li>Maybe this is the problem. The vi man page doesn't even mention how to quit</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man vi | grep -i quit\"><pre>❯❯ man vi <span class=\"pl-k\">|</span> grep -i quit</pre></div>\n<ul dir=\"auto\">\n<li>Breakup large log by syslog month/day and recompress</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat month.log.gz | awk \\'{print $0 | &quot;gzip -v9c &gt; brokenup.log-&quot;$1&quot;_&quot;$2&quot;.gz&quot;}\\'\"><pre>❯❯ zcat month.log.gz <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$0</span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gzip -v9c &gt; brokenup.log-<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$1</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$2</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.gz<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>What speakers are not on the attendees list</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -23 &lt;(sort speaker.emails |tr A-Z a-z |uniq) &lt;(sort attendee.emails |tr A-Z a-z |uniq)\"><pre>❯❯ comm -23 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort speaker.emails <span class=\"pl-k\">|</span>tr A-Z a-z <span class=\"pl-k\">|</span>uniq<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort attendee.emails <span class=\"pl-k\">|</span>tr A-Z a-z <span class=\"pl-k\">|</span>uniq<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>GNU</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Geez, it sure does take a while for sort to print its help information.&quot; (Hint: It\\'s --help)\"><pre>❯❯ Geez, it sure does take a <span class=\"pl-k\">while</span> <span class=\"pl-k\">for</span> sort to print its <span class=\"pl-c1\">help</span> information.<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> (Hint: It\\'s --help)</span></pre></div>\n<ul dir=\"auto\">\n<li>Format a list of emails so that when you paste them into Outlook (ugh!), it breaks them up into individual addrs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr $'\\\\n' \\\\; &lt; email-list\"><pre>❯❯ tr <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">'</span></span> <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">&lt;</span> email-list</pre></div>\n<ul dir=\"auto\">\n<li>Produce stats on how many images you took on each day, regardless of strange filenaming schemes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ stat -c %y *.jpg | cut -c1-10 | uniq -c\"><pre>❯❯ stat -c %y <span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">|</span> cut -c1-10 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Produce stats on how many photos you took on each day to help find the ones in large batches</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -1 20170*.JPG| cut -c1-8 | uniq -c\"><pre>❯❯ ls -1 20170<span class=\"pl-k\">*</span>.JPG<span class=\"pl-k\">|</span> cut -c1-8 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Print out the total local disk space you are using. Thanks @inc002</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -lk | awk \\'/^\\\\//{ SUM += $3 } END { print SUM/2**20 &quot; GiB&quot; }\\'\"><pre>❯❯ df -lk <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>/^<span class=\"pl-cce\">\\\\</span>//{ SUM += <span class=\"pl-smi\">$3</span> } END { print SUM/2<span class=\"pl-k\">**</span>20 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> GiB<span class=\"pl-pds\">\"</span></span> }<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Get a list of instructors from a webpage</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -dump-width 1000 -dump https://t.co/Jd20vFLeRk | awk -F: '/Instructor/{print $2}'\"><pre>❯❯ elinks -dump-width 1000 -dump https://t.co/Jd20vFLeRk <span class=\"pl-k\">|</span> awk -F: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Instructor/{print $2}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>You can put this in your shell rc to <em>help</em> protect yourself <em>specifically</em> from :(){ :|:&amp; };:</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :(){ true; };readonly -f :\"><pre>❯❯ <span class=\"pl-en\">:</span>(){ <span class=\"pl-c1\">true</span>; }<span class=\"pl-k\">;</span><span class=\"pl-k\">readonly</span> -f <span class=\"pl-c1\">:</span></pre></div>\n<ul dir=\"auto\">\n<li>Generate a list of the emails($3) of speakers($8) in an attendee file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F\\\\\\\\t -v IGNORECASE=1 '$8~/speaker/{print $3}' attendees.tsv\"><pre>❯❯ awk -F<span class=\"pl-cce\">\\\\\\\\</span>t -v IGNORECASE=1 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$8~/speaker/{print $3}<span class=\"pl-pds\">'</span></span> attendees.tsv</pre></div>\n<ul dir=\"auto\">\n<li>Use -D to create a SOCKS5 tunnel inside your SSH connection. Some programs (like a web browser) can use these</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -D 1917 you@remoteho.st\"><pre>❯❯ ssh -D 1917 you@remoteho.st</pre></div>\n<ul dir=\"auto\">\n<li>Using a \\ before a command also turns off programmable auto tab completion when the extension is not recognized</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\mpg123 audio&lt;TAB &gt;\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>mpg123 audio<span class=\"pl-k\">&lt;</span>TAB <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>cd with no arguments will return you to $HOME</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>Watch the Unix clock in style as it approaches 1.5 billion seconds.  &gt;10 hours to go</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while date +%s | figlet ; do sleep 1 ; clear ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> date +%s <span class=\"pl-k\">|</span> figlet <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep 1 <span class=\"pl-k\">;</span> clear <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Backup pictures while on travel, but exclude larger RAW images for now</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync -zav -e ssh . user@remote:europe-backup/ --exclude='*.CR2'\"><pre>❯❯ rsync -zav -e ssh <span class=\"pl-c1\">.</span> user@remote:europe-backup/ --exclude=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>*.CR2<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Render #markdown in the shell.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ function mdr() { pandoc $1 | lynx -stdin -dump }\"><pre>❯❯ <span class=\"pl-k\">function</span> <span class=\"pl-en\">mdr()</span> { pandoc <span class=\"pl-smi\">$1</span> <span class=\"pl-k\">|</span> lynx -stdin -dump }</pre></div>\n<ul dir=\"auto\">\n<li>Kill process if its not updating files (5 min)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [[ $( find $HOME/output -type f -mmin -5 | wc -l ) -eq 0 ]] &amp;&amp; pkill -f '/usr/bin/whatever'\"><pre>❯❯ [[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> find <span class=\"pl-smi\">$HOME</span>/output -type f -mmin -5 <span class=\"pl-k\">|</span> wc -l <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">-eq</span> 0 ]] <span class=\"pl-k\">&amp;&amp;</span> pkill -f <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/usr/bin/whatever<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Using your group privilege, mount (removable drive) /dev/sdc1 as if it automounted with its name</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ udisksctl mount -b /dev/sdc1\"><pre>❯❯ udisksctl mount -b /dev/sdc1</pre></div>\n<ul dir=\"auto\">\n<li>Check the weather for the next few days in Alexandria</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl http://wttr.in/Alexandria\"><pre>❯❯ curl http://wttr.in/Alexandria</pre></div>\n<ul dir=\"auto\">\n<li>A \"rainbow\" in your shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 231 -1 16)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 231 -1 16<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Get YT autogen subtitles</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ youtube-dl --write-auto-sub -f 139 -o subtitles CUdwDEKlDrw; grep '&lt;c.color' subtitles.en.vtt|sed 's/&lt;[^ &gt;]\\\\+ &gt;//g'\"><pre>❯❯ youtube-dl --write-auto-sub -f 139 -o subtitles CUdwDEKlDrw<span class=\"pl-k\">;</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;c.color<span class=\"pl-pds\">'</span></span> subtitles.en.vtt<span class=\"pl-k\">|</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/&lt;[^ &gt;]\\\\+ &gt;//g<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Print a list of all the classes defined in a #Java jar</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ jar tvf path/to/some.jar | awk '{print $NF}\"><pre>❯❯ jar tvf path/to/some.jar <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $NF}</span></pre></div>\n<ul dir=\"auto\">\n<li>If your Linux device names are long enough that it wraps lines, try using -hP and pipe to column for nicer output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -hP | column -t\"><pre>❯❯ df -hP <span class=\"pl-k\">|</span> column -t</pre></div>\n<ul dir=\"auto\">\n<li>Randomware</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dd if=/dev/random of=dont-run-this.bin bs=128 count=$RANDOM ; chmod a+x dont-run-this.bin\"><pre>❯❯ dd if=/dev/random of=dont-run-this.bin bs=128 count=<span class=\"pl-smi\">$RANDOM</span> <span class=\"pl-k\">;</span> chmod a+x dont-run-this.bin</pre></div>\n<ul dir=\"auto\">\n<li>Show how many emails are distinctly on the CTSC sw vuln list for @TrustedCI</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -13 &lt;(sort announce-inf-l) &lt;(sort announce-sw-l) | wc -l\"><pre>❯❯ comm -13 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort announce-inf-l<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort announce-sw-l<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>Sed explained with examples</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/7ZyB9d2d2K\"><pre>❯❯ https://t.co/7ZyB9d2d2K</pre></div>\n<ul dir=\"auto\">\n<li>Print the number and column name to help write awk expressions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ head -1 data.csv | tr , $'\\\\n' | nl\"><pre>❯❯ head -1 data.csv <span class=\"pl-k\">|</span> tr , <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> nl</pre></div>\n<ul dir=\"auto\">\n<li>Use rlwrap to add readline functionality to nc (or other cmds). Thx rk[ghost] on</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rlwrap nc smtp.example 25\"><pre>❯❯ rlwrap nc smtp.example 25</pre></div>\n<ul dir=\"auto\">\n<li>Pause execution of any process called render. As if you pressed Ctrl-Z in shell. Resume with 'killall -CONT render</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ killall -STOP render\"><pre>❯❯ killall -STOP render</pre></div>\n<ul dir=\"auto\">\n<li>Finish a download started by a previous instance of wget, or even by another program. 56K respect</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -c https://t.co/dEZYMEPAH5\"><pre>❯❯ wget -c https://t.co/dEZYMEPAH5</pre></div>\n<ul dir=\"auto\">\n<li>Tell the Linux kernel that there have been partition table changes. Great when running live after fdisk</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo partprobe\"><pre>❯❯ sudo partprobe</pre></div>\n<ul dir=\"auto\">\n<li>Find out what country/state/city an IP is probably \"located\" in. No browser required (geoip-bin dpkg)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ geoiplookup 73.250.181.107\"><pre>❯❯ geoiplookup 73.250.181.107</pre></div>\n<ul dir=\"auto\">\n<li>How to \"make\" /dev/one (377 in octal is 0xFF hex or all 8 bits on, but you knew that :)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr \\'\\\\000\\' \\'\\\\377\\' &lt; /dev/zero\"><pre>❯❯ tr <span class=\"pl-cce\">\\'\\\\</span>000<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'\\\\</span>377<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">&lt;</span> /dev/zero</pre></div>\n<ul dir=\"auto\">\n<li>For maps in your terminal from OpenStreetMap. Yes really. <a href=\"https://t.co/FckeNVD5Nm\" rel=\"nofollow\">https://t.co/FckeNVD5Nm</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ telnet mapscii.me\"><pre>❯❯ telnet mapscii.me</pre></div>\n<ul dir=\"auto\">\n<li>Another TUI program providing network statistics in the terminal. Thx @maxmeranda @hholst80 for reminding me about this cool command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ bmon\"><pre>❯❯ bmon</pre></div>\n<ul dir=\"auto\">\n<li>iptraf is a nice standalone real time network monitoring and stats utility for Linux that runs in the terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ iptraf\"><pre>❯❯ iptraf</pre></div>\n<ul dir=\"auto\">\n<li>Force each dd command in the process table to output its current status (blocks written, etc). The USR1 signal does this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ killall -USR1 dd\"><pre>❯❯ killall -USR1 dd</pre></div>\n<ul dir=\"auto\">\n<li>Recover deleted files from /dev/sdc1. Right now I'm listening to \"deleted\" mp3s of Sigur Rós from a reused thumb drive</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ photorec /dev/sdc1\"><pre>❯❯ photorec /dev/sdc1</pre></div>\n<ul dir=\"auto\">\n<li>Show a 3 month view (last month, current month, next month) in the Linux and FreeBSD versions of cal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cal -3\"><pre>❯❯ cal -3</pre></div>\n<ul dir=\"auto\">\n<li>Change less' binary view format to not use reverse video on 8-bit chars. Used this for a screenshot</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LESSBINFMT=&quot;*n&lt;%02X &gt;&quot; less /bin/ls\"><pre>❯❯ LESSBINFMT=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*n&lt;%02X &gt;<span class=\"pl-pds\">\"</span></span> less /bin/ls</pre></div>\n<ul dir=\"auto\">\n<li>Duo from two geolocations on the same date. k1=dateuser k2=geolocation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ The last one prints cases where a user tries to authenticate to\"><pre>❯❯ The last one prints cases where a user tries to authenticate to</pre></div>\n<ul dir=\"auto\">\n<li>Print lines in log where epoch time (col 1) is before 8am or after 5pm EDT</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '($1 % 86400 &lt; 43200 || $1 % 86400 &gt; 75600) {print}' log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>($1 % 86400 &lt; 43200 || $1 % 86400 &gt; 75600) {print}<span class=\"pl-pds\">'</span></span> log</pre></div>\n<ul dir=\"auto\">\n<li>Change to /pub and then change back to the dir you were in before. Thanks for the drinks @jed &amp; @laufers</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd /pub ; cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> /pub <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>World maps from OpenStreetMap right in your terminal w/ mouse support. Arrow keys &amp; a/z to zoom, or mouse. Thx @adman_X</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ telnet mapscii\\\\.me\"><pre>❯❯ telnet mapscii<span class=\"pl-cce\">\\\\</span>.me</pre></div>\n<ul dir=\"auto\">\n<li>There is something kinda fun about using your mouse scroll wheel in elinks from anywhere</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks https://t.co/yBh9vXFUPq\"><pre>❯❯ elinks https://t.co/yBh9vXFUPq</pre></div>\n<ul dir=\"auto\">\n<li>Print the Unicode emoticons block codes and symbols</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in 1F6{0..4}{{0..9},{A..F}} ; do printf &quot;\\\\\\\\\\\\\\\\U$i \\\\U$i\\\\n&quot; ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> 1F6{0..4}{{0..9},{A..F}} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\\\\\\\\\\\\\</span>U<span class=\"pl-smi\">$i</span> <span class=\"pl-cce\">\\\\</span>U<span class=\"pl-smi\">$i</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Some commands send their help output to STDERR, Using |&amp; in BASH 4+ sends STDERR to STDIN of next command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ snmpwalk -h |&amp; grep OID\"><pre>❯❯ snmpwalk -h <span class=\"pl-k\">|</span><span class=\"pl-k\">&amp;</span> grep OID</pre></div>\n<ul dir=\"auto\">\n<li>TheUnixWay</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ If you happen to use @HipChat (like at work), did you know you can use s/find/replace/ in it just like in sed?\"><pre>❯❯ If you happen to use @HipChat (like at work), did you know you can use s/find/replace/ <span class=\"pl-k\">in</span> it just like <span class=\"pl-k\">in</span> sed<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>2 commands, 1 grep</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ { dig +short AAAA towel.blinkenlights\\\\.nl ; dig +short A towel.blinkenlights\\\\.nl; } | grep --color=always 42\"><pre>❯❯ { dig +short AAAA towel.blinkenlights<span class=\"pl-cce\">\\\\</span>.nl <span class=\"pl-k\">;</span> dig +short A towel.blinkenlights<span class=\"pl-cce\">\\\\</span>.nl<span class=\"pl-k\">;</span> } <span class=\"pl-k\">|</span> grep --color=always 42</pre></div>\n<ul dir=\"auto\">\n<li>StarWars in ASCII. Also, towel!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ telnet towel.blinkenlights\\\\.nl\"><pre>❯❯ telnet towel.blinkenlights<span class=\"pl-cce\">\\\\</span>.nl</pre></div>\n<ul dir=\"auto\">\n<li>infosec <a href=\"https://t.co/V6ubXhDywL\" rel=\"nofollow\">https://t.co/V6ubXhDywL</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [ Attacks Subtitle Parser ]\"><pre>❯❯ [ Attacks Subtitle Parser ]</pre></div>\n<ul dir=\"auto\">\n<li>Generate list of all authors in git repos under repos/</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for repo in repos/* ; do git -C &quot;$repo&quot; log | grep ^Author: ; done | sort | uniq\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">repo</span> <span class=\"pl-k\">in</span> repos/<span class=\"pl-k\">*</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> git -C <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$repo</span><span class=\"pl-pds\">\"</span></span> log <span class=\"pl-k\">|</span> grep ^Author: <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq</pre></div>\n<ul dir=\"auto\">\n<li>Function to shorten this commonly used command line pattern &amp; allow for options for final sort</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ topuniq(){ sort|uniq -c|sort &quot;${@:--rn}&quot;; }\"><pre>❯❯ <span class=\"pl-en\">topuniq</span>(){ sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${<span class=\"pl-k\">@:-</span>-rn}</span><span class=\"pl-pds\">\"</span></span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Check fails from non-workplace</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, \\'$6==&quot;FAILURE&quot; &amp;&amp; $10 == &quot;US&quot; &amp;&amp; $12 !~ /(Walla Walla|Crystal Lake)/\\' duo-authentication-report.csv\"><pre>❯❯ awk -F, <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$6</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>FAILURE<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$1</span>0 == <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>US<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$1</span>2 <span class=\"pl-k\">!</span>~ /(Walla Walla<span class=\"pl-k\">|</span>Crystal Lake)/<span class=\"pl-cce\">\\'</span> duo-authentication-report.csv</pre></div>\n<ul dir=\"auto\">\n<li>ImageMagick's command 'animate' allows you to view animated gifs direct from the URL</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ animate http://climagic\\\\.org/images/rice-spinner.gif\"><pre>❯❯ animate http://climagic<span class=\"pl-cce\">\\\\</span>.org/images/rice-spinner.gif</pre></div>\n<ul dir=\"auto\">\n<li>Add image to anim gif</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert spin.gif -coalesce -gravity NorthEast -draw \\'image over 0,0 0,0 &quot;credit.png&quot;\\' -layers Optimize spin2.gif\"><pre>❯❯ convert spin.gif -coalesce -gravity NorthEast -draw <span class=\"pl-cce\">\\'</span>image over 0,0 0,0 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credit.png<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span> -layers Optimize spin2.gif</pre></div>\n<ul dir=\"auto\">\n<li>Set the search jump target to 10 lines down so that you see 9 previous lines of context on searches within less</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less -j10 /var/log/syslog\"><pre>❯❯ less -j10 /var/log/syslog</pre></div>\n<ul dir=\"auto\">\n<li>You can use a bracketed command to pipe two find outputs into one tar</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ { find /one; find /two; } | tar zcvf one-and-two.tar.gz -T -\"><pre>❯❯ { find /one<span class=\"pl-k\">;</span> find /two<span class=\"pl-k\">;</span> } <span class=\"pl-k\">|</span> tar zcvf one-and-two.tar.gz -T -</pre></div>\n<ul dir=\"auto\">\n<li>7zip can also list the contents of iso images and extract them too. No need to mount the image</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ 7z l philip-glass-linux-0.8-minimal.iso\"><pre>❯❯ 7z l philip-glass-linux-0.8-minimal.iso</pre></div>\n<ul dir=\"auto\">\n<li>Use stat to display numerical values for file permissions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ stat -c '%a %n' * https://t.c...\"><pre>❯❯ stat -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>%a %n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span> https://t.c...</pre></div>\n<ul dir=\"auto\">\n<li>Check physical host for vuln. CVE-2017-5689</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lspci | grep -q -e MEI -e HECI &amp;&amp; echo &quot;Check your firmware for Intel AMT vulnerability&quot;\"><pre>❯❯ lspci <span class=\"pl-k\">|</span> grep -q -e MEI -e HECI <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Check your firmware for Intel AMT vulnerability<span class=\"pl-pds\">\"</span></span></pre></div>\n<ul dir=\"auto\">\n<li>I Vound Ze Force</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man zforce\"><pre>❯❯ man zforce</pre></div>\n<ul dir=\"auto\">\n<li>Know your limits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ getconf -a | sort -k2nr | grep MAX\"><pre>❯❯ getconf -a <span class=\"pl-k\">|</span> sort -k2nr <span class=\"pl-k\">|</span> grep MAX</pre></div>\n<ul dir=\"auto\">\n<li>Print the line before a line containing 'password' in the file 'config'</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '/password/{x;p};h' config\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/password/{x;p};h<span class=\"pl-pds\">'</span></span> config</pre></div>\n<ul dir=\"auto\">\n<li>List the filenames that contain the IP address 19.19.32.62 (-F = fixed string only for faster search)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -F -l 19.19.32.62 *.log\"><pre>❯❯ grep -F -l 19.19.32.62 <span class=\"pl-k\">*</span>.log</pre></div>\n<ul dir=\"auto\">\n<li>UndocumentedFeatures</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I've been using SSH for decades and I didn't even know this was possible. https://t.co/WubSNKshF5\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ve been using SSH for decades and I didn<span class=\"pl-pds\">'</span></span>t even know this was possible. https://t.co/WubSNKshF5</pre></div>\n<ul dir=\"auto\">\n<li>See what the word inconceivable really means. dict also shows thesaurus entries, which is quick and useful</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dict inconceivable\"><pre>❯❯ dict inconceivable</pre></div>\n<ul dir=\"auto\">\n<li>SSH version change</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ bro-cut -Cd ts host host_p unparsed_version &lt;software.log|awk -F\\\\\\\\t \\'$2==&quot;10.2.3.4&quot; &amp;&amp; $3==&quot;22&quot;{if(l!=$4){print;l=$4}}\\'\"><pre>❯❯ bro-cut -Cd ts host host_p unparsed_version <span class=\"pl-k\">&lt;</span>software.log<span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\\\\\</span>t <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$2</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>10.2.3.4<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$3</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>22<span class=\"pl-pds\">\"</span></span>{if(l<span class=\"pl-k\">!</span>=<span class=\"pl-smi\">$4</span>){print<span class=\"pl-k\">;</span>l=<span class=\"pl-smi\">$4</span>}}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>:D I guess they broke with the default info page format for this special info page. This cracked me up</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ info man\"><pre>❯❯ info man</pre></div>\n<ul dir=\"auto\">\n<li>GNU grep has not well documented options --no-group-separator and --group-seprator=\"\\xe2\\x96\\xac\\xe2\\x96\\xac\\xe2\\x96\\xac\\xe2\\x96\\xac\\xe2\\x96\\xac\\xe2\\x96\\xac\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -h --no-group-separator 404 *.log\"><pre>❯❯ grep -h --no-group-separator 404 <span class=\"pl-k\">*</span>.log</pre></div>\n<ul dir=\"auto\">\n<li>Play a video file recent.mp4 at 8x speed, looping it seamlessly forever</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer recent.mp4 -loop 0 -speed 8\"><pre>❯❯ mplayer recent.mp4 -loop 0 -speed 8</pre></div>\n<ul dir=\"auto\">\n<li>The authbind program allows a non-root user to listen on ports below 1024. Needs to be configured first though</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ authbind nc -v -l 80\"><pre>❯❯ authbind nc -v -l 80</pre></div>\n<ul dir=\"auto\">\n<li>WorldPenguinDay. Here is a video of me making Tux out of play-doh. <a href=\"https://t.co/jf3PaMopzn\" rel=\"nofollow\">https://t.co/jf3PaMopzn</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Its\"><pre>❯❯ Its</pre></div>\n<ul dir=\"auto\">\n<li>Dump information from a CDP frame received on eth0</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tcpdump -nn -v -i eth0 -s 1500 -c 1 'ether[20:2] == 0x2000'\"><pre>❯❯ tcpdump -nn -v -i eth0 -s 1500 -c 1 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ether[20:2] == 0x2000<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>You can reverse a set of \"records\" using tac with the -s option and a record separator. Used to make globe spin backwards</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tac -s &quot;^[[H\"><pre>❯❯ tac -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[[H</span></pre></div>\n<ul dir=\"auto\">\n<li>One world, no pv version</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ o=$(curl -Ls bit\\\\.ly/globe_vt);yes &quot;$o&quot;|perl -ne \\'$/=&quot;\\\\e[H&quot;;$\\\\=$/;print &quot;$_&quot;;select(undef,undef,undef,1/24);\\'\"><pre>❯❯ o=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>curl -Ls bit<span class=\"pl-cce\">\\\\</span>.ly/globe_vt<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$o</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>perl -ne <span class=\"pl-cce\">\\'</span>$/=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[H<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>$<span class=\"pl-cce\">\\\\</span>=$/<span class=\"pl-k\">;</span>print <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$_</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>select(undef,undef,undef,1/24)<span class=\"pl-k\">;</span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>ASCII globe animation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ oneworld=$( curl -Ls http://bit\\\\.ly/globe_vt );while sleep .1;do pv -L4220 -q  &lt; &quot;$oneworld&quot;;done\"><pre>❯❯ oneworld=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> curl -Ls http://bit<span class=\"pl-cce\">\\\\</span>.ly/globe_vt <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> sleep .1<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> pv -L4220 -q  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$oneworld</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>List traffic from inside to outside</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'$3~/^172\\\\.16\\\\./ &amp;&amp; $5!~/^172\\\\.16\\\\./{printf(&quot;%s %s\\\\n&quot;,strftime(&quot;%Y-%m-%d_%T&quot;, $1),$0)}\\' conn.log\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$3</span>~/^172<span class=\"pl-cce\">\\\\</span>.16<span class=\"pl-cce\">\\\\</span>./ <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$5</span><span class=\"pl-k\">!</span>~/^172<span class=\"pl-cce\">\\\\</span>.16<span class=\"pl-cce\">\\\\</span>./{printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s %s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,strftime(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y-%m-%d_%T<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">$1</span>),<span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span> conn.log</pre></div>\n<ul dir=\"auto\">\n<li>(remote: base64 -d &gt; file) On short files over complex transfer paths between hosts, try copy/paste the base64 output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ base64 -w4095 file\"><pre>❯❯ base64 -w4095 file</pre></div>\n<ul dir=\"auto\">\n<li>Get the entries with 4+ null fields and sort the entries by IPv4 (-V) in the 3rd column</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -- &quot;\\\\t-\\\\t-\\\\t-\\\\t-\\\\t&quot; entries.txt |sort -k3V\"><pre>❯❯ egrep -- <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>t-<span class=\"pl-cce\">\\\\</span>t-<span class=\"pl-cce\">\\\\</span>t-<span class=\"pl-cce\">\\\\</span>t-<span class=\"pl-cce\">\\\\</span>t<span class=\"pl-pds\">\"</span></span> entries.txt <span class=\"pl-k\">|</span>sort -k3V</pre></div>\n<ul dir=\"auto\">\n<li>CheckYourPrivilege @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  sudo -l\"><pre>❯❯  sudo -l</pre></div>\n<ul dir=\"auto\">\n<li>You can use -e multiple times for multiple expressions. Nice when you have multiple complex items</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -e foo -e bar -e baz file\"><pre>❯❯ grep -e foo -e bar -e baz file</pre></div>\n<ul dir=\"auto\">\n<li>Starts a WebSocket server and prints all requests to stdout @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  nc -k -l 4444\"><pre>❯❯  nc -k -l 4444</pre></div>\n<ul dir=\"auto\">\n<li>Generate list of installed RPM names(left align) and their packager in formated columns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --queryformat &quot;%-47{NAME} %{PACKAGER}\\\\n\"><pre>❯❯ rpm -qa --queryformat <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%-47{NAME} %{PACKAGER}<span class=\"pl-cce\">\\\\</span>n</span></pre></div>\n<ul dir=\"auto\">\n<li>Insert all the possible command line completions into the command line you are editing. Life, the Universe and Everything</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-* &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-<span class=\"pl-k\">*</span> <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Operate and get next line. This executes the current line from your history and on return gives you the next history line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-o &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-o <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This indicates to the program that there is no more input. In the shell, this usually closes the shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-d &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-d <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Delete everything from the cursor to the beginning of the line. This can also be used to clear a password attempt and start over</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-u &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-u <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Delete the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivalent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Incremental undo of command line edits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-_ &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-_ <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<h2 dir=\"auto\"></h2>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias find='sleep $((RANDOM%60+5))\"><pre>❯❯ <span class=\"pl-c1\">alias</span> find=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>sleep $((RANDOM%60+5))</span></pre></div>\n<ul dir=\"auto\">\n<li>Make the flag of Japan with ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 150x100 xc:white -fill red -draw 'circle 75,50 75,75' flagofjapan.png\"><pre>❯❯ convert -size 150x100 xc:white -fill red -draw <span class=\"pl-s\"><span class=\"pl-pds\">'</span>circle 75,50 75,75<span class=\"pl-pds\">'</span></span> flagofjapan.png</pre></div>\n<ul dir=\"auto\">\n<li>Pipe text from Wikipedia into sed, print regex+6 lines</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks https://t.co/3MFZmCM3PA |sed -n '/Article 12/,+6p'\"><pre>❯❯ elinks https://t.co/3MFZmCM3PA <span class=\"pl-k\">|</span>sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Article 12/,+6p<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>The pee command can run head and tail on same input. sponge waits for all the data first</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ping -c100 4.2.2.2 | sponge | pee head tail\"><pre>❯❯ ping -c100 4.2.2.2 <span class=\"pl-k\">|</span> sponge <span class=\"pl-k\">|</span> pee head tail</pre></div>\n<ul dir=\"auto\">\n<li>Poor man's hacker typer in the terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ locate --regex '\\\\.c$' | shuf | head -1 | xargs pv -q -L 20\"><pre>❯❯ locate --regex <span class=\"pl-s\"><span class=\"pl-pds\">'</span>\\\\.c$<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> shuf <span class=\"pl-k\">|</span> head -1 <span class=\"pl-k\">|</span> xargs pv -q -L 20</pre></div>\n<ul dir=\"auto\">\n<li>Jeez, how far back do these lastlogs go?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da|cut -c27-30|uniq|awk -v y=$(date +%Y) \\'{if(/Jan/){print $0;print &quot;-- &quot; y--}else{print}}\\'\"><pre>❯❯ last -da<span class=\"pl-k\">|</span>cut -c27-30<span class=\"pl-k\">|</span>uniq<span class=\"pl-k\">|</span>awk -v y=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y<span class=\"pl-pds\">)</span></span> <span class=\"pl-cce\">\\'</span>{if(/Jan/){print <span class=\"pl-smi\">$0</span><span class=\"pl-k\">;</span>print <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-- <span class=\"pl-pds\">\"</span></span> y--}else{print}}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Show directory size and sort by human readable amount (MB, GB, etc.). Requires GNU sort for -h option</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh */ | sort -h\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> sort -h</pre></div>\n<ul dir=\"auto\">\n<li>Copy files (cp) and preserve their timestamps and permissions (-a) while showing what is happening (-v)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cp -av /olddisk /newdisk\"><pre>❯❯ cp -av /olddisk /newdisk</pre></div>\n<ul dir=\"auto\">\n<li>Clear your copy buffer 10-20 seconds. OSX version</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do [ ! -z &quot;$a&quot; ] &amp;&amp; { a=&quot;&quot;; pbcopy  &lt; &quot;$a&quot;; } || a=$(pbpaste); sleep 10; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> [ <span class=\"pl-k\">!</span> <span class=\"pl-k\">-z</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$a</span><span class=\"pl-pds\">\"</span></span> ] <span class=\"pl-k\">&amp;&amp;</span> { a=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> pbcopy  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$a</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> } <span class=\"pl-k\">||</span> a=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>pbpaste<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> sleep 10<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Clear your copy buffer after 10-20 seconds</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do [ ! -z &quot;$a&quot; ] &amp;&amp; { a=&quot;&quot;; xsel  &lt; &quot;$a&quot;; } || a=$(xsel); sleep 10; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> [ <span class=\"pl-k\">!</span> <span class=\"pl-k\">-z</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$a</span><span class=\"pl-pds\">\"</span></span> ] <span class=\"pl-k\">&amp;&amp;</span> { a=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> xsel  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$a</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> } <span class=\"pl-k\">||</span> a=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>xsel<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> sleep 10<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>A unique really-realtime\\xe2\\x84\\xa2 chat experience on older Unix that maybe Randall never got to use</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ talk\"><pre>❯❯ talk</pre></div>\n<ul dir=\"auto\">\n<li>Convert Mac OS icon file into a set of images to edit. I just used that for custom firefox profiles</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ iconutil -c iconset firefox.icns\"><pre>❯❯ iconutil -c iconset firefox.icns</pre></div>\n<ul dir=\"auto\">\n<li>Auto type next $n on click</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=1;while :;do xinput --query-state 8|grep \\'button\\\\[1\\\\]=d\\' &amp;&amp;{ xdotool type &quot;$n&quot;; n=$[n+1]; };sleep 0.3;done\"><pre>❯❯ n=1<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> xinput --query-state 8<span class=\"pl-k\">|</span>grep <span class=\"pl-cce\">\\'</span>button<span class=\"pl-cce\">\\\\</span>[1<span class=\"pl-cce\">\\\\</span>]=d<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">&amp;&amp;</span>{ xdotool <span class=\"pl-c1\">type</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$n</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> n=$[n+1]<span class=\"pl-k\">;</span> }<span class=\"pl-k\">;</span>sleep 0.3<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Check the last modified date of a file over HTTP</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -sI https://t.co/DAQGsQi6wQ | grep Last-Modified\"><pre>❯❯ curl -sI https://t.co/DAQGsQi6wQ <span class=\"pl-k\">|</span> grep Last-Modified</pre></div>\n<ul dir=\"auto\">\n<li>!/bin/bash\\necho My cksum is 918329835' &gt; magic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo -e '\"><pre>❯❯ <span class=\"pl-c1\">echo</span> -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Tron lightcycles in the terminal or Etch-a-sketch. Or make a snake game</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/Kvo0jd2eTK\"><pre>❯❯ https://t.co/Kvo0jd2eTK</pre></div>\n<ul dir=\"auto\">\n<li>Meta</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ at 3pm  &lt; \\'t update &quot;Post an update at a later time to twitter. Like this one.&quot;\\'\"><pre>❯❯ at 3pm  <span class=\"pl-k\">&lt;</span> <span class=\"pl-cce\">\\'</span>t update <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Post an update at a later time to twitter. Like this one.<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the extended ASCII table. For @drscriptt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for x in {8,9,{A..F}}{{0..9},{A..F}} ; do printf &quot;$x %c\\\\n&quot; $( xxd -r  &lt; &quot;0 $x&quot; ) ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">in</span> {8,9,{A..F}}{{0..9},{A..F}} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$x</span> %c<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> xxd -r  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0 <span class=\"pl-smi\">$x</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>When lexical sorting messes up numeric ordering, use brace expansion to put file args in correct numeric order</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer movie-p{1..27}.m4v\"><pre>❯❯ mplayer movie-p{1..27}.m4v</pre></div>\n<ul dir=\"auto\">\n<li>Do an strace of evince and write all syscalls to logfiles even if it forks</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strace -s8192 -o evincetrace -ff evince file.pdf\"><pre>❯❯ strace -s8192 -o evincetrace -ff evince file.pdf</pre></div>\n<ul dir=\"auto\">\n<li>Print lines from columns.txt where the first column is the same as the second column</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$1==$2' columns.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$1==$2<span class=\"pl-pds\">'</span></span> columns.txt</pre></div>\n<ul dir=\"auto\">\n<li>Fill a file with a range of IPs from 10.0.1.1 - 10.0.4.254, one IP per line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;%s\\\\n&quot; 10.0.{1..4}.{1..254} &gt; network-ips.txt\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> 10.0.{1..4}.{1..254} <span class=\"pl-k\">&gt;</span> network-ips.txt</pre></div>\n<ul dir=\"auto\">\n<li>For lines with a specific IP in them, convert the epoch times to dates</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep 10.50.60.70 logs.txt | cut -f1 | sed 's/^/@/' | date -f -\"><pre>❯❯ grep 10.50.60.70 logs.txt <span class=\"pl-k\">|</span> cut -f1 <span class=\"pl-k\">|</span> sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^/@/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> date -f -</pre></div>\n<ul dir=\"auto\">\n<li>CLI clients for other popular services like Spotify, Tunein, IHeartRadio, etc. A quick search should find them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ There are also\"><pre>❯❯ There are also</pre></div>\n<ul dir=\"auto\">\n<li>Pandora music client for the command line. You may have to dl from github and compile. <a href=\"https://t.co/HBv7MZjR7A\" rel=\"nofollow\">https://t.co/HBv7MZjR7A</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pianobar\"><pre>❯❯ pianobar</pre></div>\n<ul dir=\"auto\">\n<li>NameCollisions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Co-worker: Do you use Slack?\\rMe: Yeah I've been using Slack since 1994 when it came on like 70 floppies.\\rCo-worker: Huh?\\r\"><pre>❯❯ Co-worker: Do you use Slack<span class=\"pl-k\">?</span><span class=\"pl-cce\">\\r</span>Me: Yeah I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ve been using Slack since 1994 when it came on like 70 floppies.\\rCo-worker: Huh?\\r</span></pre></div>\n<ul dir=\"auto\">\n<li>Perform arbitrarily large math, while disabling bc's \\ + newline output \"feature\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ BC_LINE_LENGTH=0 bc  &lt; &quot;2^4096\"><pre>❯❯ BC_LINE_LENGTH=0 bc  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2^4096</span></pre></div>\n<ul dir=\"auto\">\n<li>Show the full last modified epoch time including nanoseconds of /etc/passwd (GNU version)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;$(stat -c %y /etc/passwd)&quot; +%s.%N\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>stat -c %y /etc/passwd<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> +%s.%N</pre></div>\n<ul dir=\"auto\">\n<li>This is some of the best #UNIX humour I've even read. Warning: for geeks only.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/f75QV47eSd\"><pre>❯❯ https://t.co/f75QV47eSd</pre></div>\n<ul dir=\"auto\">\n<li>list all files (-a) in PWD with details (l) and order them by size (S) ascending (-r), make sizes human readable (-h)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -lShra\"><pre>❯❯ ls -lShra</pre></div>\n<ul dir=\"auto\">\n<li>Lookup allocation/\"ownership\" information for an IP address. Apparently a lot of IT folk still don't know this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ whois 66.163.186.42\"><pre>❯❯ whois 66.163.186.42</pre></div>\n<ul dir=\"auto\">\n<li>Backup IMDb board pages in cache</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mkdir ~/imdb/ ; egrep -lr 'imdb\\\\.com/.*/board/' ~/.cache/mozilla/firefox | xargs -I{} cp -va {} ~/imdb/\"><pre>❯❯ mkdir <span class=\"pl-k\">~</span>/imdb/ <span class=\"pl-k\">;</span> egrep -lr <span class=\"pl-s\"><span class=\"pl-pds\">'</span>imdb\\\\.com/.*/board/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">~</span>/.cache/mozilla/firefox <span class=\"pl-k\">|</span> xargs -I{} cp -va {} <span class=\"pl-k\">~</span>/imdb/</pre></div>\n<ul dir=\"auto\">\n<li>When you have 2+ tmux clients on the same session and another one is on a smaller window</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux list-clients ; tmux detach-client -t pts/22\"><pre>❯❯ tmux list-clients <span class=\"pl-k\">;</span> tmux detach-client -t pts/22</pre></div>\n<ul dir=\"auto\">\n<li>Because you shouldn't have to constantly be bombarded with ads for underwear when reading programming documentation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks\"><pre>❯❯ elinks</pre></div>\n<ul dir=\"auto\">\n<li>Read the BIOS on PC hardware. Thanks @Fr33Wor1d, better late than never</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dd if=/dev/mem bs=1k skip=768 count=256 2 &gt;/dev/null | strings -n 8\"><pre>❯❯ dd if=/dev/mem bs=1k skip=768 count=256 2 <span class=\"pl-k\">&gt;</span>/dev/null <span class=\"pl-k\">|</span> strings -n 8</pre></div>\n<ul dir=\"auto\">\n<li>Count the number of commas (,) in a text file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr -cd , &lt; file.txt | wc -m\"><pre>❯❯ tr -cd , <span class=\"pl-k\">&lt;</span> file.txt <span class=\"pl-k\">|</span> wc -m</pre></div>\n<ul dir=\"auto\">\n<li>Make a bunch of mount point directories all at once. All combos of sdb1 through sde9 inclusive</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo mkdir /mnt/sd{b..e}{1..9}\"><pre>❯❯ sudo mkdir /mnt/sd{b..e}{1..9}</pre></div>\n<ul dir=\"auto\">\n<li>Getting rid of query string in filename by surrounding it with {,}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mv image-file-with-query-string.jpg{?query-string=Z29vZCBqb2IK,}\"><pre>❯❯ mv image-file-with-query-string.jpg{<span class=\"pl-k\">?</span>query-string=Z29vZCBqb2IK,}</pre></div>\n<ul dir=\"auto\">\n<li>Look for email data on a hard drive, even if it was \"deleted\". Encrypt your FS!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo strings /dev/sdc | grep -C200 &quot;Received:\"><pre>❯❯ sudo strings /dev/sdc <span class=\"pl-k\">|</span> grep -C200 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Received:</span></pre></div>\n<ul dir=\"auto\">\n<li>% US pop. murdered 1960-2015</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -dump bit\\\\.ly/qutWZK|tr -d ,|sed -e \\'/^2015/q\\'|awk \\'/^[12]/{p=$6/$2*100; printf &quot;%d %0.4f%%\\\\n&quot;,$1,p}\\'\"><pre>❯❯ elinks -dump bit<span class=\"pl-cce\">\\\\</span>.ly/qutWZK<span class=\"pl-k\">|</span>tr -d ,<span class=\"pl-k\">|</span>sed -e <span class=\"pl-cce\">\\'</span>/^2015/q<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>/^[12]/{p=<span class=\"pl-smi\">$6</span>/<span class=\"pl-smi\">$2</span><span class=\"pl-k\">*</span>100<span class=\"pl-k\">;</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d %0.4f%%<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-smi\">$1</span>,p}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Change the hue of an image by -90 degrees. 50 = ( -90 * 100/180 ) + 100</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert bluethumb.png -modulate 100,100,50 greenthumb.png\"><pre>❯❯ convert bluethumb.png -modulate 100,100,50 greenthumb.png</pre></div>\n<ul dir=\"auto\">\n<li>Right-align text on 80 columns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -E ':a /.{80}/!{s/^/ /;ba}' file\"><pre>❯❯ sed -E <span class=\"pl-s\"><span class=\"pl-pds\">'</span>:a /.{80}/!{s/^/ /;ba}<span class=\"pl-pds\">'</span></span> file</pre></div>\n<ul dir=\"auto\">\n<li>CLIMagic video: Epic demo of how I watched Superbowl 46 over a netcat stream</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/iXz161lDEg\"><pre>❯❯ https://t.co/iXz161lDEg</pre></div>\n<ul dir=\"auto\">\n<li>Print the decimal encoded value of a ). The ' before the character tells printf to interpret the character this way</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;%d\\\\n&quot; )\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> )</pre></div>\n<ul dir=\"auto\">\n<li>Make URLs from data before foo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -B3 &quot;foo&quot; multilinedata.txt |egrep &quot;^Id:&quot; |while read x x id; do echo &quot;https://hostname/${id}&quot;; done\"><pre>❯❯ grep -B3 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span> multilinedata.txt <span class=\"pl-k\">|</span>egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^Id:<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> x x id<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://hostname/<span class=\"pl-smi\">${id}</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Get a sample of 10 lines from a large log file, 100,000 lines from the end of the file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -n100000 large.log | head\"><pre>❯❯ tail -n100000 large.log <span class=\"pl-k\">|</span> head</pre></div>\n<ul dir=\"auto\">\n<li>An interactive command line game challenge. Allows various solutions. And yes, each of them are solvable in 140</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/KCC08mJCX8\"><pre>❯❯ https://t.co/KCC08mJCX8</pre></div>\n<ul dir=\"auto\">\n<li>unixsongs thread happening on right now. We did a while back with Unix band names</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Check out the\"><pre>❯❯ Check out the</pre></div>\n<ul dir=\"auto\">\n<li>Filename with colons giving you problems with scp or rsync? Use the ./ path prefix B4 filename</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ scp ./file:with:colons.txt user@otherhost:\"><pre>❯❯ scp ./file:with:colons.txt user@otherhost:</pre></div>\n<ul dir=\"auto\">\n<li>Happy 80th Philip Glass</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd /etc;n=CAGBFDEC;stat -c%a *|while read -n1 k;do x=${n:$k:1};sleep .2;play -qn synth tri ${x}4 fade 0 .1937&amp;done\"><pre>❯❯ <span class=\"pl-c1\">cd</span> /etc<span class=\"pl-k\">;</span>n=CAGBFDEC<span class=\"pl-k\">;</span>stat -c%a <span class=\"pl-k\">*</span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -n1 k<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> x=<span class=\"pl-smi\">${n<span class=\"pl-k\">:</span><span class=\"pl-smi\">$k</span><span class=\"pl-k\">:</span>1}</span><span class=\"pl-k\">;</span>sleep .2<span class=\"pl-k\">;</span>play -qn synth tri <span class=\"pl-smi\">${x}</span>4 fade 0 .1937<span class=\"pl-k\">&amp;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Full screen seamless play your mp4 videos without borders. No window switching</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -fs -noborder -fixed-vo *.mp4\"><pre>❯❯ mplayer -fs -noborder -fixed-vo <span class=\"pl-k\">*</span>.mp4</pre></div>\n<ul dir=\"auto\">\n<li>Move mouse in spiral</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ x=0;y=0;while [[ $y -lt 500 ]] ; do xdotool mousemove --polar $x $y ; x=$(($x+4));y=$(($y+1)); sleep 0.01; done\"><pre>❯❯ x=0<span class=\"pl-k\">;</span>y=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> [[ <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">-lt</span> 500 ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xdotool mousemove --polar <span class=\"pl-smi\">$x</span> <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">;</span> x=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$x</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">4</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>y=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$y</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> sleep 0.01<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Today is day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d&quot;2009-12-15 +2600 days&quot;||date -v2009y -v12m -v15d -v+2600d; play -n synth sin 2600 trim 0 1 vol .05\"><pre>❯❯ date -d<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2009-12-15 +2600 days<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">||</span>date -v2009y -v12m -v15d -v+2600d<span class=\"pl-k\">;</span> play -n synth sin 2600 trim 0 1 vol .05</pre></div>\n<ul dir=\"auto\">\n<li>infosec is in Firefox and Chrome's developers tools, both have a \"Copy as curl command\" function in their network tab</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ A useful tool for\"><pre>❯❯ A useful tool <span class=\"pl-k\">for</span></pre></div>\n<ul dir=\"auto\">\n<li>Catch a snooper</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ inotifywait -e open juicy.dat &amp;&amp; w | awk \\'$5~/\\\\.00s/\\' | mailx -s &quot;Someone accessed juicy.dat&quot; you@example.com\"><pre>❯❯ inotifywait -e open juicy.dat <span class=\"pl-k\">&amp;&amp;</span> w <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$5</span>~/<span class=\"pl-cce\">\\\\</span>.00s/<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> mailx -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Someone accessed juicy.dat<span class=\"pl-pds\">\"</span></span> you@example.com</pre></div>\n<ul dir=\"auto\">\n<li>Analyze your whole lastlog to see the different remote hosts for each user</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da | awk \\'{print $1 &quot; &quot; $NF}\\' | sort | uniq -c\"><pre>❯❯ last -da <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$NF</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>See what the POTUS \"probably\" tweeted</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t timeline -l realDonaldTrump|egrep ^[0-9]|while read -r f u; do t status -l $f;done |grep Android\"><pre>❯❯ t timeline -l realDonaldTrump<span class=\"pl-k\">|</span>egrep ^[0-9]<span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r f u<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> t status -l <span class=\"pl-smi\">$f</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>grep Android</pre></div>\n<ul dir=\"auto\">\n<li>Show top count for col3, 2016-07 - 2017-01</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '/^2017-01/,/^2016-06/p' logs.csv |sed '$d' |awk -F, '{print $3}' |sort|uniq -c|sort -rn\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^2017-01/,/^2016-06/p<span class=\"pl-pds\">'</span></span> logs.csv <span class=\"pl-k\">|</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$d<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>awk -F, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $3}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -rn</pre></div>\n<ul dir=\"auto\">\n<li>Ex \"acronym FBI\" Thx @Sh1bumi</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ acronym(){ elinks -no-numbering -dump &quot;https://t.co/uKT3MTb9Ap${1:-RTFM}.html&quot;|sed -n \\'/Rank Abbr/,/^$/p\\'; }\"><pre>❯❯ <span class=\"pl-en\">acronym</span>(){ elinks -no-numbering -dump <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://t.co/uKT3MTb9Ap<span class=\"pl-smi\">${1<span class=\"pl-k\">:-</span>RTFM}</span>.html<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>sed -n <span class=\"pl-cce\">\\'</span>/Rank Abbr/,/^$/p<span class=\"pl-cce\">\\'</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>grep gziped log files from .gz files in dirs starting with 2017-01-1 &amp; 1 wild character</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zgrep SSH::Password_Guessing 2017-01-1?/notice.*gz\"><pre>❯❯ zgrep SSH::Password_Guessing 2017-01-1<span class=\"pl-k\">?</span>/notice.<span class=\"pl-k\">*</span>gz</pre></div>\n<ul dir=\"auto\">\n<li>That program you try to run when your network is laggy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lessssssssssssssssssssssssssssss\"><pre>❯❯ lessssssssssssssssssssssssssssss</pre></div>\n<ul dir=\"auto\">\n<li>Open all your JS source files in vim tabs. Then use :tabn and :tabp to switch between them. :tabe newfile to open new tab</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim -p *.js\"><pre>❯❯ vim -p <span class=\"pl-k\">*</span>.js</pre></div>\n<ul dir=\"auto\">\n<li>Swirly plasma background. Uses ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 2420x1580 plasma:fractal -blur 2x2 -swirl 270 -crop 1920x1080+250+250 swirlbg.png\"><pre>❯❯ convert -size 2420x1580 plasma:fractal -blur 2x2 -swirl 270 -crop 1920x1080+250+250 swirlbg.png</pre></div>\n<ul dir=\"auto\">\n<li>Print the dates for all the following Saturdays in 2017 for use in a document</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;2017-01-14 + %d weeks\\\\n&quot; {1..50} |date -f- +&quot;%B %_d\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2017-01-14 + %d weeks<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {1..50} <span class=\"pl-k\">|</span>date -f- +<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%B %_d</span></pre></div>\n<ul dir=\"auto\">\n<li>For MacOS X users. Aphex Twin fans may recognize this as the beginning of \"Cow Cud is a Twin\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ say -v hysterical aphex twin\"><pre>❯❯ say -v hysterical aphex twin</pre></div>\n<ul dir=\"auto\">\n<li>Read man page BUGS in style. saybugs bash</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ saybugs(){ man $1|col -b|sed -n '/^BUGS/,/^[A-Z]/p' |tail -n+2 |{ say --voice=Bad||espeak; }; }\"><pre>❯❯ <span class=\"pl-en\">saybugs</span>(){ man <span class=\"pl-smi\">$1</span><span class=\"pl-k\">|</span>col -b<span class=\"pl-k\">|</span>sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^BUGS/,/^[A-Z]/p<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>tail -n+2 <span class=\"pl-k\">|</span>{ say --voice=Bad<span class=\"pl-k\">||</span>espeak; }<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Without opening up the man page viewer, search for instances of '!' and display with surrounding context</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man procmailrc | grep -C10 '!'\"><pre>❯❯ man procmailrc <span class=\"pl-k\">|</span> grep -C10 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>!<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Prefix each line with the local time based on epoch time in 1st column</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ |gawk \\'{printf(&quot;%s %s\\\\n&quot;,strftime(&quot;%Y-%m-%d_%T&quot;, $1),$0)}\\'\"><pre>❯❯ <span class=\"pl-k\">|</span>gawk <span class=\"pl-cce\">\\'</span>{printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s %s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,strftime(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y-%m-%d_%T<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">$1</span>),<span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use the 't' client to list in real time people using the word 'speaker' in their tweet. <a href=\"https://t.co/OVdxgYRKNF\" rel=\"nofollow\">https://t.co/OVdxgYRKNF</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t stream search -l speaker\"><pre>❯❯ t stream search -l speaker</pre></div>\n<ul dir=\"auto\">\n<li>Find email addresses with 2 letter TLDs in them. \\ &gt; matches empty string at end of a word</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -i &quot;@[a-z\\\\.-]+\\\\.[a-z]{2}\\\\ &gt;&quot; emails.txt\"><pre>❯❯ egrep -i <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@[a-z<span class=\"pl-cce\">\\\\</span>.-]+<span class=\"pl-cce\">\\\\</span>.[a-z]{2}<span class=\"pl-cce\">\\\\</span> &gt;<span class=\"pl-pds\">\"</span></span> emails.txt</pre></div>\n<ul dir=\"auto\">\n<li>Sometimes, there are files that find can't find no matter how many options you try</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / -please-find-the-file-i-want\"><pre>❯❯ find / -please-find-the-file-i-want</pre></div>\n<ul dir=\"auto\">\n<li>IToldYouSo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Its been 10 years since the iPhone and see, we still use desktops and laptops. New devices just fill in the gaps in our lives.\"><pre>❯❯ Its been 10 years since the iPhone and see, we still use desktops and laptops. New devices just fill <span class=\"pl-k\">in</span> the gaps <span class=\"pl-k\">in</span> our lives.</pre></div>\n<ul dir=\"auto\">\n<li>While within</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-X] [Ctrl-F]\"><pre>❯❯ [Ctrl-X] [Ctrl-F]</pre></div>\n<ul dir=\"auto\">\n<li>A color show in your shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 16 231)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 16 231<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>restore a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pv bigdump.sql.gz | gunzip | mysql\"><pre>❯❯ pv bigdump.sql.gz <span class=\"pl-k\">|</span> gunzip <span class=\"pl-k\">|</span> mysql</pre></div>\n<ul dir=\"auto\">\n<li>Find files under /var/log that are readable by the current user. Takes groups and ACLs into account</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /var/log -readable -ls\"><pre>❯❯ find /var/log -readable -ls</pre></div>\n<ul dir=\"auto\">\n<li>Fix image aspect ratios for Instagram. Thx @fulldecent</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mogrify -resize 1080x1350 -gravity center -extent 1080 *.jpg\"><pre>❯❯ mogrify -resize 1080x1350 -gravity center -extent 1080 <span class=\"pl-k\">*</span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Your laptop says ESSID names while you drive around</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true;do iwlist wlan0 scan |awk -F\\\\&quot; \\'/ESSID/{print $2}\\' |espeak;done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> iwlist wlan0 scan <span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span> \\'/ESSID/{print <span class=\"pl-smi\">$2</span>}\\' |espeak;done</span></pre></div>\n<ul dir=\"auto\">\n<li>CommandLineForever <a href=\"https://t.co/iPYmYo7kTb\" rel=\"nofollow\">https://t.co/iPYmYo7kTb</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ More popular than ever in 2017.\"><pre>❯❯ More popular than ever <span class=\"pl-k\">in</span> 2017.</pre></div>\n<ul dir=\"auto\">\n<li>Search the file system, but don't descend into the /sys or /proc directories</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / \\\\( -path /proc -o -path /sys \\\\) -prune -o -print\"><pre>❯❯ find / <span class=\"pl-cce\">\\\\</span>( -path /proc -o -path /sys <span class=\"pl-cce\">\\\\</span>) -prune -o -print</pre></div>\n<ul dir=\"auto\">\n<li>$u))%230))m\\u$u\\033[0m\"; done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;%x\\\\n&quot; {1..65535} | while read -r u ; do printf &quot;\\\\033[38;5;$((16+$((16\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%x<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {1..65535} <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> -r u <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>033[38;5;<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">16</span><span class=\"pl-k\">+</span>$((<span class=\"pl-c1\">16</span></span></span></pre></div>\n<ul dir=\"auto\">\n<li>Use the -w option in diff to ignore differences in whitespace (tabs instead of spaces, etc.)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff -w index.html bookexample/index.html\"><pre>❯❯ diff -w index.html bookexample/index.html</pre></div>\n<ul dir=\"auto\">\n<li>curl supports numeric ranges. This is the full 14 days of unix-mas from 2012</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -Ns http://www.climagic\\\\.org/uxmas/[1-14]\"><pre>❯❯ curl -Ns http://www.climagic<span class=\"pl-cce\">\\\\</span>.org/uxmas/[1-14]</pre></div>\n<ul dir=\"auto\">\n<li>Quickly find the largest 5 files in the CWD tree without crossing filesystem boundaries</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -xdev -ls | sort -n -k 7 | tail -5\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -xdev -ls <span class=\"pl-k\">|</span> sort -n -k 7 <span class=\"pl-k\">|</span> tail -5</pre></div>\n<ul dir=\"auto\">\n<li>Start a web server on port 8000 that uses CWD. See <a href=\"https://t.co/Lbnvv0CjmA\" rel=\"nofollow\">https://t.co/Lbnvv0CjmA</a> for other language examples</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ python -m SimpleHTTPServer\"><pre>❯❯ python -m SimpleHTTPServer</pre></div>\n<ul dir=\"auto\">\n<li>Play local microphone on remote machine's speakers. Fun for pranks. Uses sox package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rec -t wav - | ssh user@remotehost play -t wav -\"><pre>❯❯ rec -t wav - <span class=\"pl-k\">|</span> ssh user@remotehost play -t wav -</pre></div>\n<ul dir=\"auto\">\n<li>Encapsulate UDP packets in a TCP stream so it can be tunneled through an SSH tunnel, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ socat -v UDP-LISTEN:8161,fork TCP:localhost:8161\"><pre>❯❯ socat -v UDP-LISTEN:8161,fork TCP:localhost:8161</pre></div>\n<ul dir=\"auto\">\n<li>Make it snow in your terminal. In case you don't have pv or perl. Also, explains the last command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/mPoGSm9FTn\"><pre>❯❯ https://t.co/mPoGSm9FTn</pre></div>\n<ul dir=\"auto\">\n<li>Go directly to the crontab man page that is in chapter 5 of the unix manual pages. Some topics have multiple man pages</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man 5 crontab\"><pre>❯❯ man 5 crontab</pre></div>\n<ul dir=\"auto\">\n<li>Automatically installs your public key to the remote host (this is included in the openssh package)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-copy-id 'user@remotehost'\"><pre>❯❯ ssh-copy-id <span class=\"pl-s\"><span class=\"pl-pds\">'</span>user@remotehost<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Scan your internal network for hosts listening on TCP port 22 (SSH protocol)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nmap --open -p T:22 192.168.1.0/24\"><pre>❯❯ nmap --open -p T:22 192.168.1.0/24</pre></div>\n<ul dir=\"auto\">\n<li>Make box around text. By @bartonski</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ function box() { t=&quot;$1xxxx&quot;;c=${2:-=}; echo ${t//?/$c}; echo &quot;$c $1 $c&quot;; echo ${t//?/$c}; }\"><pre>❯❯ <span class=\"pl-k\">function</span> <span class=\"pl-en\">box()</span> { t=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span>xxxx<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>c=<span class=\"pl-smi\">${2<span class=\"pl-k\">:-</span>=}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$c</span> <span class=\"pl-smi\">$1</span> <span class=\"pl-smi\">$c</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Delete messages from Dec 11th in the postfix queue</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mailq | awk '/^[0-9A-F]+ .+ Dec 11 /{print $1}' | xargs -n 1 postsuper -d\"><pre>❯❯ mailq <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^[0-9A-F]+ .+ Dec 11 /{print $1}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> xargs -n 1 postsuper -d</pre></div>\n<ul dir=\"auto\">\n<li>Display top bandwidth hogs on website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{a[$1] += $10} END {for (h in a) print h &quot; &quot; a[h]}\\' access_log | sort -k 2 -nr | head -10\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{a[<span class=\"pl-smi\">$1</span>] += <span class=\"pl-smi\">$1</span>0} END {for (h <span class=\"pl-k\">in</span> a) print h <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> a[h]}<span class=\"pl-cce\">\\'</span> access_log <span class=\"pl-k\">|</span> sort -k 2 -nr <span class=\"pl-k\">|</span> head -10</pre></div>\n<ul dir=\"auto\">\n<li>CABB1E' -draw \"polygon 35,140 115,130 150,55 310,55 350,130 460,150 460,210 35,210\" cabbie.png</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 500x300 xc:white -fill xc:\\'\"><pre>❯❯ convert -size 500x300 xc:white -fill xc:<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>C0FFEE</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ display -size 300x400 -negate xc:'\"><pre>❯❯ display -size 300x400 -negate xc:<span class=\"pl-s\"><span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>List files in current directory with a .php extension that DO NOT contain a PHP open code block tag</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -L '&lt;?php' *.php\"><pre>❯❯ grep -L <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;?php<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>.php</pre></div>\n<ul dir=\"auto\">\n<li>Use rev twice to get around cut not being able to relatively remove 3 letters from the end of lines</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat uuoc.txt | rev | cut -c 3- | rev\"><pre>❯❯ cat uuoc.txt <span class=\"pl-k\">|</span> rev <span class=\"pl-k\">|</span> cut -c 3- <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>Find which Debian package the notify-send program is included with - &gt; libnotify-bin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -S $( which notify-send )\"><pre>❯❯ dpkg -S <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which notify-send <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Pass the output of which (showing path to lspci) into rpm's -qf, which tells you the pkg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qf $( which lspci )\"><pre>❯❯ rpm -qf <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which lspci <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>CABB1E is a cool one too since its actual color matches the word. Also,</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @gumnos @keithpjolley Nice.\"><pre>❯❯ @gumnos @keithpjolley Nice.</pre></div>\n<ul dir=\"auto\">\n<li>Do an rsync and limit the bandwidth used to about 200 KBytes/sec. Useful on shared or slow links</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync --bwlimit=200 src dest\"><pre>❯❯ rsync --bwlimit=200 src dest</pre></div>\n<ul dir=\"auto\">\n<li>Determine what lines two different files have in common. The comm program requires sorted files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -12 &lt;(sort names1) &lt;(sort names2)\"><pre>❯❯ comm -12 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names1<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names2<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Make thumbnails of images IMG_3000.JPG - IMG_3499.JPG</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in IMG_3[0-4]*.JPG ; do convert -quality 60 -geometry 300 $i thumbs/$i ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> IMG_3[0-4]<span class=\"pl-k\">*</span>.JPG <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> convert -quality 60 -geometry 300 <span class=\"pl-smi\">$i</span> thumbs/<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Join the splits back together</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat split-xaa split-xab split-xac &gt; rejoinedlargefile\"><pre>❯❯ cat split-xaa split-xab split-xac <span class=\"pl-k\">&gt;</span> rejoinedlargefile</pre></div>\n<ul dir=\"auto\">\n<li>Split a file called largefile into 1 gigabyte pieces called split-xaa, split-xab, split-xac</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ split -b 1G verylargefile split\"><pre>❯❯ split -b 1G verylargefile split</pre></div>\n<ul dir=\"auto\">\n<li>List the 20 largest files or folders under the current working directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -ma | sort -nr | head -n 20\"><pre>❯❯ du -ma <span class=\"pl-k\">|</span> sort -nr <span class=\"pl-k\">|</span> head -n 20</pre></div>\n<ul dir=\"auto\">\n<li>/</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep '^[a-fois]\\\\{6\\\\}$' /usr/share/dict/words|sed 'h;y/ois/015/;x;G;s/\\\\n/- &gt;\"><pre>❯❯ grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>^[a-fois]\\\\{6\\\\}$<span class=\"pl-pds\">'</span></span> /usr/share/dict/words<span class=\"pl-k\">|</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>h;y/ois/015/;x;G;s/\\\\n/- &gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>AdaLovelace</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Ada: I think computers may one day process text, music and pictures.\\rCharles: [Bollocks!]\\rDon't let the bastards grind you down\"><pre>❯❯ Ada: I think computers may one day process text, music and pictures.<span class=\"pl-cce\">\\r</span>Charles: [Bollocks<span class=\"pl-k\">!</span>]<span class=\"pl-cce\">\\r</span>Don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t let the bastards grind you down</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the running average of the last 3 temp values in front</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{sum+=$1;n++;if (n==3){print sum/3 &quot;\\\\t&quot; $0;n=0;sum=0}}\\' garage-temp.log\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{sum+=<span class=\"pl-smi\">$1</span><span class=\"pl-k\">;</span>n++<span class=\"pl-k\">;</span><span class=\"pl-k\">if</span> (n==3){print sum/3 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>t<span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$0</span><span class=\"pl-k\">;</span>n=0<span class=\"pl-k\">;</span>sum=0}}<span class=\"pl-cce\">\\'</span> garage-temp.log</pre></div>\n<ul dir=\"auto\">\n<li>Temperature log from JSON</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while sleep 1m; do date +%F_%T |tr $\\'\\\\n\\' &quot; &quot;; curl -s 192.168.2.50 |jq .[2].temperatureF ;done | tee -a temp.log\"><pre>❯❯ <span class=\"pl-k\">while</span> sleep 1m<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> date +%F_%T <span class=\"pl-k\">|</span>tr $<span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> curl -s 192.168.2.50 <span class=\"pl-k\">|</span>jq .[2].temperatureF <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> tee -a temp.log</pre></div>\n<ul dir=\"auto\">\n<li>Count unique colors in an image. From @lorddrachenblut (2014)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format %k https://t.co/Aqy4qFfay7\"><pre>❯❯ identify -format %k https://t.co/Aqy4qFfay7</pre></div>\n<ul dir=\"auto\">\n<li>Backslashing the * glob instead of quoting the expression. From @lorddrachenblut (2014)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ./music  -name \\\\*.mp3 -exec cp {} ./new \\\\;\"><pre>❯❯ find ./music  -name <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span>.mp3 -exec cp {} ./new <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Build a private mirror of the public mirror. Thx LordD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync -aqzH (public mirror that supports rsync).???::CentOS /path/to/locate/mirror\"><pre>❯❯ rsync -aqzH (public mirror that supports rsync).<span class=\"pl-k\">???</span>::CentOS /path/to/locate/mirror</pre></div>\n<ul dir=\"auto\">\n<li>Use FXP to transfer files between 2 ftp servers. By @lorddrachenblut</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lftp &gt; mirror -R ftp://from.j.com/directory1 ftp://to.j.net/directory2\"><pre>❯❯ lftp <span class=\"pl-k\">&gt;</span> mirror -R ftp://from.j.com/directory1 ftp://to.j.net/directory2</pre></div>\n<ul dir=\"auto\">\n<li>tag all mp3 in PWD as genre podcast. By @lorddrachenblut (2011)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -iname '*.mp3' -exec eyeD3 -G podcast \\\\{} \\\\;\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -iname <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*.mp3<span class=\"pl-pds\">'</span></span> -exec eyeD3 -G podcast <span class=\"pl-cce\">\\\\</span>{} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>This will run ls without using any alias called ls that might be in place. You can do this with any command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\ls\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>ls</pre></div>\n<ul dir=\"auto\">\n<li>Add this to .vimrc and all searches in vim will use \"very magic\" mode which acts like egrep. Thx @nickmorrott L3viathan2142</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nnoremap / /\\\\v\"><pre>❯❯ nnoremap / /<span class=\"pl-cce\">\\\\</span>v</pre></div>\n<ul dir=\"auto\">\n<li>Long list (-l) only the directories in the current directory. .*/ and */ are utilizing your shell's glob matching ability</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ld .*/ */\"><pre>❯❯ ls -ld .<span class=\"pl-k\">*</span>/ <span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>Show only the processes matching httpd, ignoring the line of the grep process itself (regex trick)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxww | grep &quot;[h]ttpd\"><pre>❯❯ ps auxww <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[h]ttpd</span></pre></div>\n<ul dir=\"auto\">\n<li>Type 3 CSV cols to Google docs table</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5;while IFS=, read {a..z};do for col in a c d;do xdotool type ${!col} $'\\\\t';sleep 0.3;done;done\"><pre>❯❯ sleep 5<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> IFS=, <span class=\"pl-c1\">read</span> {a..z}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">col</span> <span class=\"pl-k\">in</span> a c d<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> xdotool <span class=\"pl-c1\">type</span> <span class=\"pl-smi\">${<span class=\"pl-k\">!</span>col}</span> <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>t<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">;</span>sleep 0.3<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Log!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ base64 -d &lt; TVRoZAAAAAYAAQABAYBNVHJrAAAAOgD/UQOAAAAAkEV/CIBFfwCQRX8IgEV/AJBKfwiASn8AkEx/CIBMfwqQSX8IgEl/AJBKfwiASn//LwA=|timidity -\"><pre>❯❯ base64 -d <span class=\"pl-k\">&lt;</span> TVRoZAAAAAYAAQABAYBNVHJrAAAAOgD/UQOAAAAAkEV/CIBFfwCQRX8IgEV/AJBKfwiASn8AkEx/CIBMfwqQSX8IgEl/AJBKfwiASn//LwA=<span class=\"pl-k\">|</span>timidity -</pre></div>\n<ul dir=\"auto\">\n<li>Show photo filenames where no flash was used. Req. Imagemagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format &quot;%f F:%[EXIF:Flash]\\\\n&quot; *.jpg | egrep &quot; F:(0|16|24|32)$\"><pre>❯❯ identify -format <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%f F:%[EXIF:Flash]<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> F:(0|16|24|32)$</span></pre></div>\n<ul dir=\"auto\">\n<li>strace is a sysadmin godsend. This will follow pid 927 and its children, writing to smtpd.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strace -p 927 -o smtpd -ff -tt\"><pre>❯❯ strace -p 927 -o smtpd -ff -tt</pre></div>\n<ul dir=\"auto\">\n<li>While in</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-R] %\"><pre>❯❯ [Ctrl-R] %</pre></div>\n<ul dir=\"auto\">\n<li>In</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gv\"><pre>❯❯ gv</pre></div>\n<ul dir=\"auto\">\n<li>In vim, this will left shift indentation of selected lines by one tab. &gt; for right</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ v (select text with cursor movement) &lt;\"><pre>❯❯ v (select text with cursor movement) <span class=\"pl-k\">&lt;</span></pre></div>\n<ul dir=\"auto\">\n<li>MakeAFilmFeelUncertain</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ .* Wars\"><pre>❯❯ .<span class=\"pl-k\">*</span> Wars</pre></div>\n<ul dir=\"auto\">\n<li>KnowVIMber</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Before this poll, were you aware that vim and less stored your search histories in .viminfo and .lesshst respectively?\"><pre>❯❯ Before this poll, were you aware that vim and less stored your search histories <span class=\"pl-k\">in</span> .viminfo and .lesshst respectively<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>This vim command will turn off the current search highlighting until the next search. Use :set hlsearch to turn on</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :noh\"><pre>❯❯ :noh</pre></div>\n<ul dir=\"auto\">\n<li>Help compare sizes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -L bit\\\\.ly/moonbox |convert - -fill none -stroke red -strokewidth 2 -draw &quot;rectangle 76,97,1360,352&quot; - |display -\"><pre>❯❯ curl -L bit<span class=\"pl-cce\">\\\\</span>.ly/moonbox <span class=\"pl-k\">|</span>convert - -fill none -stroke red -strokewidth 2 -draw <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rectangle 76,97,1360,352<span class=\"pl-pds\">\"</span></span> - <span class=\"pl-k\">|</span>display -</pre></div>\n<ul dir=\"auto\">\n<li>4BitComputing4Ever</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today is the 45th anniversary of the Intel's first commercially available processor, the 4004 microprocessor.\"><pre>❯❯ Today is the 45th anniversary of the Intel<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s first commercially available processor, the 4004 microprocessor.</span></pre></div>\n<ul dir=\"auto\">\n<li>] [Esc]</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-V] (move cursor down across beginning of lines) [I] [\"><pre>❯❯ [Ctrl-V] (move cursor down across beginning of lines) [I] [</pre></div>\n<ul dir=\"auto\">\n<li>Check net before slow scan</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in {1..254};do ping -c3 10.3.0.5 &gt; /dev/null ||{ echo &quot;VPN is down&quot;;break; }; nmap -T1 10.3.0.$d ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> {1..254}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> ping -c3 10.3.0.5 <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">||</span>{ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VPN is down<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">break</span><span class=\"pl-k\">;</span> }<span class=\"pl-k\">;</span> nmap -T1 10.3.0.<span class=\"pl-smi\">$d</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>In vim insert mode, use this to use the digraph feature to make an \\xc3\\xa4. Use :digraphs show available characters</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-k] a:\"><pre>❯❯ [Ctrl-k] a:</pre></div>\n<ul dir=\"auto\">\n<li>Professional development: Learn vim while playing an adventure game</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/wGMlnbflmZ\"><pre>❯❯ https://t.co/wGMlnbflmZ</pre></div>\n<ul dir=\"auto\">\n<li>You can use the -n option with make to preview what it will do first before actually doing it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ make -n install\"><pre>❯❯ make -n install</pre></div>\n<ul dir=\"auto\">\n<li>Who can see your 8.8.8.8 requests?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ traceroute 8.8.8.8|awk -F[\\\\(\\\\)] '$2~/[0-9]/{print $2}'|while read i;do echo $i;geoiplookup $i;done\"><pre>❯❯ traceroute 8.8.8.8<span class=\"pl-k\">|</span>awk -F[<span class=\"pl-cce\">\\\\</span>(<span class=\"pl-cce\">\\\\</span>)] <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$2~/[0-9]/{print $2}<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$i</span><span class=\"pl-k\">;</span>geoiplookup <span class=\"pl-smi\">$i</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>UnixAMovie Read The Fucking Subtitles</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>Two year cal display using diff side-by-side mode (-y)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff -y &lt;(cal -y 2016) &lt;(cal -y 2017)\"><pre>❯❯ diff -y <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cal -y 2016<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cal -y 2017<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Record a macro called 'a' that moves down two lines (jj) and then deletes 1 line (dd). Run w/ @a, run 100 times 100@a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim macro: qajjddq\"><pre>❯❯ vim macro: qajjddq</pre></div>\n<ul dir=\"auto\">\n<li>KnowVimber</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @cdevers Possibly. I think @robotterror came up with a good one:\"><pre>❯❯ @cdevers Possibly. I think @robotterror came up with a good one:</pre></div>\n<ul dir=\"auto\">\n<li>YesVimber</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Happy 25th Anniversary vim! Nov 2nd, 1991 - Nov 2nd, 2016\"><pre>❯❯ Happy 25th Anniversary vim<span class=\"pl-k\">!</span> Nov 2nd, 1991 - Nov 2nd, 2016</pre></div>\n<ul dir=\"auto\">\n<li>In vim, depending on your term color scheme, these can help you w/ syntax highlighting</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set bg=dark or :set bg=light\"><pre>❯❯ :set bg=dark or :set bg=light</pre></div>\n<ul dir=\"auto\">\n<li>Did they really only change what they say they did?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff &lt;(docx2txt &lt; agreement.docx) &lt;(docx2txt &lt; newagreement.docx)\"><pre>❯❯ diff <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>docx2txt <span class=\"pl-k\">&lt;</span> agreement.docx<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>docx2txt <span class=\"pl-k\">&lt;</span> newagreement.docx<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Decode message embedded in redirect</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -sI bit\\\\.ly/gevpxbegerng |awk -F/ '/^Location:/{print $NF}' |(base64 -di||base64 -Di)\"><pre>❯❯ curl -sI bit<span class=\"pl-cce\">\\\\</span>.ly/gevpxbegerng <span class=\"pl-k\">|</span>awk -F/ <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^Location:/{print $NF}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>(base64 -di<span class=\"pl-k\">||</span>base64 -Di)</pre></div>\n<ul dir=\"auto\">\n<li>Try to handle the case where a space is in 2nd column data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{if(NF==8){print $2}else if(NF==9){print $2 &quot; &quot; $3}}\\' names.txt\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{if(NF==8){print <span class=\"pl-smi\">$2</span>}else if(NF==9){print <span class=\"pl-smi\">$2</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$3</span>}}<span class=\"pl-cce\">\\'</span> names.txt</pre></div>\n<ul dir=\"auto\">\n<li>The hidden meaning of</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;%s\\\\n&quot; {A..Z} | nl | grep &quot;[XKCD]&quot; | awk \\'{sum+=$1} END {print sum}\\'\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {A..Z} <span class=\"pl-k\">|</span> nl <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[XKCD]<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{sum+=<span class=\"pl-smi\">$1</span>} END {print sum}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>mping nic.uz</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mping(){ ping $@|awk -F[=\\\\ ] \\'/time=/{t=$(NF-1);f=2000-14*log(t^18);c=&quot;play -q -n synth 1 pl &quot;f&quot;&amp;&quot;;print $0;system(c)}\\';}\"><pre>❯❯ <span class=\"pl-en\">mping</span>(){ ping <span class=\"pl-smi\">$@</span><span class=\"pl-k\">|</span>awk -F[<span class=\"pl-k\">=</span><span class=\"pl-cce\">\\\\</span> ] <span class=\"pl-cce\">\\'</span>/time=/{t=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>NF-1<span class=\"pl-pds\">)</span></span>;f=2000-14<span class=\"pl-k\">*</span>log(t^18)<span class=\"pl-k\">;</span>c=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>play -q -n synth 1 pl <span class=\"pl-pds\">\"</span></span>f<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&amp;<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>print <span class=\"pl-smi\">$0</span><span class=\"pl-k\">;</span>system(c)}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span>}</pre></div>\n<ul dir=\"auto\">\n<li>Fire alarm will now lock your screen</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rec -n stat trim |&amp; awk '/Max.*amp/{if ($NF &lt; 0.99){exit 1}}' &amp;&amp; xscreensaver-command -lock\"><pre>❯❯ rec -n stat trim <span class=\"pl-k\">|</span><span class=\"pl-k\">&amp;</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Max.*amp/{if ($NF &lt; 0.99){exit 1}}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&amp;&amp;</span> xscreensaver-command -lock</pre></div>\n<ul dir=\"auto\">\n<li>The t client doesn't allow streaming of mentions so</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do t mentions -rl;sleep 1m;done |awk '{if(a[$1]++&lt;1){print}}'\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> t mentions -rl<span class=\"pl-k\">;</span>sleep 1m<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{if(a[$1]++&lt;1){print}}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>ParanoidGeekTips</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ No matter how much the fire alarm may hurt your ears, make sure you press that screen lock button before you leave.\"><pre>❯❯ No matter how much the fire alarm may hurt your ears, make sure you press that screen lock button before you leave.</pre></div>\n<ul dir=\"auto\">\n<li>AWKtober</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ For the last one, makes your cursor bounce around. On Mac, quote the yes args together. When done, press Ctrl-Z and kill %1.\"><pre>❯❯ For the last one, makes your cursor bounce around. On Mac, quote the yes args together. When done, press Ctrl-Z and <span class=\"pl-c1\">kill</span> %1.</pre></div>\n<ul dir=\"auto\">\n<li>Find incomplete years in data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, '/USC00120784/{print substr($6,0,4)}' weather.csv |uniq -c |awk '$2%4==0&amp;&amp;$1&lt;366||$2%4!=0&amp;&amp;$1&lt;365'\"><pre>❯❯ awk -F, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/USC00120784/{print substr($6,0,4)}<span class=\"pl-pds\">'</span></span> weather.csv <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$2%4==0&amp;&amp;$1&lt;366||$2%4!=0&amp;&amp;$1&lt;365<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show only up to the first 10 packets by each source IP</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tcpdump -nn ip | awk \\'{s=$3;sub(/\\\\.[0-9]+$/,&quot;&quot;,s);if(a[s]++&lt;10){print}}\\'\"><pre>❯❯ tcpdump -nn ip <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{s=<span class=\"pl-smi\">$3</span><span class=\"pl-k\">;</span>sub(/<span class=\"pl-cce\">\\\\</span>.[0-9]+$/,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,s)<span class=\"pl-k\">;</span>if(a[s]++<span class=\"pl-k\">&lt;</span>10){print}}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Prefix the epoch time in column 1 with the local time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f udp.log|gawk \\'{printf(&quot;%s %s\\\\n&quot;,strftime(&quot;%Y-%m-%d_%T&quot;, $1),$0)}\\'\"><pre>❯❯ tail -f udp.log<span class=\"pl-k\">|</span>gawk <span class=\"pl-cce\">\\'</span>{printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s %s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,strftime(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y-%m-%d_%T<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">$1</span>),<span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>AWKtober</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Find your new Raspberry Pi on the network with nmap and awk https://t.co/jSWsUZNQvB By @theurbanpenguin\"><pre>❯❯ Find your new Raspberry Pi on the network with nmap and awk https://t.co/jSWsUZNQvB By @theurbanpenguin</pre></div>\n<ul dir=\"auto\">\n<li>Display sudo's insults. Thx @KosGD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strings /usr/lib/sudo/sudoers.so |grep Dave -B0 -A50\"><pre>❯❯ strings /usr/lib/sudo/sudoers.so <span class=\"pl-k\">|</span>grep Dave -B0 -A50</pre></div>\n<ul dir=\"auto\">\n<li>List top 20 404's URLs in descending order by reqs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'$9 == &quot;404&quot; {print $7}\\' access.log |sort|uniq -c|sort -rn| head -n 20\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$9</span> == <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>404<span class=\"pl-pds\">\"</span></span> {print <span class=\"pl-smi\">$7</span>}<span class=\"pl-cce\">\\'</span> access.log <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -rn<span class=\"pl-k\">|</span> head -n 20</pre></div>\n<ul dir=\"auto\">\n<li>AWKtober with your own awk/sed \"Together We Can Change Anything\" sticker from <a href=\"https://t.co/FP7f4LUULT\" rel=\"nofollow\">https://t.co/FP7f4LUULT</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Celebrate\"><pre>❯❯ Celebrate</pre></div>\n<ul dir=\"auto\">\n<li>Sort the output of df while keeping the header at the top</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -hP | awk \\'NR==1;NR &gt;1{print|&quot;sort -k5rn&quot;}\\'\"><pre>❯❯ df -hP <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>NR==1<span class=\"pl-k\">;</span>NR <span class=\"pl-k\">&gt;</span>1{print<span class=\"pl-k\">|</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sort -k5rn<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the longest line in quotes.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk 'length &gt; max { max=length;maxline=$0 } END { print maxline; }' quotes.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>length &gt; max { max=length;maxline=$0 } END { print maxline; }<span class=\"pl-pds\">'</span></span> quotes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Print lines of file without printing ones already seen. $0 means whole line in awk. 'a' is an array</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '!a[$0]++' file\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>!a[$0]++<span class=\"pl-pds\">'</span></span> file</pre></div>\n<ul dir=\"auto\">\n<li>Print dupes where the 3rd column changed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort gkwzFruP.txt | awk \\'{if(l1==$1 &amp;&amp; l3!=$3){print ll &quot;\\\\n&quot; $0}; ll=$0;l1=$1;l3=$3}\\'\"><pre>❯❯ sort gkwzFruP.txt <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{if(l1==<span class=\"pl-smi\">$1</span> <span class=\"pl-k\">&amp;&amp;</span> l3<span class=\"pl-k\">!</span>=<span class=\"pl-smi\">$3</span>){print ll <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$0</span>}<span class=\"pl-k\">;</span> ll=<span class=\"pl-smi\">$0</span><span class=\"pl-k\">;</span>l1=<span class=\"pl-smi\">$1</span><span class=\"pl-k\">;</span>l3=<span class=\"pl-smi\">$3</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Histo gen by @dez_blanchfield</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F\\':\\' \\'!max{max=$2;}{r=&quot;&quot;;i=s=.025*$2/max;while(i-- &gt;0)r=r&quot;-&quot;;printf &quot;%40s | %4d | %s %s&quot;,$1,$2,r,&quot;\\\\n&quot;;}\\'\"><pre>❯❯ awk -F<span class=\"pl-cce\">\\'</span>:<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">!</span>max{max=<span class=\"pl-smi\">$2</span><span class=\"pl-k\">;</span>}{r=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>i=s=.025<span class=\"pl-k\">*</span><span class=\"pl-smi\">$2</span>/max<span class=\"pl-k\">;</span>while(i-- <span class=\"pl-k\">&gt;</span>0)r=r<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%40s | %4d | %s %s<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-smi\">$1</span>,<span class=\"pl-smi\">$2</span>,r,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Sum numbers in the third column of data.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{s+=$3} END {print s}' data.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{s+=$3} END {print s}<span class=\"pl-pds\">'</span></span> data.txt</pre></div>\n<ul dir=\"auto\">\n<li>I find it amusing that the pulseaudio --kill option has a shortened option (-k) but the --start option does not</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pulseaudio -k\"><pre>❯❯ pulseaudio -k</pre></div>\n<ul dir=\"auto\">\n<li>/)' conn.log</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'($3 == &quot;64.39.106.131&quot;) || ($1 ~ /^\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>(<span class=\"pl-smi\">$3</span> == <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>64.39.106.131<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">||</span> (<span class=\"pl-smi\">$1</span> <span class=\"pl-k\">~</span> /^</pre></div>\n<ul dir=\"auto\">\n<li>Breakup compressed log by syslog date and recompress</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat large.log.gz |awk \\'{print $0 | &quot;gzip -v9c &gt; large.log-&quot;$1&quot;_&quot;$2&quot;.gz&quot;}\\'\"><pre>❯❯ zcat large.log.gz <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$0</span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gzip -v9c &gt; large.log-<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$1</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$2</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.gz<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Simple lunch location decider</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;Tacos,Burgers,Pizza,Sushi,Salad,Noodles,Veggie wraps&quot; | awk -F, \\'{print $1}\\'\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Tacos,Burgers,Pizza,Sushi,Salad,Noodles,Veggie wraps<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> awk -F, <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$1</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Print only the first From: line in each mail message file. Thx @gumnos</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '/^From:/{print;nextfile}' *\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^From:/{print;nextfile}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Display top 100 files accessed on website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{print $7}' access_log | sort | uniq -c | sort -rn | head -100\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $7}<span class=\"pl-pds\">'</span></span> access_log <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort -rn <span class=\"pl-k\">|</span> head -100</pre></div>\n<ul dir=\"auto\">\n<li>Print out just the first column (whitespace separated) of data.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{print $1}' data.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $1}<span class=\"pl-pds\">'</span></span> data.txt</pre></div>\n<ul dir=\"auto\">\n<li>UninstallFlashFriday</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>SEDtember</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Sometimes regular expressions can get messy....that's what she sed.\\rWell that was awkward.\\r\"><pre>❯❯ Sometimes regular expressions can get messy....that<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s what she sed.\\rWell that was awkward.\\r</span></pre></div>\n<ul dir=\"auto\">\n<li>Censor email addresses in report.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -r -i 's/\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[a-z]{2,30}\\\\b/xxx@yyy.zzz/' report.txt\"><pre>❯❯ sed -r -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[a-z]{2,30}\\\\b/xxx@yyy.zzz/<span class=\"pl-pds\">'</span></span> report.txt</pre></div>\n<ul dir=\"auto\">\n<li>Compress consecutive blank lines down to just 2 in the file notes.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -i '/^$/N;/\\\\n$/N;//D' notes.txt\"><pre>❯❯ sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^$/N;/\\\\n$/N;//D<span class=\"pl-pds\">'</span></span> notes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Does the account leak affect people who ping Yahoo?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ping https://t.co/fBotT8rfVV\"><pre>❯❯ ping https://t.co/fBotT8rfVV</pre></div>\n<ul dir=\"auto\">\n<li>Generate output similar to 'tree' without using tree</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -print | sort | sed 's;[^/]*/;|---;g;s;---|; |;g'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -print <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s;[^/]*/;|---;g;s;---|; |;g<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Print the high CPU process's family tree</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxwwf | sed -n -r -e '/^.{64} \\\\//h;/\\\\\\\\/H' -e '/^.{14} [8-9][0-9]\\\\.[0-9]/{x;p}'\"><pre>❯❯ ps auxwwf <span class=\"pl-k\">|</span> sed -n -r -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^.{64} \\\\//h;/\\\\\\\\/H<span class=\"pl-pds\">'</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^.{14} [8-9][0-9]\\\\.[0-9]/{x;p}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>List files that confuse Git on Windows by differing only by...</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  git ls-tree -r --name-only HEAD | tr A-Z a-z | sort | uniq -d\"><pre>❯❯  git ls-tree -r --name-only HEAD <span class=\"pl-k\">|</span> tr A-Z a-z <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -d</pre></div>\n<ul dir=\"auto\">\n<li>Every time a WARN: line is encountered, print the previous Path: line seen along with it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '/Path:/h;/WARN:/{x;p;x;p}'\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Path:/h;/WARN:/{x;p;x;p}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>PeopleLikeMeBecause I post barely readable messages that when run carelessly can obliterate all your data and compromise your employment</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>AWKtober is coming. <a href=\"https://t.co/WFy5rfMKvc\" rel=\"nofollow\">https://t.co/WFy5rfMKvc</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ { } yourselves,\"><pre>❯❯ { } yourselves,</pre></div>\n<ul dir=\"auto\">\n<li>Joins multiple lines and separates them with the string \"&lt;br / &gt;\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed \\':a;N;$!ba;s/\\\\n/&lt;br \\\\/ &gt;/g\\'\"><pre>❯❯ sed <span class=\"pl-cce\">\\'</span>:a<span class=\"pl-k\">;</span>N<span class=\"pl-k\">;</span><span class=\"pl-smi\">$!</span>ba<span class=\"pl-k\">;</span>s/<span class=\"pl-cce\">\\\\</span>n/<span class=\"pl-k\">&lt;</span>br <span class=\"pl-cce\">\\\\</span>/ <span class=\"pl-k\">&gt;</span>/g<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>AWKtober is coming!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @surryhill\"><pre>❯❯ @surryhill</pre></div>\n<ul dir=\"auto\">\n<li>ItCanWait Please stop using your phone while driving. On average, 1180 people are injured each day just in the US from distracted driving</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>Swap each line of input with the next line of input</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '$p;h;n;p;g;p'\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$p;h;n;p;g;p<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Setting the LANG=C variable will often fix unexpected problems with sort ignoring symbol characters like +, - and *</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LANG=C sort\"><pre>❯❯ LANG=C sort</pre></div>\n<ul dir=\"auto\">\n<li>Evidence that Linux was released Sept 17th 1991</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -O- ftp://ftp.funet\\\\.fi/pub/linux/kernel/Historic/linux-0.01.tar.gz|tar ztv|sort -k4\"><pre>❯❯ wget -O- ftp://ftp.funet<span class=\"pl-cce\">\\\\</span>.fi/pub/linux/kernel/Historic/linux-0.01.tar.gz<span class=\"pl-k\">|</span>tar ztv<span class=\"pl-k\">|</span>sort -k4</pre></div>\n<ul dir=\"auto\">\n<li>Quickly print line 9417 of a large file without processing the whole file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed '9417q;d' dbdump.sql\"><pre>❯❯ sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>9417q;d<span class=\"pl-pds\">'</span></span> dbdump.sql</pre></div>\n<ul dir=\"auto\">\n<li>BroCon2016 <a href=\"https://t.co/46JhUEbduN\" rel=\"nofollow\">https://t.co/46JhUEbduN</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ How Texas personalizes supercomputing. @TACC\"><pre>❯❯ How Texas personalizes supercomputing. @TACC</pre></div>\n<ul dir=\"auto\">\n<li>AWKtober</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @ExaGridDba\"><pre>❯❯ @ExaGridDba</pre></div>\n<ul dir=\"auto\">\n<li>Search irc.log for lines containing Alice and Bob regardless of their order in the line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed '/Alice/!d; /Bob/!d' irc.log\"><pre>❯❯ sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Alice/!d; /Bob/!d<span class=\"pl-pds\">'</span></span> irc.log</pre></div>\n<ul dir=\"auto\">\n<li>Use jq to pretty print some json data with ANSI color coded syntax and use -R in less to process the color</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ jq -C '.' data.json | less -R\"><pre>❯❯ jq -C <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span> data.json <span class=\"pl-k\">|</span> less -R</pre></div>\n<ul dir=\"auto\">\n<li>BroCon2016 (network security monitor) in Austin, TX this week</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I'm at\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>m at</span></pre></div>\n<ul dir=\"auto\">\n<li>Joins multiple lines and separates them with the string \"<br>\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed \\':a;N;$!ba;s/\\\\n/&lt;br &gt;/g\\'\"><pre>❯❯ sed <span class=\"pl-cce\">\\'</span>:a<span class=\"pl-k\">;</span>N<span class=\"pl-k\">;</span><span class=\"pl-smi\">$!</span>ba<span class=\"pl-k\">;</span>s/<span class=\"pl-cce\">\\\\</span>n/<span class=\"pl-k\">&lt;</span>br <span class=\"pl-k\">&gt;</span>/g<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Show only the directories in the current directory. The / at the end of the wildcards make this work</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -d .*/ */\"><pre>❯❯ ls -d .<span class=\"pl-k\">*</span>/ <span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>Pretend you are on a starship. Req. sox package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1\"><pre>❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1</pre></div>\n<ul dir=\"auto\">\n<li>Web request chart</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat access_log-*|awk \\'{print substr($4,5,8)}\\'|uniq -c|gnuplot -e &quot;set terminal dumb;plot \\'-\\' using 1:xtic(2) with boxes\"><pre>❯❯ cat access_log-<span class=\"pl-k\">*</span><span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print substr(<span class=\"pl-smi\">$4</span>,5,8)}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>gnuplot -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>set terminal dumb;plot \\'-\\' using 1:xtic(2) with boxes</span></pre></div>\n<ul dir=\"auto\">\n<li>or --shift</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @andrewgilmartin 'less' will let you scroll left to right. Default is by half the screen width, you can change this with -\"><pre>❯❯ @andrewgilmartin <span class=\"pl-s\"><span class=\"pl-pds\">'</span>less<span class=\"pl-pds\">'</span></span> will <span class=\"pl-c1\">let</span> you scroll left to right. Default is by half the screen width, you can change this with -</pre></div>\n<ul dir=\"auto\">\n<li>Aperl ? I'll consider it. Thanks</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @jhparkerb Well, I don't think someone is a fool for using perl, so how about just making it all of\"><pre>❯❯ @jhparkerb Well, I don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t think someone is a fool for using perl, so how about just making it all of</span></pre></div>\n<ul dir=\"auto\">\n<li>In the find man page, show whole paragraphs containing the word modified</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man find |sed -e '/./{H;$!d;}' -e 'x;/modified/!d;i=='\"><pre>❯❯ man find <span class=\"pl-k\">|</span>sed -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/./{H;$!d;}<span class=\"pl-pds\">'</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x;/modified/!d;i==<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Add separator commas to long numbers</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;10^%d\\\\n&quot; {0..20} | bc | sed -e :a -e \\'s/\\\\(.*[0-9]\\\\)\\\\([0-9]\\\\{3\\\\}\\\\)/\\\\1,\\\\2/;ta\\'\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>10^%d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {0..20} <span class=\"pl-k\">|</span> bc <span class=\"pl-k\">|</span> sed -e :a -e <span class=\"pl-cce\">\\'</span>s/<span class=\"pl-cce\">\\\\</span>(.<span class=\"pl-k\">*</span>[0-9]<span class=\"pl-cce\">\\\\</span>)<span class=\"pl-cce\">\\\\</span>([0-9]<span class=\"pl-cce\">\\\\</span>{3<span class=\"pl-cce\">\\\\</span>}<span class=\"pl-cce\">\\\\</span>)/<span class=\"pl-cce\">\\\\</span>1,<span class=\"pl-cce\">\\\\</span>2/<span class=\"pl-k\">;</span>ta<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Unwrap lines that end with a backslash in script.sh</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -i -e :a -e '/\\\\\\\\$/N; s/\\\\\\\\\\\\n//; ta' script.sh\"><pre>❯❯ sed -i -e :a -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/\\\\\\\\$/N; s/\\\\\\\\\\\\n//; ta<span class=\"pl-pds\">'</span></span> script.sh</pre></div>\n<ul dir=\"auto\">\n<li>Live dmesg output in human readable format (colors, timing) @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @jreybert: dmesg -wH\"><pre>❯❯ RT @jreybert: dmesg -wH</pre></div>\n<ul dir=\"auto\">\n<li>sed allows you to use other characters to demarcate sections. Same as running: sed s/a/emen/ &lt; dated</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed statement &lt; dated\"><pre>❯❯ sed statement <span class=\"pl-k\">&lt;</span> dated</pre></div>\n<ul dir=\"auto\">\n<li>/!s/$val\\ &gt;/$pid/g' getproc.pl</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -i -e '/^\\\\s*\"><pre>❯❯ sed -i -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^\\\\s*</span></pre></div>\n<ul dir=\"auto\">\n<li>Print config.cfg tab indented to fix a bad console not letting you to see first few columns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed 's/^/\\\\t/' config.cfg | less\"><pre>❯❯ sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^/\\\\t/<span class=\"pl-pds\">'</span></span> config.cfg <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>Find files you haven't accessed so far this year in a directory. Requires atime attributes. Thx @fs111</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -atime -$(date +%j) -type f\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -atime -<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%j<span class=\"pl-pds\">)</span></span> -type f</pre></div>\n<ul dir=\"auto\">\n<li>SEDtember and</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Get ready for\"><pre>❯❯ Get ready <span class=\"pl-k\">for</span></pre></div>\n<ul dir=\"auto\">\n<li>Find file duplicates in 'Pictures' recursively based on size and mdsum and log them to dupes.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fdupes -r Pictures &gt; dupes.txt\"><pre>❯❯ fdupes -r Pictures <span class=\"pl-k\">&gt;</span> dupes.txt</pre></div>\n<ul dir=\"auto\">\n<li>extract all unique hex color codes from a CSS file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -oi '#[a-f0-9]{6}' file.css | sort | uniq\"><pre>❯❯ egrep -oi <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#[a-f0-9]{6}<span class=\"pl-pds\">'</span></span> file.css <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq</pre></div>\n<ul dir=\"auto\">\n<li>Listen to the radio from the command line. Try ./iheart-mplayer $((RANDOM%2000))</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/pd9i05UD1W\"><pre>❯❯ https://t.co/pd9i05UD1W</pre></div>\n<ul dir=\"auto\">\n<li>Wait for the friendly Googlebot to pay your site a visit. Brought to you by Carl's Jr</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f access_log | awk \\'$1~&quot;googlebot&quot;\\'\"><pre>❯❯ tail -f access_log <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$1</span>~<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>googlebot<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Gen 20 random users/passwords</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {1..20} ; do rig|head -1 |tr A-Z a-z;done |while read f l;do echo ${f:0:1}${l}:$(pwgen 12 1);done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {1..20} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> rig<span class=\"pl-k\">|</span>head -1 <span class=\"pl-k\">|</span>tr A-Z a-z<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> f l<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${f<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span>1}${l}</span>:<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>pwgen 12 1<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Total bytes used by 5+ year old directories in CWD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -mtime +$((365*5)) -maxdepth 1 -exec du -sb {} \\\\; |awk '{s+=$1}END{print s}'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -mtime +<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">365</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">5</span><span class=\"pl-pds\">))</span></span> -maxdepth 1 -exec du -sb {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{s+=$1}END{print s}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>nixDreams <a href=\"https://t.co/3ELuMoZDZR\" rel=\"nofollow\">https://t.co/3ELuMoZDZR</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>Use -D to create a SOCKS5 tunnel inside your SSH connection. Some programs (like a web browser) can use these</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -D 9999 you@remotehost\"><pre>❯❯ ssh -D 9999 you@remotehost</pre></div>\n<ul dir=\"auto\">\n<li>line}\"; done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while read line; do echo &quot;line length is ${\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> line<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>line length is <span class=\"pl-smi\">${</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Use a for loop to iterate over a list of items (files, numbers, etc) and run processes accordingly</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in *.jpg; do identify &quot;$i&quot;; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.jpg<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> identify <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use the &amp;&amp; and || logic operators for results based process control</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pgrep myscript.pl &amp;&amp; echo still running || echo &quot;done&quot; | mail admin\"><pre>❯❯ pgrep myscript.pl <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> still running <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>done<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> mail admin</pre></div>\n<ul dir=\"auto\">\n<li>There are helper commands for dealing with compressed files (gz, bz2 and xz). They have a z, bz or xz prefix</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zless, zgrep, zcat, zdiff\"><pre>❯❯ zless, zgrep, zcat, zdiff</pre></div>\n<ul dir=\"auto\">\n<li>Last one for today. This indicates to the program that there is no more input. In the shell, this usually closes the shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-d &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-d <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Delete everything from the cursor to the beginning of the line. This can also be used to clear a password attempt and start over</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-u &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-u <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Delete the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivalent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Incremental undo of command line edits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-_ &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-_ <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>Quick access to the ASCII character table via the ascii program or the man page if you don't have the program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii || man ascii\"><pre>❯❯ ascii <span class=\"pl-k\">||</span> man ascii</pre></div>\n<ul dir=\"auto\">\n<li>tmux is a great program that manages multiple terminal sessions and allows you to detach/reattach to the session. Also screen, dvtm</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux\"><pre>❯❯ tmux</pre></div>\n<ul dir=\"auto\">\n<li>Use the 'tee' command to save a copy and see the output of a program at the same time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxww | tee output.log\"><pre>❯❯ ps auxww <span class=\"pl-k\">|</span> tee output.log</pre></div>\n<ul dir=\"auto\">\n<li>Use -k to search for something in all man pages, like 'sound'</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man -k sound\"><pre>❯❯ man -k sound</pre></div>\n<ul dir=\"auto\">\n<li>There are several commands inside bash called 'built-ins'. You can access info about them using 'help builtin' or just run 'help</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ help cd\"><pre>❯❯ <span class=\"pl-c1\">help</span> <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>Print detailed list (-l) of all (-a) files reverse sorted (-r) by last modified time (-t) and with human readable size (-h)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ltrah\"><pre>❯❯ ls -ltrah</pre></div>\n<ul dir=\"auto\">\n<li>You can usually press the tab key in the middle of typing a command name, file name or variable to auto complete it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Tab &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Tab <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>description. The</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just a reminder about the format of climagic tweets: command\"><pre>❯❯ Just a reminder about the format of climagic tweets: <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>Cool visuals you can make in your terminal with your cursor</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/ammutuorZG\"><pre>❯❯ https://t.co/ammutuorZG</pre></div>\n<ul dir=\"auto\">\n<li>In GNU sort, you can use -V (version sort) to also sort IPv4 addresses numerically according to each class</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -V ipv4addrs.txt\"><pre>❯❯ sort -V ipv4addrs.txt</pre></div>\n<ul dir=\"auto\">\n<li>Use this pipeline pattern of -v -e term1 -e term2 to skip lines in output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ | grep -v -e garbage -e unimportant -e donotcare\"><pre>❯❯ <span class=\"pl-k\">|</span> grep -v -e garbage -e unimportant -e donotcare</pre></div>\n<ul dir=\"auto\">\n<li>.Top 20 email From TLDs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -o &quot;from=&lt;[^ &gt;]+\\\\.[a-z0-9-]{2,} &gt;&quot; /var/log/maillog |awk -F\\\\. \\'{print $NF}\\' |sort |uniq -c |sort -rn |head -20\"><pre>❯❯ egrep -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>from=&lt;[^ &gt;]+<span class=\"pl-cce\">\\\\</span>.[a-z0-9-]{2,} &gt;<span class=\"pl-pds\">\"</span></span> /var/log/maillog <span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\</span>. <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$NF</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>sort <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span>sort -rn <span class=\"pl-k\">|</span>head -20</pre></div>\n<ul dir=\"auto\">\n<li>Show stats on messages per day in procmail log</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep ^From procmail.log | cut -d' ' -f3- | date -f - +%Y-%m-%d | uniq -c\"><pre>❯❯ grep ^From procmail.log <span class=\"pl-k\">|</span> cut -d<span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> -f3- <span class=\"pl-k\">|</span> date -f - +%Y-%m-%d <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Save your whole postfix queue to a file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mailq | awk '/^[0-9A-F]/{print $1}' | tr -d \\\\* | xargs -n 1 postcat -q &gt; mailq-20160801.txt\"><pre>❯❯ mailq <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^[0-9A-F]/{print $1}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> tr -d <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span> <span class=\"pl-k\">|</span> xargs -n 1 postcat -q <span class=\"pl-k\">&gt;</span> mailq-20160801.txt</pre></div>\n<ul dir=\"auto\">\n<li>Print human readable total size of just the files in the current directory. :)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -lh | head -1\"><pre>❯❯ ls -lh <span class=\"pl-k\">|</span> head -1</pre></div>\n<ul dir=\"auto\">\n<li>Video background</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ youtube-dl -q -o- _gp51lt9kdA|mplayer -wid $(xwininfo -int -name &quot;Desktop&quot;|grep &quot;Desktop&quot;|awk \\'{print $4}\\') -cache 5000 -\"><pre>❯❯ youtube-dl -q -o- _gp51lt9kdA<span class=\"pl-k\">|</span>mplayer -wid <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>xwininfo -int -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Desktop<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Desktop<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$4</span>}<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span> -cache 5000 -</pre></div>\n<ul dir=\"auto\">\n<li>Search for PATTERN in .c and .h file. Thx @suresh_kanzaria</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -name \\\\*.[ch] -exec grep -sl &quot;PATTERN&quot; {} \\\\;\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -name <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span>.[ch] -exec grep -sl <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PATTERN<span class=\"pl-pds\">\"</span></span> {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Find directories that have 33000 or more files in them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / -type f | sed 's,/[^/]*$,,' |sort |uniq -c | awk '$1 &gt;=33000'\"><pre>❯❯ find / -type f <span class=\"pl-k\">|</span> sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s,/[^/]*$,,<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sort <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$1 &gt;=33000<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Prepare a list of items (one two three) for SQL list syntax</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in one two three ; do printf &quot;\\'$i\\',&quot; ; done | sed \\'s/,$//\\' ; echo\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> one two three <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\'<span class=\"pl-smi\">$i</span>\\',<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> sed <span class=\"pl-cce\">\\'</span>s/,$//<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span></pre></div>\n<ul dir=\"auto\">\n<li>If you just ran a command like unzip -l <a href=\"https://t.co/dv1SBPbILW\" rel=\"nofollow\">https://t.co/dv1SBPbILW</a> to see the contents, you can use ^-l^^ to run again without the -l</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ^-l^^\"><pre>❯❯ ^-l^^</pre></div>\n<ul dir=\"auto\">\n<li>Use elinks to read articles on websites that like to waste CPU energy and your time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks https://t.co/qF81UixsjD\"><pre>❯❯ elinks https://t.co/qF81UixsjD</pre></div>\n<ul dir=\"auto\">\n<li>Show the number of UNsuccessful requests per day. (Not HTTP code 2XX or 3XX)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$9!~/^[23]/{print $4}' access_log | cut -c1-12 | uniq -c\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$9!~/^[23]/{print $4}<span class=\"pl-pds\">'</span></span> access_log <span class=\"pl-k\">|</span> cut -c1-12 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Calculate how much money I'd have if I had a nickel for every potentially hacked wordpress based site</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;.05*37652825&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.05*37652825<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Sorry I missed this one by 2 days. Too damn busy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo epoch day $(( $( date +%s ) / 86400 ))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> epoch day <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> $( date <span class=\"pl-k\">+%</span>s ) <span class=\"pl-k\">/</span> <span class=\"pl-c1\">86400</span> <span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Find files and directories under /var/www that are world writable. Exclude symbolic links</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /var/www -perm -o+w -a -not -type l -ls\"><pre>❯❯ find /var/www -perm -o+w -a -not -type l -ls</pre></div>\n<ul dir=\"auto\">\n<li>Where log directory is not world readable, brace expansion helps when a wildcard can't</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo grep 1.2.3.4 /var/log/httpd/access_log{.2,.1,}\"><pre>❯❯ sudo grep 1.2.3.4 /var/log/httpd/access_log{.2,.1,}</pre></div>\n<ul dir=\"auto\">\n<li>Play a song at the end of long running command to notify you. For @kimadactl</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ make ; mpg123 hawaii-five-o-theme.mp3\"><pre>❯❯ make <span class=\"pl-k\">;</span> mpg123 hawaii-five-o-theme.mp3</pre></div>\n<ul dir=\"auto\">\n<li>bitcoin prices in USD. Thx @balazssomfalvi</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s http://www.coindesk\\\\.com/price/ |grep bpiUSD |sed \\'s/&lt;\\\\/\\\\?[^ &gt;]\\\\+ &gt;//g\\' |tr -d &quot; \\\\t\\\\r\"><pre>❯❯ curl -s http://www.coindesk<span class=\"pl-cce\">\\\\</span>.com/price/ <span class=\"pl-k\">|</span>grep bpiUSD <span class=\"pl-k\">|</span>sed <span class=\"pl-cce\">\\'</span>s/<span class=\"pl-k\">&lt;</span><span class=\"pl-cce\">\\\\</span>/<span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">?</span>[^ <span class=\"pl-k\">&gt;</span>]<span class=\"pl-cce\">\\\\</span>+ <span class=\"pl-k\">&gt;</span>//g<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>tr -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-cce\">\\\\</span>t<span class=\"pl-cce\">\\\\</span>r</span></pre></div>\n<ul dir=\"auto\">\n<li>French Flag</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t=$(($(tput cols)/3));for FR in $(seq $(tput lines));do printf &quot;\\\\e[44m%${t}s\\\\e[47m%${t}s\\\\e[41m%${t}s\\\\e[0m\\\\n&quot;;done\"><pre>❯❯ t=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>$(tput cols)<span class=\"pl-k\">/</span><span class=\"pl-c1\">3</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">FR</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tput lines<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[44m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[47m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[41m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Show the HTTP response code for a URL. Catch it while you can!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -sI https://www.nianticlabs\\\\.com/privacy/pokemongo/en/ | head -1\"><pre>❯❯ curl -sI https://www.nianticlabs<span class=\"pl-cce\">\\\\</span>.com/privacy/pokemongo/en/ <span class=\"pl-k\">|</span> head -1</pre></div>\n<ul dir=\"auto\">\n<li>Show new pingers. -l makes tcpdump linebuffered</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo tcpdump -l icmp[icmptype]=icmp-echo | awk '{if (!arr[$3]){print $3;arr[$3]++}}'\"><pre>❯❯ sudo tcpdump -l icmp[icmptype]=icmp-echo <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{if (!arr[$3]){print $3;arr[$3]++}}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Find primes w/ PCRE. <a href=\"https://t.co/rnfOtbFL33\" rel=\"nofollow\">https://t.co/rnfOtbFL33</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=0;while : $((n++));do printf &quot;%0${n}d&quot;|grep -qP &quot;^0?$|^(00+?)\\\\1+$&quot;||echo $n;done\"><pre>❯❯ n=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span>n<span class=\"pl-k\">++</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%0<span class=\"pl-smi\">${n}</span>d<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>grep -qP <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^0?$|^(00+?)<span class=\"pl-cce\">\\\\</span>1+$<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">||</span>echo <span class=\"pl-smi\">$n</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Scan directly w/ cur date. Merci @dsampaolo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ scanimage --format=tiff --mode Color | convert tiff:- ~/Scans/$(date &quot;+%Y-%m-%d_%H:%M:%S&quot;).jpg\"><pre>❯❯ scanimage --format=tiff --mode Color <span class=\"pl-k\">|</span> convert tiff:- <span class=\"pl-k\">~</span>/Scans/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+%Y-%m-%d_%H:%M:%S<span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>computrons <a href=\"https://t.co/Ei6XDKiQOS\" rel=\"nofollow\">https://t.co/Ei6XDKiQOS</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just fixed a computer by touching it. I still got the power.\"><pre>❯❯ Just fixed a computer by touching it. I still got the power.</pre></div>\n<ul dir=\"auto\">\n<li>Shipment status</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ usps_status(){ elinks -dump tools.usps\\\\.com/go/TrackConfirmAction?qtc_tLabels1=$1 |sed -n '/Status of Item/{n;p;q}'; }\"><pre>❯❯ <span class=\"pl-en\">usps_status</span>(){ elinks -dump tools.usps<span class=\"pl-cce\">\\\\</span>.com/go/TrackConfirmAction<span class=\"pl-k\">?</span>qtc_tLabels1=<span class=\"pl-smi\">$1</span> <span class=\"pl-k\">|</span>sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Status of Item/{n;p;q}<span class=\"pl-pds\">'</span></span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Generic pipeline template. Just add args</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep | awk | sed | grep | grep -v | while read data ; do something to data ; done | tee output\"><pre>❯❯ grep <span class=\"pl-k\">|</span> awk <span class=\"pl-k\">|</span> sed <span class=\"pl-k\">|</span> grep <span class=\"pl-k\">|</span> grep -v <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> data <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> something to data <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> tee output</pre></div>\n<ul dir=\"auto\">\n<li>Just in case you didn't get enough fireworks already. Req. rss-glx screensavers</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/skyrocket --maxrockets 100\"><pre>❯❯ /usr/lib/xscreensaver/skyrocket --maxrockets 100</pre></div>\n<ul dir=\"auto\">\n<li>Get the absolute value of the 4th column of numbers using the square root of the square trick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, '{sqrt($4^2)}' data.csv\"><pre>❯❯ awk -F, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{sqrt($4^2)}<span class=\"pl-pds\">'</span></span> data.csv</pre></div>\n<ul dir=\"auto\">\n<li>vote4cli <a href=\"https://t.co/BBk8Ya9QIR\" rel=\"nofollow\">https://t.co/BBk8Ya9QIR</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk/sed 201[0-9] Together We Can Change Anything&quot; bumper sticker now available at https://t.co/FP7f4LUULT\"><pre>❯❯ awk/sed 201[0-9] Together We Can Change Anything<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> bumper sticker now available at https://t.co/FP7f4LUULT</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the number and column name to help write awk expressions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ head -1 data.csv | tr , $'\\\\n' | nl\"><pre>❯❯ head -1 data.csv <span class=\"pl-k\">|</span> tr , <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> nl</pre></div>\n<ul dir=\"auto\">\n<li>Prefix lines with timestamp. Thx @amenthes_de</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ stdbuf -i0 -o0 ping 192.168.42.1 | while read l; do echo &quot;[$(date \\'+%H:%M:%S\\')] $l&quot;; done\"><pre>❯❯ stdbuf -i0 -o0 ping 192.168.42.1 <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> l<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date <span class=\"pl-cce\">\\'</span>+%H:%M:%S<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span>] <span class=\"pl-smi\">$l</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use gcalcli to access your Google calendar. <a href=\"https://t.co/upzunxymAQ\" rel=\"nofollow\">https://t.co/upzunxymAQ</a> but its already available in some distros</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gcalcli\"><pre>❯❯ gcalcli</pre></div>\n<ul dir=\"auto\">\n<li>In X, use xmodmap to turn your Caps Lock into an Escape key</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xmodmap -e &quot;remove Lock = Caps_Lock&quot; -e &quot;keycode 66 = Escape\"><pre>❯❯ xmodmap -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>remove Lock = Caps_Lock<span class=\"pl-pds\">\"</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keycode 66 = Escape</span></pre></div>\n<ul dir=\"auto\">\n<li>Happy Tau (\\xcf\\x84) day!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;scale=1000;4*a(1)*2&quot; | BC_LINE_LENGTH=1004 bc -l | cut -c1-629\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scale=1000;4*a(1)*2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> BC_LINE_LENGTH=1004 bc -l <span class=\"pl-k\">|</span> cut -c1-629</pre></div>\n<ul dir=\"auto\">\n<li>Check the last modified date of a file on a web server</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -I http://langs.eserver\\\\.org/latin-terms.txt | grep Last-Modified\"><pre>❯❯ curl -I http://langs.eserver<span class=\"pl-cce\">\\\\</span>.org/latin-terms.txt <span class=\"pl-k\">|</span> grep Last-Modified</pre></div>\n<ul dir=\"auto\">\n<li>Will show you the top power consuming processes on your Linux laptop</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ powertop\"><pre>❯❯ powertop</pre></div>\n<ul dir=\"auto\">\n<li>infosec</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I just had a bunch of teenagers run 'ping localhost' in front of a news reporter. They're hackers now!\"><pre>❯❯ I just had a bunch of teenagers run <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping localhost<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">in</span> front of a news reporter. They<span class=\"pl-s\"><span class=\"pl-pds\">'</span>re hackers now!</span></pre></div>\n<ul dir=\"auto\">\n<li>Print out line 107056 of your input file that your program is choking on for invalid input</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '107056p' WigleWifi_20140929191654.kml\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>107056p<span class=\"pl-pds\">'</span></span> WigleWifi_20140929191654.kml</pre></div>\n<ul dir=\"auto\">\n<li>Sigh.. What is happening to our beloved Internet? (also run 'whois level3\\.sucks')</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dig RandomDomainNameThatDoesNotExistLLC\\\\.com @4.2.2.2\"><pre>❯❯ dig RandomDomainNameThatDoesNotExistLLC<span class=\"pl-cce\">\\\\</span>.com @4.2.2.2</pre></div>\n<ul dir=\"auto\">\n<li>Print lines not matching (-v) any extended regular expressions (-E) in expressions.conf (-f)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -E -v -f expressions.conf file.txt\"><pre>❯❯ grep -E -v -f expressions.conf file.txt</pre></div>\n<ul dir=\"auto\">\n<li>Print lines from file where GPS coords are in range</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, '((37.19 &lt; $7 &amp;&amp; $7 &lt; 37.23) &amp;&amp; (-115.81 &lt; $8 &amp;&amp; $8 &lt; -115.73))' gpsdata.csv\"><pre>❯❯ awk -F, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>((37.19 &lt; $7 &amp;&amp; $7 &lt; 37.23) &amp;&amp; (-115.81 &lt; $8 &amp;&amp; $8 &lt; -115.73))<span class=\"pl-pds\">'</span></span> gpsdata.csv</pre></div>\n<ul dir=\"auto\">\n<li>Convert values from x=year,y=month table to linear CSV</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{for (i=2;i&lt;=13;i++) {printf &quot;%d-%02d,%d\\\\n&quot;,$1,i-1,$i}}\\' data-table.txt\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{for (i=2<span class=\"pl-k\">;</span>i<span class=\"pl-k\">&lt;</span>=13<span class=\"pl-k\">;</span>i++) {printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d-%02d,%d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-smi\">$1</span>,i-1,<span class=\"pl-smi\">$i</span>}}<span class=\"pl-cce\">\\'</span> data-table.txt</pre></div>\n<ul dir=\"auto\">\n<li>Use a sleep and the -u option with scrot to capture a mouseover screenshot</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5; scrot -u Phishing-email-example-with-mouseover.png\"><pre>❯❯ sleep 5<span class=\"pl-k\">;</span> scrot -u Phishing-email-example-with-mouseover.png</pre></div>\n<ul dir=\"auto\">\n<li>Force a timezone for the date by setting the TZ variable. In this case, get UTC time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ TZ=UTC date\"><pre>❯❯ TZ=UTC date</pre></div>\n<ul dir=\"auto\">\n<li>Replace the second occurrence of a regex match. Thx @slmagus</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;fuzzbuzz&quot; | sed -e &quot;s/u/i/2\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fuzzbuzz<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sed -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s/u/i/2</span></pre></div>\n<ul dir=\"auto\">\n<li>I just ran this vim expression to lower notes in an Arduino sketch 2 octaves</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ %s/\\\\(NOTE_[A-Z]\\\\+\\\\)\\\\([0-9]\\\\)/\\\\=submatch(1).(submatch(2)-2)/g\"><pre>❯❯ %s/<span class=\"pl-cce\">\\\\</span>(NOTE_[A-Z]<span class=\"pl-cce\">\\\\</span>+<span class=\"pl-cce\">\\\\</span>)<span class=\"pl-cce\">\\\\</span>([0-9]<span class=\"pl-cce\">\\\\</span>)/<span class=\"pl-cce\">\\\\</span>=submatch(1).(submatch(2)-2)/g</pre></div>\n<ul dir=\"auto\">\n<li>Discover the Super Cow Powers of aptitude</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ o=&quot;-vvvvvv&quot;;for i in 0 {2..7}; do c=&quot;aptitude ${o:0:$i} moo&quot;;echo &quot;$ $c&quot;; $c; done\"><pre>❯❯ o=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-vvvvvv<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> 0 {2..7}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> c=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>aptitude <span class=\"pl-smi\">${o<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span><span class=\"pl-smi\">$i</span>}</span> moo<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$ <span class=\"pl-smi\">$c</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-smi\">$c</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>% US pop. murdered 1960-2014</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -dump bit\\\\.ly/qutWZK|tr -d ,|sed -e \\'/^2014/q\\'|awk \\'/^[12]/{p=$6/$2*100; printf &quot;%d %0.4f%%\\\\n&quot;,$1,p}\\'\"><pre>❯❯ elinks -dump bit<span class=\"pl-cce\">\\\\</span>.ly/qutWZK<span class=\"pl-k\">|</span>tr -d ,<span class=\"pl-k\">|</span>sed -e <span class=\"pl-cce\">\\'</span>/^2014/q<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>/^[12]/{p=<span class=\"pl-smi\">$6</span>/<span class=\"pl-smi\">$2</span><span class=\"pl-k\">*</span>100<span class=\"pl-k\">;</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d %0.4f%%<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-smi\">$1</span>,p}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use a multi-character field separator to get field 3 out of a CSV file that uses double quoted fields</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F\\'&quot;,&quot;\\' \\'{print $3}\\' data.csv\"><pre>❯❯ awk -F<span class=\"pl-cce\">\\'</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$3</span>}<span class=\"pl-cce\">\\'</span> data.csv</pre></div>\n<ul dir=\"auto\">\n<li>This sequence will close an OpenSSH session from the client side (same as killing ssh process). [RET] = Return/Enter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [RET]~.\"><pre>❯❯ [RET]~.</pre></div>\n<ul dir=\"auto\">\n<li>Yes! You can do nested grouping in extended regexes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -Ev &quot;((accept|drop|reject)log|ftpd)&quot; /var/log/messages | less\"><pre>❯❯ grep -Ev <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>((accept|drop|reject)log|ftpd)<span class=\"pl-pds\">\"</span></span> /var/log/messages <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>tbt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ SSH starts enabling encryption on all remote login sessions.&quot; Oh wait, that was 1995 news.\"><pre>❯❯ SSH starts enabling encryption on all remote login sessions.<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> Oh wait, that was 1995 news.</span></pre></div>\n<ul dir=\"auto\">\n<li>If you have trouble saying No, get your computer to say it for you, falling back on a working command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (espeak || say || cat)  &lt; No\"><pre>❯❯ (espeak <span class=\"pl-k\">||</span> say <span class=\"pl-k\">||</span> cat)  <span class=\"pl-k\">&lt;</span> No</pre></div>\n<ul dir=\"auto\">\n<li>See the current phase of the moon in your terminal. New feature of wttr.in</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl wttr\\\\.in/Moon\"><pre>❯❯ curl wttr<span class=\"pl-cce\">\\\\</span>.in/Moon</pre></div>\n<ul dir=\"auto\">\n<li>Take the current tmux pane from split window and break it out into a full sized window</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux break-pane or &lt;Ctrl-b &gt;:break-pane\"><pre>❯❯ tmux break-pane or <span class=\"pl-k\">&lt;</span>Ctrl-b <span class=\"pl-k\">&gt;</span>:break-pane</pre></div>\n<ul dir=\"auto\">\n<li>Rotate a video taken by a \"smart\"phone user 90 degrees CW. Or just for fun. Try rotate=2 for CCW</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -vf rotate=1 video.mp4\"><pre>❯❯ mplayer -vf rotate=1 video.mp4</pre></div>\n<ul dir=\"auto\">\n<li>See what software was used for an image</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiftool &lt;(curl -s apod.nasa\\\\.gov/apod/image/1605/NGC5078-LRGBhager2048.jpg) |grep Software\"><pre>❯❯ exiftool <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>curl -s apod.nasa<span class=\"pl-cce\">\\\\</span>.gov/apod/image/1605/NGC5078-LRGBhager2048.jpg<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">|</span>grep Software</pre></div>\n<ul dir=\"auto\">\n<li>Besides skipping aliases, a backslash before command also avoids Programmable Tab Completion</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\vim not-everything-is-a-java-file.class\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>vim not-everything-is-a-java-file.class</pre></div>\n<ul dir=\"auto\">\n<li>serverless</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ In my experience, most devs don't maintain their servers anyways. So what's new?\"><pre>❯❯ In my experience, most devs don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t maintain their servers anyways. So what<span class=\"pl-pds\">'</span></span>s new<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>Quick way to see if your pwd path contains any symlinks in it. If so there would be a difference between the two lines</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pwd ; pwd -P\"><pre>❯❯ <span class=\"pl-c1\">pwd</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">pwd</span> -P</pre></div>\n<ul dir=\"auto\">\n<li>this is a trick you can use to grep the process without catching grep too</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @ExaGridDba ps -ef | grep [s]mon\"><pre>❯❯ @ExaGridDba ps -ef <span class=\"pl-k\">|</span> grep [s]mon</pre></div>\n<ul dir=\"auto\">\n<li>Read compressed logs, process only time lines and filter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat 2016-05-23/smtp.*.gz |awk '$1~/^[0-9]{9}/' |grep -v -e 10.1.2.3 -e root@\"><pre>❯❯ zcat 2016-05-23/smtp.<span class=\"pl-k\">*</span>.gz <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$1~/^[0-9]{9}/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>grep -v -e 10.1.2.3 -e root@</pre></div>\n<ul dir=\"auto\">\n<li>Calculate 7 years ago in days, accounting for leap years</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(( ( $( date +%s ) - $( date -d -v-7y +%s ) ) /86400 ))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> ( $( date <span class=\"pl-k\">+%</span>s ) <span class=\"pl-k\">-</span> $( date <span class=\"pl-k\">-</span>d <span class=\"pl-k\">-</span>v<span class=\"pl-k\">-</span><span class=\"pl-c1\">7</span>y <span class=\"pl-k\">+%</span>s ) ) <span class=\"pl-k\">/</span><span class=\"pl-c1\">86400</span> <span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Calculate 7 years ago in days, accounting for leap years</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(( ( $( date +%s ) - $( date -d &quot;now - 7 years&quot; +%s ) ) /86400 ))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> ( $( date <span class=\"pl-k\">+%</span>s ) <span class=\"pl-k\">-</span> $( date <span class=\"pl-k\">-</span>d \"now <span class=\"pl-k\">-</span> <span class=\"pl-c1\">7</span> years\" <span class=\"pl-k\">+%</span>s ) ) <span class=\"pl-k\">/</span><span class=\"pl-c1\">86400</span> <span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Total bytes of files older than ~7 yr</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -xdev -type f -mtime +$((365*7)) -print0|xargs -0 du -bsc|awk '/\\\\ttotal$/{s+=$0}END{print s}'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -xdev -type f -mtime +<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">365</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">7</span><span class=\"pl-pds\">))</span></span> -print0<span class=\"pl-k\">|</span>xargs -0 du -bsc<span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/\\\\ttotal$/{s+=$0}END{print s}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Ubuntu users, if appstreamcli is running right now, check this URL. 100% CPU bug</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pgrep appstreamcli &amp;&amp; xdg-open https://t.co/b9W7ktbTRJ\"><pre>❯❯ pgrep appstreamcli <span class=\"pl-k\">&amp;&amp;</span> xdg-open https://t.co/b9W7ktbTRJ</pre></div>\n<ul dir=\"auto\">\n<li>Show what files or filehandles are open in the specified directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo lsof +D /var/lib/apt/lists\"><pre>❯❯ sudo lsof +D /var/lib/apt/lists</pre></div>\n<ul dir=\"auto\">\n<li>DigitalPackRat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @w4rchylde I still have my email going back to 1994.\"><pre>❯❯ @w4rchylde I still have my email going back to 1994.</pre></div>\n<ul dir=\"auto\">\n<li>tbt <a href=\"https://t.co/0QKYxLVs8V\" rel=\"nofollow\">https://t.co/0QKYxLVs8V</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Another X screenshot from 1997.  My god I used X as root? Shameful.\"><pre>❯❯ Another X screenshot from 1997.  My god I used X as root<span class=\"pl-k\">?</span> Shameful.</pre></div>\n<ul dir=\"auto\">\n<li>tbt <a href=\"https://t.co/zofEfxvxAr\" rel=\"nofollow\">https://t.co/zofEfxvxAr</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ My &quot;X Window System, Version 11&quot; screenshot from 1999.\"><pre>❯❯ My <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>X Window System, Version 11<span class=\"pl-pds\">\"</span></span> screenshot from 1999.</pre></div>\n<ul dir=\"auto\">\n<li>Use strace to show the files openssl is opening</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strace -e open openssl s_client -crlf -quiet -starttls smtp -connect smtp.example\\\\.com:25\"><pre>❯❯ strace -e open openssl s_client -crlf -quiet -starttls smtp -connect smtp.example<span class=\"pl-cce\">\\\\</span>.com:25</pre></div>\n<ul dir=\"auto\">\n<li>BTW, if I ran the mail server this was on, I'd run this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -lr &quot;^Subject: test &quot; Maildir/{cur,new} |xargs rm -v 2 &gt;&amp;1 |tee delete.log\"><pre>❯❯ grep -lr <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^Subject: test <span class=\"pl-pds\">\"</span></span> Maildir/{cur,new} <span class=\"pl-k\">|</span>xargs rm -v 2 <span class=\"pl-k\">&gt;&amp;1</span> <span class=\"pl-k\">|</span>tee delete.log</pre></div>\n<ul dir=\"auto\">\n<li>When running commands in a subshell, you can use job control (Ctrl-C, Ctrl-Z, fg, bg) on the subshell as a whole unit</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (cmd1;cmd2;cmd3)\"><pre>❯❯ (cmd1<span class=\"pl-k\">;</span>cmd2<span class=\"pl-k\">;</span>cmd3)</pre></div>\n<ul dir=\"auto\">\n<li>Rename the filesystem label on a USB thumb drive to Backups</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo mlabel -i /dev/sdg1 -s ::&quot;Backups\"><pre>❯❯ sudo mlabel -i /dev/sdg1 -s ::<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Backups</span></pre></div>\n<ul dir=\"auto\">\n<li>Press pause on your Roku. [When your kids lose the remote]</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -d &quot;&quot; http://YourRokuIP:8060/keypress/Pause\"><pre>❯❯ curl -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span> http://YourRokuIP:8060/keypress/Pause</pre></div>\n<ul dir=\"auto\">\n<li>See the last logged in users, but filter out entries for root, reboots and asmith</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da | grep -vE &quot;^(root|reboot|asmith)\"><pre>❯❯ last -da <span class=\"pl-k\">|</span> grep -vE <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^(root|reboot|asmith)</span></pre></div>\n<ul dir=\"auto\">\n<li>RemoveALetterBreakAConfigFile</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>RemoveALetterSpoilABook <a href=\"https://t.co/qHdt16ZySu\" rel=\"nofollow\">https://t.co/qHdt16ZySu</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ill Gates: The Rod Ahead\"><pre>❯❯ ill Gates: The Rod Ahead</pre></div>\n<ul dir=\"auto\">\n<li>Get a list of debian packages with linux in their name and only list the ones that are fully installed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -l '*linux*' | grep '^ii'\"><pre>❯❯ dpkg -l <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*linux*<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>^ii<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Pipe the output of the man command into other commands to trim down the \"insane amounts of drivel\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man dpkg | sed -n \\'/Doctal/,/2000 /p\\'\"><pre>❯❯ man dpkg <span class=\"pl-k\">|</span> sed -n <span class=\"pl-cce\">\\'</span>/Doctal/,/2000 /p<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>\"Tell me about your relationship with your parents.\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pstree -a\"><pre>❯❯ pstree -a</pre></div>\n<ul dir=\"auto\">\n<li>Start looking for vulnerable code using ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find www -name '*.php' -exec egrep -l 'bin/(identify|convert|mogrify|montage)\\\\b' {} +\"><pre>❯❯ find www -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*.php<span class=\"pl-pds\">'</span></span> -exec egrep -l <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bin/(identify|convert|mogrify|montage)\\\\b<span class=\"pl-pds\">'</span></span> {} +</pre></div>\n<ul dir=\"auto\">\n<li>I posted this tweet using the @ImageTragick vuln and then fixed this server. Yes, its quite serious. Check it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify exploit.mvg\"><pre>❯❯ identify exploit.mvg</pre></div>\n<ul dir=\"auto\">\n<li>I'm disappointed the logo for @ImageTragick vuln was not actually made in ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strings logo-medium.png|head\"><pre>❯❯ strings logo-medium.png<span class=\"pl-k\">|</span>head</pre></div>\n<ul dir=\"auto\">\n<li>Press enter every time you hear child cough to determine if per min rate is going down</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while read -s; do date +%H:%M; done |uniq -c\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> -s<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> date +%H:%M<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>If you are in a directory that is removed and recreated (such as a symlinked current dir), this will put you in the new directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd .\"><pre>❯❯ <span class=\"pl-c1\">cd</span> <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>Number of git merges by day of the week. Thx @nicr9_</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ git log --merges | grep ^Date | awk '{ print $2 }' | sort | uniq -c | sort -n\"><pre>❯❯ git log --merges <span class=\"pl-k\">|</span> grep ^Date <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{ print $2 }<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort -n</pre></div>\n<ul dir=\"auto\">\n<li>List the files below the www directory that don't (-L) have PHP code in them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -rL '&lt;?php' www\"><pre>❯❯ grep -rL <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;?php<span class=\"pl-pds\">'</span></span> www</pre></div>\n<ul dir=\"auto\">\n<li>script is a nice program that allows you to record your interactive shell session. Great for logging upgrades</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ script upgrade.log\"><pre>❯❯ script upgrade.log</pre></div>\n<ul dir=\"auto\">\n<li>Print how many files are inside each directory under the current one</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find */ | cut -d/ -f1 | uniq -c\"><pre>❯❯ find <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> cut -d/ -f1 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Remove the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivilent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Incremental undo of command line edits. Ctrl-- works the same and Ctrl-? sometimes works as well, although its not documented</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-_ &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-_ <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>With GNU sleep, you can use time suffixes (m = minute, h = hour, d = day). Note that some very large values get truncated</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5d\"><pre>❯❯ sleep 5d</pre></div>\n<ul dir=\"auto\">\n<li>ASCII globe animation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ oneworld=$( curl -Ls http://bit\\\\.ly/globe_vt );while sleep .1;do pv -L4220 -q  &lt; &quot;$oneworld&quot;;done\"><pre>❯❯ oneworld=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> curl -Ls http://bit<span class=\"pl-cce\">\\\\</span>.ly/globe_vt <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> sleep .1<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> pv -L4220 -q  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$oneworld</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>View image metadata without downloading whole 16MB image</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -sr 0-1024 www.nasa\\\\.gov/images/content/618486main_earth_full.jpg |strings\"><pre>❯❯ curl -sr 0-1024 www.nasa<span class=\"pl-cce\">\\\\</span>.gov/images/content/618486main_earth_full.jpg <span class=\"pl-k\">|</span>strings</pre></div>\n<ul dir=\"auto\">\n<li>When using multiple file arguments with less or vi, you can use :n and :p to go next file (n) and prev file (p) in list</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :n and :p\"><pre>❯❯ :n and :p</pre></div>\n<ul dir=\"auto\">\n<li>Remove the oldest .pcap file in the /netdumps directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm &quot;$( ls -1dt /netdumps/*.pcap | tail -1 )\"><pre>❯❯ rm <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span> ls -1dt /netdumps/<span class=\"pl-k\">*</span>.pcap <span class=\"pl-k\">|</span> tail -1 <span class=\"pl-pds\">)</span></span></span></pre></div>\n<ul dir=\"auto\">\n<li>For those with xscreensaver installed. Press space to draw another one</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/penrose -size 16 -ncolors 64 -delay 1000\"><pre>❯❯ /usr/lib/xscreensaver/penrose -size 16 -ncolors 64 -delay 1000</pre></div>\n<ul dir=\"auto\">\n<li>Audio prompt. Could also use different notes/melodies for various return codes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ PROMPT_COMMAND=&quot;play -qn synth sin G3 trim 0 0.1\"><pre>❯❯ PROMPT_COMMAND=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>play -qn synth sin G3 trim 0 0.1</span></pre></div>\n<ul dir=\"auto\">\n<li>Change the host header to bypass the DNS</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -H &quot;Host: https://t.co/BU49d2rfW6&quot; http://example.climagic\\\\.org/config.php\"><pre>❯❯ curl -H <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Host: https://t.co/BU49d2rfW6<span class=\"pl-pds\">\"</span></span> http://example.climagic<span class=\"pl-cce\">\\\\</span>.org/config.php</pre></div>\n<ul dir=\"auto\">\n<li>Alias for running a command as the nobody user. Maybe to reduce privilege or to confirm denial of access</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias nobody='sudo -u nobody'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> nobody=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>sudo -u nobody<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>climagic video: Joining files together using the join command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/nDVS07oTdg\"><pre>❯❯ https://t.co/nDVS07oTdg</pre></div>\n<ul dir=\"auto\">\n<li>Search your history for commands matching ssh and then execute command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ history | grep ssh \\r!423\"><pre>❯❯ <span class=\"pl-c1\">history</span> <span class=\"pl-k\">|</span> grep ssh <span class=\"pl-cce\">\\r</span><span class=\"pl-k\">!</span>423</pre></div>\n<ul dir=\"auto\">\n<li>(In Linux VM) Used this to bind Mac right command key to Linux VM middle mouse click</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xmodmap -e &quot;keycode 134 = Pointer_Button2&quot;;xkbset m\"><pre>❯❯ xmodmap -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keycode 134 = Pointer_Button2<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>xkbset m</pre></div>\n<ul dir=\"auto\">\n<li>Merge two files together based on the first column in each. Print file1.col1:file2.col2</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ join -o 1.1,2.2 -1 1 -2 1 -t: file1 file2\"><pre>❯❯ join -o 1.1,2.2 -1 1 -2 1 -t: file1 file2</pre></div>\n<ul dir=\"auto\">\n<li>Remove meetings, really fast. (But make sure they are properly quoted)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm -rf &quot;${MEETINGS[@]}\"><pre>❯❯ rm -rf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${MEETINGS[@]}</span></span></pre></div>\n<ul dir=\"auto\">\n<li>This will print only the last line that matches REGEX. Thanks long time listener first time caller @stephensant</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -ne '/REGEX/h;${x;p}'\"><pre>❯❯ sed -ne <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/REGEX/h;${x;p}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Live insert the last word from the previous command in history into current line. Can repeat to go further. Not the same as !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Meta-.]\"><pre>❯❯ [Meta-.]</pre></div>\n<ul dir=\"auto\">\n<li>Deletes orphaned docker images. Thx @jvz</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for x in $(docker images | awk \\'$1 ~ &quot;&lt;none &gt;&quot; {print $3}\\'); do docker rmi $x; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>docker images <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$1</span> <span class=\"pl-k\">~</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;none &gt;<span class=\"pl-pds\">\"</span></span> {print <span class=\"pl-smi\">$3</span>}<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> docker rmi <span class=\"pl-smi\">$x</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Remove all exif metadata from a photo. Thx @cengizIO</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiftool -all= foo.jpg\"><pre>❯❯ exiftool -all= foo.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Ping home when mic \"hears\" something</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do rec -t raw /dev/null rate 32k silence 1 0.1 2% 1 0.0 2% &amp;&amp; ping -c 1 home;sleep 1; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> rec -t raw /dev/null rate 32k silence 1 0.1 2% 1 0.0 2% <span class=\"pl-k\">&amp;&amp;</span> ping -c 1 home<span class=\"pl-k\">;</span>sleep 1<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Major colors</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in *.jpg;do printf &quot;$i %s\\\\n&quot; $(convert &quot;$i&quot; -scale 1x1\\\\! -format \\'%[pixel:u]\\' info:- ) ;done |tee -a color-indexes.txt\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.jpg<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span> %s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>convert <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span> -scale 1x1<span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">!</span> -format <span class=\"pl-cce\">\\'</span>%[pixel:u]<span class=\"pl-cce\">\\'</span> info:- <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>tee -a color-indexes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Continually watch processes with names Thx @<em>radome</em></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n 0.5 &quot;ps uf -C process1,process2\"><pre>❯❯ watch -n 0.5 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ps uf -C process1,process2</span></pre></div>\n<ul dir=\"auto\">\n<li>NPM outdate for projects in dir. Thx @afschr</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in */; do echo $d; cd $d; npm outdate; cd - &gt; /dev/null; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>/<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$d</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">$d</span><span class=\"pl-k\">;</span> npm outdate<span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> - <span class=\"pl-k\">&gt;</span> /dev/null<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use timeout to only run a command for a set amount of time (1hour)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ timeout 1h tcpdump -n -i eth0 -w network.pcap not host 192.168.1.5\"><pre>❯❯ timeout 1h tcpdump -n -i eth0 -w network.pcap not host 192.168.1.5</pre></div>\n<ul dir=\"auto\">\n<li>Find out what country that IP that just pinged your host is from</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ geoiplookup 111.75.195.232\"><pre>❯❯ geoiplookup 111.75.195.232</pre></div>\n<ul dir=\"auto\">\n<li>Format XMLs. Thx @deepankarb</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find -name &quot;*.xml&quot; | while IFS=$\\'\\\\n\\' read f ; do xmllint --format &quot;$f&quot; &gt; tmp.xml &amp;&amp; mv -v tmp.xml &quot;$f&quot;; done\"><pre>❯❯ find -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.xml<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> IFS=$<span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-c1\">read</span> f <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xmllint --format <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> tmp.xml <span class=\"pl-k\">&amp;&amp;</span> mv -v tmp.xml <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>When Apr01 just won't do, show the (long) format start time for all processes on a Linux system</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps -o pid,lstart,command ax\"><pre>❯❯ ps -o pid,lstart,command ax</pre></div>\n<ul dir=\"auto\">\n<li>Well written GUI programs play well with the command line. Multiple args open multiple files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gimp IMG_253{1,4,6..9}.JPG\"><pre>❯❯ gimp IMG_253{1,4,6..9}.JPG</pre></div>\n<ul dir=\"auto\">\n<li>Use Facebook authentication for SSH and auto \"Like\" the host too. New ssh options</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh --like -u fb::Bob_Reach https://t.co/SsgG5tPN0a\"><pre>❯❯ ssh --like -u fb::Bob_Reach https://t.co/SsgG5tPN0a</pre></div>\n<ul dir=\"auto\">\n<li>Send those new Windows bash users a gift</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mkdir fun; touch fun/{R,r}{E,e}{A,a}{D,d}{M,m}{E,e};echo hello  &gt;fun/rEadME;zip -r fun\\\\.zip fun\"><pre>❯❯ mkdir fun<span class=\"pl-k\">;</span> touch fun/{R,r}{E,e}{A,a}{D,d}{M,m}{E,e}<span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> hello  <span class=\"pl-k\">&gt;</span>fun/rEadME<span class=\"pl-k\">;</span>zip -r fun<span class=\"pl-cce\">\\\\</span>.zip fun</pre></div>\n<ul dir=\"auto\">\n<li>Convert MP4 to WAV. Thanks @varpt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for f in *.mp4; do echo &quot;processing $f&quot;; bname=$(basename $f); ffmpeg -i &quot;$f&quot; &quot;$bname.wav&quot;; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.mp4<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>processing <span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> bname=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>basename <span class=\"pl-smi\">$f</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> ffmpeg -i <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$bname</span>.wav<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>After killing processing using up all your RAM on Linux (Firefox!!), move processes off of swap</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo bash -c 'swapoff -a &amp;&amp; swapon -a'\"><pre>❯❯ sudo bash -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>swapoff -a &amp;&amp; swapon -a<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show partitions of only physical SCSI/SATA/SCA drives and not other things like device mapper entries</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo fdisk -l /dev/sd?\"><pre>❯❯ sudo fdisk -l /dev/sd<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>n[*]}));play -qn synth pl ${n[$r]} trim 0 1;read -p \"[A-G]?\" g;[[ \"$g\" == \"${n[r]:0:1}\" ]]&amp;&amp;echo y||echo n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=({A..G}{2..6});r=$((RANDOM%${\"><pre>❯❯ n=({A..G}{2..6})<span class=\"pl-k\">;</span>r=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>RANDOM<span class=\"pl-k\">%</span><span class=\"pl-smi\">${</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Print temperature value from sensor w/ time when temp is over 80</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while sleep 30; do curl -s 192.168.0.106 |jq '.temp'|awk '$1 &gt;80'|ts ;done\"><pre>❯❯ <span class=\"pl-k\">while</span> sleep 30<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> curl -s 192.168.0.106 <span class=\"pl-k\">|</span>jq <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.temp<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$1 &gt;80<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>ts <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Output json data from sensor w/ time when temp reaches over 80</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while sleep 30; do curl -s 192.168.0.106 |egrep &quot;temp: 8[0-9]&quot; | ts ;done\"><pre>❯❯ <span class=\"pl-k\">while</span> sleep 30<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> curl -s 192.168.0.106 <span class=\"pl-k\">|</span>egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>temp: 8[0-9]<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> ts <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>If you like pasting into STDIN pipeline, this trick can prevent the processing from starting until you press [Ctrl-D]</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tac|tac|\"><pre>❯❯ tac<span class=\"pl-k\">|</span>tac<span class=\"pl-k\">|</span></pre></div>\n<ul dir=\"auto\">\n<li>Arduino temp sensor to timed logfile and view</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f /dev/ttyACM0 |gawk \\'{print strftime(&quot;%Y-%m-%d %T&quot;) &quot; &quot; $0)}\\' |tee temperature.log\"><pre>❯❯ tail -f /dev/ttyACM0 <span class=\"pl-k\">|</span>gawk <span class=\"pl-cce\">\\'</span>{print strftime(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y-%m-%d %T<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>tee temperature.log</pre></div>\n<ul dir=\"auto\">\n<li>longnow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Hearing of Andy Grove's passing reminds me, we really are still at the beginning of computing. Imagine 1000 years from now.\"><pre>❯❯ Hearing of Andy Grove<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s passing reminds me, we really are still at the beginning of computing. Imagine 1000 years from now.</span></pre></div>\n<ul dir=\"auto\">\n<li>Every time you reuse a command from your command history, it saves a tree in the digital world. \\xe2\\x99\\xbb</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;searchpattern\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>searchpattern</pre></div>\n<ul dir=\"auto\">\n<li>In vim this will search all lines (%s) for wlan0 and replace all the instances per line (g) with eth3 and confirm (c)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :%s/wlan0/eth3/gc\"><pre>❯❯ :%s/wlan0/eth3/gc</pre></div>\n<ul dir=\"auto\">\n<li>If you ever want to use a negative offset (from the end) for variable substrings, the space before the - is important</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo ${DISPLAY: -1}\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${DISPLAY<span class=\"pl-k\">:</span> -1}</span></pre></div>\n<ul dir=\"auto\">\n<li>USER}/2}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo ${USER:0:${\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${USER<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span><span class=\"pl-smi\">${</span></span></pre></div>\n<ul dir=\"auto\">\n<li>set access/modification times of newfile to those of oldfile</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ touch -r oldfile newfile\"><pre>❯❯ touch -r oldfile newfile</pre></div>\n<ul dir=\"auto\">\n<li>find 4-leaf</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t=$((COLUMNS*LINES-COLUMNS));r=$((RANDOM%t));printf &quot;\\\\e[32m&quot;;for i in $(seq $t);do [[ $i == $r ]]&amp;&amp;printf &quot;\\xf0\\x9f\\x8d\\x80&quot;||printf &quot;\\xe2\\x98\\x98&quot;;done\"><pre>❯❯ t=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>COLUMNS<span class=\"pl-k\">*</span>LINES<span class=\"pl-k\">-</span>COLUMNS<span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>r=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>RANDOM<span class=\"pl-k\">%</span>t<span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[32m<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq <span class=\"pl-smi\">$t</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> [[ <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">==</span> <span class=\"pl-smi\">$r</span> ]]<span class=\"pl-k\">&amp;&amp;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\xf0\\x9f\\x8d\\x80<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">||</span>printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\xe2\\x98\\x98<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Long list the files/directories with only 4 characters by using 4 match any single character patterns (?). For @alecedworthy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ld ????\"><pre>❯❯ ls -ld <span class=\"pl-k\">????</span></pre></div>\n<ul dir=\"auto\">\n<li>Check a domain to make sure its all the ASCII characters you expect and not Unicode look-a-likes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo \\xef\\xbd\\x99o\\xcf\\x85r\\xef\\xbd\\x82\\xef\\xbd\\x81\\xef\\xbd\\x8e\\xef\\xbd\\x8b.com | hexdump -c\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\x</span>ef<span class=\"pl-cce\">\\x</span>bd<span class=\"pl-cce\">\\x</span>99o<span class=\"pl-cce\">\\x</span>cf<span class=\"pl-cce\">\\x</span>85r<span class=\"pl-cce\">\\x</span>ef<span class=\"pl-cce\">\\x</span>bd<span class=\"pl-cce\">\\x</span>82<span class=\"pl-cce\">\\x</span>ef<span class=\"pl-cce\">\\x</span>bd<span class=\"pl-cce\">\\x</span>81<span class=\"pl-cce\">\\x</span>ef<span class=\"pl-cce\">\\x</span>bd<span class=\"pl-cce\">\\x</span>8e<span class=\"pl-cce\">\\x</span>ef<span class=\"pl-cce\">\\x</span>bd<span class=\"pl-cce\">\\x</span>8b.com <span class=\"pl-k\">|</span> hexdump -c</pre></div>\n<ul dir=\"auto\">\n<li>A rainbow in your shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 231 -1 16)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 231 -1 16<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Show all programs listening TCP/UDP ports. You may want to run this with superuser privileges</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof -Pan -i tcp -i udp\"><pre>❯❯ lsof -Pan -i tcp -i udp</pre></div>\n<ul dir=\"auto\">\n<li>pi domain owners</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in $(seq 4 65);do echo -n &quot;${pi:0:$i}.com: &quot;;whois ${pi:2:$((i-2))}.com|grep --col=no &quot;rant Na&quot;||echo;sleep 5;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 4 65<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${pi<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span><span class=\"pl-smi\">$i</span>}</span>.com: <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>whois <span class=\"pl-smi\">${pi<span class=\"pl-k\">:</span>2<span class=\"pl-k\">:</span>$((i-2))}</span>.com<span class=\"pl-k\">|</span>grep --col=no <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rant Na<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">||</span>echo<span class=\"pl-k\">;</span>sleep 5<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Happy Pi Day! Calculate \\xcf\\x80 to 1000 digits using bc and assign it to pi</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pi=$( echo &quot;scale=1000;4*a(1)&quot; | BC_LINE_LENGTH=1004 bc -l )\"><pre>❯❯ pi=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scale=1000;4*a(1)<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> BC_LINE_LENGTH=1004 bc -l <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Req. ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 413x314 xc:tan -fill red -pointsize 200 -gravity center -draw &quot;text 0,0 \\'3.14\\'&quot; -flop pie.png\"><pre>❯❯ convert -size 413x314 xc:tan -fill red -pointsize 200 -gravity center -draw <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text 0,0 \\'3.14\\'<span class=\"pl-pds\">\"</span></span> -flop pie.png</pre></div>\n<ul dir=\"auto\">\n<li>Kill all</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps ax -o state -o ppid  | awk \\'$1==&quot;Z&quot;{print $2}\\' | xargs kill -9\"><pre>❯❯ ps ax -o state -o ppid  <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$1</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Z<span class=\"pl-pds\">\"</span></span>{print <span class=\"pl-smi\">$2</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> xargs <span class=\"pl-c1\">kill</span> -9</pre></div>\n<ul dir=\"auto\">\n<li>Change URL into a more filesystem friendly form and squeeze the repeated _ chars into one</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;$URL&quot; | tr -s / _\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$URL</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr -s / _</pre></div>\n<ul dir=\"auto\">\n<li>OpenStack <a href=\"https://t.co/lZHci6jETq\" rel=\"nofollow\">https://t.co/lZHci6jETq</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Gotta love it when a speaker hands out CLI cheatsheets. Thanks @rbowen\"><pre>❯❯ Gotta love it when a speaker hands out CLI cheatsheets. Thanks @rbowen</pre></div>\n<ul dir=\"auto\">\n<li>Generate a random ordered list of 20 numbers. For example to determine order of presentation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 20 | shuf\"><pre>❯❯ seq 20 <span class=\"pl-k\">|</span> shuf</pre></div>\n<ul dir=\"auto\">\n<li>Show just the Documents followed by person@domain</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -e Document -e person@domain multilinelist.txt |grep -B1 person@domain\"><pre>❯❯ grep -e Document -e person@domain multilinelist.txt <span class=\"pl-k\">|</span>grep -B1 person@domain</pre></div>\n<ul dir=\"auto\">\n<li>Make stats of the top file types in this directory and below</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -exec file -b --mime-type {} + | sort | uniq -c | sort -nr\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -exec file -b --mime-type {} + <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort -nr</pre></div>\n<ul dir=\"auto\">\n<li>How many times did they say cyber? Just select all in your browser copy and paste into this command to find out</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -io &quot;cyber&quot; | wc -l\"><pre>❯❯ grep -io <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cyber<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>in bash, set this option to make sure backgrounded jobs don't get killed when the parent shell exits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shopt -u huponexit\"><pre>❯❯ <span class=\"pl-c1\">shopt</span> -u huponexit</pre></div>\n<ul dir=\"auto\">\n<li>Adjust all rsync processes on the system so that they have lower (idle) IO priority</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pgrep rsync | xargs ionice -c3 -p\"><pre>❯❯ pgrep rsync <span class=\"pl-k\">|</span> xargs ionice -c3 -p</pre></div>\n<ul dir=\"auto\">\n<li>WP abuse</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -h &quot;POST /.*wp-login.php&quot; *-access_log |awk \\'$1!~/^my.ip.addr$/{print $1}\\' |sort|uniq -c|sort -nr |head -50 &gt; wp-abusers.txt\"><pre>❯❯ grep -h <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>POST /.*wp-login.php<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">*</span>-access_log <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$1</span><span class=\"pl-k\">!</span>~/^my.ip.addr$/{print <span class=\"pl-smi\">$1</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -nr <span class=\"pl-k\">|</span>head -50 <span class=\"pl-k\">&gt;</span> wp-abusers.txt</pre></div>\n<ul dir=\"auto\">\n<li>Its a pretty weird day when you find yourself running a command like this to diagnose a problem</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tcpdump -i eth0 dst net 127.0.0.0/8\"><pre>❯❯ tcpdump -i eth0 dst net 127.0.0.0/8</pre></div>\n<ul dir=\"auto\">\n<li>An easy way of selecting the processes owned by someuser</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps wu -U someuser\"><pre>❯❯ ps wu -U someuser</pre></div>\n<ul dir=\"auto\">\n<li>Drownattack TLD stats</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s https://www.drownattack\\\\.com/top-sites |html2text|awk -F\\\\. '/^[0-9]+/{print $NF}' |sort|uniq -c|sort -nr\"><pre>❯❯ curl -s https://www.drownattack<span class=\"pl-cce\">\\\\</span>.com/top-sites <span class=\"pl-k\">|</span>html2text<span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\</span>. <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^[0-9]+/{print $NF}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -nr</pre></div>\n<ul dir=\"auto\">\n<li>Stump your friends. How many months had only 19 days? Answer: 1 (When we switched to Gregorian. Actual month depends on locale)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cal 9 1752\"><pre>❯❯ cal 9 1752</pre></div>\n<ul dir=\"auto\">\n<li>Show the first and last 5 lines of the file 'log'</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (head -5; tail -5) &lt; log\"><pre>❯❯ (head -5<span class=\"pl-k\">;</span> tail -5) <span class=\"pl-k\">&lt;</span> log</pre></div>\n<ul dir=\"auto\">\n<li>vim add column Data5=N with an inc. number</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :let i = 1 | g/|Population=/s/|Population=/\\\\=printf(&quot;|Data5=%d|Population=&quot;, i)/ | let i = i+1\"><pre>❯❯ :let i = 1 <span class=\"pl-k\">|</span> g/<span class=\"pl-k\">|</span>Population=/s/<span class=\"pl-k\">|</span>Population=/<span class=\"pl-cce\">\\\\</span>=printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>|Data5=%d|Population=<span class=\"pl-pds\">\"</span></span>, i)/ <span class=\"pl-k\">|</span> <span class=\"pl-c1\">let</span> i = i+1</pre></div>\n<ul dir=\"auto\">\n<li>Show % reports of CPU statistics for every active task in the server at two second intervals</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pidstat 2 5\"><pre>❯❯ pidstat 2 5</pre></div>\n<ul dir=\"auto\">\n<li>Lower case all files in a folder</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for f in *; do b=$(echo &quot;$f&quot; | tr \\'[A-Z]\\' \\'[a-z]\\'); mv &quot;$f&quot; &quot;$b&quot;; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> b=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>echo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr <span class=\"pl-cce\">\\'</span>[A-Z]<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span>[a-z]<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> mv <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$b</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Make some waves. Req 256-color term</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 19 21; seq 21 -1 18)&quot; |while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .03; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 19 21<span class=\"pl-k\">;</span> seq 21 -1 18<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .03<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>counts files in the current path by modification month. Thx @aSheepie</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -type f -printf '%TY-%Tm\\\\n' | sort | uniq -c\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -type f -printf <span class=\"pl-s\"><span class=\"pl-pds\">'</span>%TY-%Tm\\\\n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Print all from 3rd field to end of line. Very useful for log parsing</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{ print substr($0, index($0,$3)) }' mail.log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{ print substr($0, index($0,$3)) }<span class=\"pl-pds\">'</span></span> mail.log</pre></div>\n<ul dir=\"auto\">\n<li><em>\"Attempt\"</em> to recover an accidentally removed file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fgrep --binary-files=text -C 2000 &quot;string in file&quot; /dev/sda &gt; recovereddata.out\"><pre>❯❯ fgrep --binary-files=text -C 2000 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>string in file<span class=\"pl-pds\">\"</span></span> /dev/sda <span class=\"pl-k\">&gt;</span> recovereddata.out</pre></div>\n<ul dir=\"auto\">\n<li>Make less more like more, but still more than more. Percent of file in prompt, etc. Thx @CLK55</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ export LESS='-sCmqPm--Less--(?eEND:%pb\\\\%.)'\"><pre>❯❯ <span class=\"pl-k\">export</span> LESS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-sCmqPm--Less--(?eEND:%pb\\\\%.)<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>This environment variable will invoke 'less' with these options when it is used. Like when viewing a man page</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ export LESS=&quot;-S -j10 -i\"><pre>❯❯ <span class=\"pl-k\">export</span> LESS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-S -j10 -i</span></pre></div>\n<ul dir=\"auto\">\n<li>Terminal based spreadsheet program. Has some degree of vi key support</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sc\"><pre>❯❯ sc</pre></div>\n<ul dir=\"auto\">\n<li>This is an X automation tool that allows you to script your keyboard and mouse</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xdotool\"><pre>❯❯ xdotool</pre></div>\n<ul dir=\"auto\">\n<li>You can actually follow more than one log at once and get new updates on them. Use -q to not print filename header</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f *.log\"><pre>❯❯ tail -f <span class=\"pl-k\">*</span>.log</pre></div>\n<ul dir=\"auto\">\n<li>TEXT}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ TEXT=&quot;measure the length of this text&quot; ; echo ${\"><pre>❯❯ TEXT=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>measure the length of this text<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${</span></pre></div>\n<ul dir=\"auto\">\n<li>In RPM, determine which packages where installed in Nov 2015</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --queryformat &quot;%{NAME} %{INSTALLTIME:date}\\\\n&quot; | grep &quot;Nov 2015\"><pre>❯❯ rpm -qa --queryformat <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%{NAME} %{INSTALLTIME:date}<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Nov 2015</span></pre></div>\n<ul dir=\"auto\">\n<li>Find and long list mp3 files in Music dir older than a year and larger than 10MB</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find music -name '*.mp3' -mtime +365 -a -size +10M -ls\"><pre>❯❯ find music -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*.mp3<span class=\"pl-pds\">'</span></span> -mtime +365 -a -size +10M -ls</pre></div>\n<ul dir=\"auto\">\n<li>Show photo filenames where no flash was used. Req. Imagemagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format &quot;%f F:%[EXIF:Flash]\\\\n&quot; *.jpg | egrep &quot; F:(0|16|24|32)$\"><pre>❯❯ identify -format <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%f F:%[EXIF:Flash]<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> F:(0|16|24|32)$</span></pre></div>\n<ul dir=\"auto\">\n<li>Stream mp3 at bitrate speed (128Kbits). WARNING: NSFW \"lyrics\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -N --limit-rate 16K http://f.climagic\\\\.org/techsup.mp3 | mpg123 -\"><pre>❯❯ curl -N --limit-rate 16K http://f.climagic<span class=\"pl-cce\">\\\\</span>.org/techsup.mp3 <span class=\"pl-k\">|</span> mpg123 -</pre></div>\n<ul dir=\"auto\">\n<li>Search for names and build a frequency count for each name</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -wo &quot;(Donnie|Frank|Roberta|Grandma)&quot; story.txt |sort|uniq -c|sort -r\"><pre>❯❯ egrep -wo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(Donnie|Frank|Roberta|Grandma)<span class=\"pl-pds\">\"</span></span> story.txt <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -r</pre></div>\n<ul dir=\"auto\">\n<li>Show the total space used on all your local disk partitions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -lP |awk \\'{sum += $3} END {printf &quot;%d GiB\\\\n&quot;, sum/2**20}\\'\"><pre>❯❯ df -lP <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{sum += <span class=\"pl-smi\">$3</span>} END {printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d GiB<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>, sum/2<span class=\"pl-k\">**</span>20}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use the */ trick to get only the directories, then use ${dir%/} to remove the trailing / you get</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for dir in */ ; do echo &quot;${dir%/}&quot; ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">dir</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${dir<span class=\"pl-k\">%/</span>}</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use perl regex (negative look-behind/look-ahead assertions) to get URLs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -P -o \\'(?&lt;=href=&quot;)http:\\\\S+(?=&quot;)\\' *.html\"><pre>❯❯ grep -P -o <span class=\"pl-cce\">\\'</span>(<span class=\"pl-k\">?</span><span class=\"pl-k\">&lt;</span>=href=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)http:<span class=\"pl-cce\">\\\\</span>S+(?=<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">*</span>.html</pre></div>\n<ul dir=\"auto\">\n<li>Create a 1280x720 color plasma image. Different each time. Uses ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 1280x720 plasma:green-blue background.png\"><pre>❯❯ convert -size 1280x720 plasma:green-blue background.png</pre></div>\n<ul dir=\"auto\">\n<li>Write 1MB (1048576) of random numbers to a file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strings /dev/urandom | tr -c -d '0-9' | dd of=randomnumbers.txt bs=1 count=1M\"><pre>❯❯ strings /dev/urandom <span class=\"pl-k\">|</span> tr -c -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span>0-9<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> dd of=randomnumbers.txt bs=1 count=1M</pre></div>\n<ul dir=\"auto\">\n<li>Replace foo with bar only on lines that contain 'bang'. Use in pipeline or with file args. Thanks @Agarri_FR</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed &quot;/bang/ s/foo/bar/\"><pre>❯❯ sed <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/bang/ s/foo/bar/</span></pre></div>\n<ul dir=\"auto\">\n<li>Poor man's video streaming service at video bitrate</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Server: nc -l 8762 &lt; video.mpg  Client: nc server 8762 | mplayer -cache 1000 -\"><pre>❯❯ Server: nc -l 8762 <span class=\"pl-k\">&lt;</span> video.mpg  Client: nc server 8762 <span class=\"pl-k\">|</span> mplayer -cache 1000 -</pre></div>\n<ul dir=\"auto\">\n<li>After all the host keys and auth, you'll be on server3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -t user1@server1 \\'ssh -t user2@server2 &quot;ssh -t user3@server3&quot;\\'\"><pre>❯❯ ssh -t user1@server1 <span class=\"pl-cce\">\\'</span>ssh -t user2@server2 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ssh -t user3@server3<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>rig is this cool little program that generates random identities</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rig\"><pre>❯❯ rig</pre></div>\n<ul dir=\"auto\">\n<li>Guitar strum. play is from sox pkg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth pl G2 pl B2 pl D3 pl G3 pl D4 pl G4 delay 0 .05 .1 .15 .2 .25 remix - fade 0 4 .1 norm -1\"><pre>❯❯ play -n synth pl G2 pl B2 pl D3 pl G3 pl D4 pl G4 delay 0 .05 .1 .15 .2 .25 remix - fade 0 4 .1 norm -1</pre></div>\n<ul dir=\"auto\">\n<li>Climagic video - Aliases vs Functions and where to use $1</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/5h7TPmrTOs\"><pre>❯❯ https://t.co/5h7TPmrTOs</pre></div>\n<ul dir=\"auto\">\n<li>Play music for 60 minutes and then shutdown. Like sleep on alarm clock</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo shutdown -h 60 &amp; mpg123 ambientmusic/*.mp3\"><pre>❯❯ sudo shutdown -h 60 <span class=\"pl-k\">&amp;</span> mpg123 ambientmusic/<span class=\"pl-k\">*</span>.mp3</pre></div>\n<ul dir=\"auto\">\n<li>Using +F option or pressing F in less is similar to <code>tail -f filename.log</code> but can use less's features. Thx @gazoombo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less +F filename.log\"><pre>❯❯ less +F filename.log</pre></div>\n<ul dir=\"auto\">\n<li>In vim, when you want to paste in code, its often useful to 'set paste' so that the autoindent/syntax doesn't interfere</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set paste\"><pre>❯❯ :set paste</pre></div>\n<ul dir=\"auto\">\n<li>If you set your production server's time to this date, you will get fired</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -s 1970-01-01\"><pre>❯❯ date -s 1970-01-01</pre></div>\n<ul dir=\"auto\">\n<li>Nice little demo of the potential of UTF-8 in plain text files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim 'https://t.co/I695o2mTh2'\"><pre>❯❯ vim <span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://t.co/I695o2mTh2<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Record a macro called 'a' that moves down two lines (jj) and then deletes 1 line (dd). Run w/ @a, run 100 times 100@a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vi macro: qajjddq\"><pre>❯❯ vi macro: qajjddq</pre></div>\n<ul dir=\"auto\">\n<li>Change the case (to lowercase) of the first letter E of a filename using brace expansion</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mv {E,e}ecummings.txt\"><pre>❯❯ mv {E,e}ecummings.txt</pre></div>\n<ul dir=\"auto\">\n<li>List of empty subdirectories of current directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -empty -type d\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -empty -type d</pre></div>\n<ul dir=\"auto\">\n<li>Like ping, but it uses an ARP request to check, which gets around host firewalls blocking ICMP. Only works on same subnet</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ arping 10.0.8.5\"><pre>❯❯ arping 10.0.8.5</pre></div>\n<ul dir=\"auto\">\n<li>Check if cert was signed by key</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff &lt;(openssl rsa -in my.key -modulus | grep Modulus) &lt;(openssl x509 -in my.crt -modulus | grep Modulus)\"><pre>❯❯ diff <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>openssl rsa -in my.key -modulus <span class=\"pl-k\">|</span> grep Modulus<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>openssl x509 -in my.crt -modulus <span class=\"pl-k\">|</span> grep Modulus<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Hide the previous command you just ran and forgot to use space</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias hideprev='history -d $((HISTCMD-2)) &amp;&amp; history -d $((HISTCMD-1))'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> hideprev=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>history -d $((HISTCMD-2)) &amp;&amp; history -d $((HISTCMD-1))<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show your basic terminal text colors for terminal preferences change</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;\\\\e[%dm%d dark\\\\e[0m  \\\\e[%d;1m%d bold\\\\e[0m\\\\n&quot; {30..37}{,,,}\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[%dm%d dark<span class=\"pl-cce\">\\\\</span>e[0m  <span class=\"pl-cce\">\\\\</span>e[%d;1m%d bold<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {30..37}{,,,}</pre></div>\n<ul dir=\"auto\">\n<li>1.jpg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl \\'https://t.co/5Eu3Bbah5L\\' -o &quot;trip\"><pre>❯❯ curl <span class=\"pl-cce\">\\'</span>https://t.co/5Eu3Bbah5L<span class=\"pl-cce\">\\'</span> -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>trip</span></pre></div>\n<ul dir=\"auto\">\n<li>Use cut to print out columns 1, 5 and 10 through 15 in data.csv and write that to new.csv</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cut -d, -f1,5,10-15 data.csv &gt; new.csv\"><pre>❯❯ cut -d, -f1,5,10-15 data.csv <span class=\"pl-k\">&gt;</span> new.csv</pre></div>\n<ul dir=\"auto\">\n<li>Copy a file using \"ionice -c 3\" to give it idle priority to reduce load on the system</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ionice -c 3 cp vm1.img vm1-clone.img\"><pre>❯❯ ionice -c 3 cp vm1.img vm1-clone.img</pre></div>\n<ul dir=\"auto\">\n<li>Find file duplicates in 'dir' recursively based on size and mdsum and log to dupes.txt. Thx @sizeof</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fdupes -r dir &gt; dupes.txt\"><pre>❯❯ fdupes -r dir <span class=\"pl-k\">&gt;</span> dupes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Count syslog hits per minute in your messages log file. Useful for doing quick stats</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F: {\\'print $1 &quot;:&quot; $2\\'} messages |uniq -c\"><pre>❯❯ awk -F: {<span class=\"pl-cce\">\\'</span>print <span class=\"pl-smi\">$1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:<span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$2</span><span class=\"pl-cce\">\\'</span>} messages <span class=\"pl-k\">|</span>uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Todo list</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ todo(){ cd ~/.todo||return 1&amp;&amp; l=$(ls -1t|head -n1)&amp;&amp;t=$(date +%Y%m%d);[[ &quot;$1&quot; == &quot;last&quot; ]]&amp;&amp;cp $l $t; ${EDITOR:-vi} $t;cd -;}\"><pre>❯❯ <span class=\"pl-en\">todo</span>(){ <span class=\"pl-c1\">cd</span> <span class=\"pl-k\">~</span>/.todo<span class=\"pl-k\">||</span>return 1&amp;<span class=\"pl-k\">&amp;</span> l=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls -1t<span class=\"pl-k\">|</span>head -n1<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">&amp;&amp;</span>t=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y%m%d<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>[[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>last<span class=\"pl-pds\">\"</span></span> ]]<span class=\"pl-k\">&amp;&amp;</span>cp <span class=\"pl-smi\">$l</span> <span class=\"pl-smi\">$t</span><span class=\"pl-k\">;</span> <span class=\"pl-smi\">${EDITOR<span class=\"pl-k\">:-</span>vi}</span> <span class=\"pl-smi\">$t</span><span class=\"pl-k\">;</span><span class=\"pl-c1\">cd</span> -<span class=\"pl-k\">;</span>}</pre></div>\n<ul dir=\"auto\">\n<li>Use the exiv2 EXIF program to rename your jpg files according to their exif date/time data. Thx @mvuets</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiv2 -k -F rename *.jpg\"><pre>❯❯ exiv2 -k -F rename <span class=\"pl-k\">*</span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Remove the prefix 'unwanted' from the beginning of each filename with .jpg suffix in CWD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rename 's/^unwanted//' *.jpg\"><pre>❯❯ rename <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^unwanted//<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Create a dynamic SOCKS5 proxy on port 8989 using an SSH connection. Some apps can be configured to use this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -D 8989 you@remotehost\"><pre>❯❯ ssh -D 8989 you@remotehost</pre></div>\n<ul dir=\"auto\">\n<li>Print the day of the year. Can be useful with things like find</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date +%j\"><pre>❯❯ date +%j</pre></div>\n<ul dir=\"auto\">\n<li>Pandora music client for the command line. And like many CLI clients, it has more control, features and less bloat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pianobar\"><pre>❯❯ pianobar</pre></div>\n<ul dir=\"auto\">\n<li>linux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ What animals live in the snow? Penguins.\\rWhat other animals live in the snow? A lot of penguins.\"><pre>❯❯ What animals live <span class=\"pl-k\">in</span> the snow<span class=\"pl-k\">?</span> Penguins.<span class=\"pl-cce\">\\r</span>What other animals live <span class=\"pl-k\">in</span> the snow<span class=\"pl-k\">?</span> A lot of penguins.</pre></div>\n<ul dir=\"auto\">\n<li>Compare the contents of 2 dirs. Show only 2 columns, each for files unique to the directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -3 &lt;(ls -1 dir1) &lt;(ls -1 dir2)\"><pre>❯❯ comm -3 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>ls -1 dir1<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>ls -1 dir2<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>How many days will it take to transfer 145GiB at 1.35MiB/sec? Use qalc!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ qalc &quot;145Gibyte / 1.35(Mibyte/second) to day\"><pre>❯❯ qalc <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>145Gibyte / 1.35(Mibyte/second) to day</span></pre></div>\n<ul dir=\"auto\">\n<li>Monitor your wireless card signal strength on the screen</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n1 cat /proc/net/wireless\"><pre>❯❯ watch -n1 cat /proc/net/wireless</pre></div>\n<ul dir=\"auto\">\n<li>Want to write a word doc without the fuss? Make a TXT, Markdown, etc. &amp; convert. Thx @BriceDutheil</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pandoc -o proposal.docx proposal.txt\"><pre>❯❯ pandoc -o proposal.docx proposal.txt</pre></div>\n<ul dir=\"auto\">\n<li>group subdomains by domain. Good use of rev</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat longdomainlist.txt | rev | sort | rev\"><pre>❯❯ cat longdomainlist.txt <span class=\"pl-k\">|</span> rev <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>Compare just the assignment lines of two config files that use = for value assignment</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff &lt;(grep = config.txt) &lt;(grep = config.txt-new)\"><pre>❯❯ diff <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>grep = config.txt<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>grep = config.txt-new<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show the 10 largest directories at top level along with total usage. All in megabytes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -cms .[^.]*/ */ | sort -rn | head\"><pre>❯❯ du -cms .[^.]<span class=\"pl-k\">*</span>/ <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> sort -rn <span class=\"pl-k\">|</span> head</pre></div>\n<ul dir=\"auto\">\n<li>On Linux, print out a list of the process IDs that are in the zombie state</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps aux | awk \\'{if ($8==&quot;Z&quot;) { print $2 }}\\'\"><pre>❯❯ ps aux <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{if (<span class=\"pl-smi\">$8</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Z<span class=\"pl-pds\">\"</span></span>) { print <span class=\"pl-smi\">$2</span> }}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Mount a CDROM disc from its ISO image file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dd if=/dev/cdrom of=image.iso ; mkdir CDroot ; mount -o loop image.iso CDroot ; cd CDroot\"><pre>❯❯ dd if=/dev/cdrom of=image.iso <span class=\"pl-k\">;</span> mkdir CDroot <span class=\"pl-k\">;</span> mount -o loop image.iso CDroot <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> CDroot</pre></div>\n<ul dir=\"auto\">\n<li>20 years ago IBM supercomputer Deep Blue defeats Garry Kasparov in chess for the first time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fliptable(){ echo &quot;\\xef\\xbc\\x88\\xe2\\x95\\xaf\\xc2\\xb0\\xe2\\x96\\xa1\\xc2\\xb0\\xef\\xbc\\x89\\xe2\\x95\\xaf \\xe2\\x94\\xbb\\xe2\\x94\\x81\\xe2\\x94\\xbb&quot;; }\"><pre>❯❯ <span class=\"pl-en\">fliptable</span>(){ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\xef\\xbc\\x88\\xe2\\x95\\xaf\\xc2\\xb0\\xe2\\x96\\xa1\\xc2\\xb0\\xef\\xbc\\x89\\xe2\\x95\\xaf \\xe2\\x94\\xbb\\xe2\\x94\\x81\\xe2\\x94\\xbb<span class=\"pl-pds\">\"</span></span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Write out 20 png format frames from a video starting at 3 minutes, 46 seconds</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -vo png -ss 3:46 -frames 20 stairs.mp4\"><pre>❯❯ mplayer -vo png -ss 3:46 -frames 20 stairs.mp4</pre></div>\n<ul dir=\"auto\">\n<li>Move photos with EXIF data to directories by year created/taken. Be verbose</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiftool -v '-Directory&lt;DateTimeOriginal' -d %Y .\"><pre>❯❯ exiftool -v <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-Directory&lt;DateTimeOriginal<span class=\"pl-pds\">'</span></span> -d %Y <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>Get list of top URLs from all logs combined</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat access_log*.gz |cat - access_log |awk '{print $7}' |sed 's/\\\\?.*//' |sort|uniq -c|sort -nr\"><pre>❯❯ zcat access_log<span class=\"pl-k\">*</span>.gz <span class=\"pl-k\">|</span>cat - access_log <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $7}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/\\\\?.*//<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -nr</pre></div>\n<ul dir=\"auto\">\n<li>xkcd <a href=\"https://t.co/qIAPXwY2Xj\" rel=\"nofollow\">https://t.co/qIAPXwY2Xj</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ These are your father's parentheses. Elegant decorations, for a birthday cake.\"><pre>❯❯ These are your father<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s parentheses. Elegant decorations, for a birthday cake.</span></pre></div>\n<ul dir=\"auto\">\n<li>A site that helps you build the find options you want to use and now several other common commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/OahUUpr12o\"><pre>❯❯ https://t.co/OahUUpr12o</pre></div>\n<ul dir=\"auto\">\n<li>Annoyed by wrapped lines in df output. Try -P to unwrap the lines and piping to column will align the columns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -P | column -t\"><pre>❯❯ df -P <span class=\"pl-k\">|</span> column -t</pre></div>\n<ul dir=\"auto\">\n<li>Print disk space used on all ext3 or 4 FS in GiB</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -Pl -t ext3 -t ext4 | tail -n+2 | awk '{ sum+=$3 } END { print sum/2**20 }'\"><pre>❯❯ df -Pl -t ext3 -t ext4 <span class=\"pl-k\">|</span> tail -n+2 <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{ sum+=$3 } END { print sum/2**20 }<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>$PS1</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ PS1=\"><pre>❯❯ PS1=</pre></div>\n<ul dir=\"auto\">\n<li>Compress files with xz in PWD according to size, starting with smallest</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -Sr1 | while IFS=$\\'\\\\n\\' read -r file; do xz &quot;$file&quot;; done\"><pre>❯❯ ls -Sr1 <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> IFS=$<span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-c1\">read</span> -r file<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xz <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$file</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>For Mar 22nd, print the req fields for hosts from two letter gTLD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fgrep 22/Mar/2015 access_log |awk \\'$1~/\\\\.[a-z][a-z]$/{print $6 &quot; &quot; $7}\\'\"><pre>❯❯ fgrep 22/Mar/2015 access_log <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$1</span>~/<span class=\"pl-cce\">\\\\</span>.[a-z][a-z]$/{print <span class=\"pl-smi\">$6</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$7</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>\"}; print $0 \" \" b;}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{print $4}\\' apache_log|sort -n|cut -c1-15|uniq -c|awk \\'{b=&quot;&quot;;for(i=0;i&lt;$1/10;i++){b=b\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$4</span>}<span class=\"pl-cce\">\\'</span> apache_log<span class=\"pl-k\">|</span>sort -n<span class=\"pl-k\">|</span>cut -c1-15<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{b=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>for(i=0<span class=\"pl-k\">;</span>i<span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">$1</span>/10<span class=\"pl-k\">;</span>i++){b=b</pre></div>\n<ul dir=\"auto\">\n<li>Imagine being able to run tail -f /dev/world (You can get the t command for twitter here: <a href=\"https://t.co/wa8QhYYAdE\" rel=\"nofollow\">https://t.co/wa8QhYYAdE</a>)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t matrix\"><pre>❯❯ t matrix</pre></div>\n<ul dir=\"auto\">\n<li>Do an instant replay on your Roku</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -d &quot;&quot; http://YourRokuIP:8060/keypress/InstantReplay\"><pre>❯❯ curl -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span> http://YourRokuIP:8060/keypress/InstantReplay</pre></div>\n<ul dir=\"auto\">\n<li>CLIMagic video: Epic demo of how I watched Superbowl 46 over a netcat stream</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/iXz16142fG\"><pre>❯❯ https://t.co/iXz16142fG</pre></div>\n<ul dir=\"auto\">\n<li>Detect 90% of pwn'd PHP code or thereabouts</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -r eval.*base64 source_code_tree\"><pre>❯❯ grep -r eval.<span class=\"pl-k\">*</span>base64 source_code_tree</pre></div>\n<ul dir=\"auto\">\n<li>Run Nyan Cat in your terminal like its 2011</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/6Q1oHKLrwq\"><pre>❯❯ https://t.co/6Q1oHKLrwq</pre></div>\n<ul dir=\"auto\">\n<li>Which days I've worked... By @d1eg0_garc1a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ git log --date=short --format=&quot;%ci&quot;|awk \\'{print $1}\\'|uniq\"><pre>❯❯ git log --date=short --format=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%ci<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$1</span>}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>uniq</pre></div>\n<h2 dir=\"auto\"></h2>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -h . | grep &quot;^[0-9\\\\.]\\\\+G\"><pre>❯❯ du -h <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[0-9<span class=\"pl-cce\">\\\\</span>.]<span class=\"pl-cce\">\\\\</span>+G</span></pre></div>\n<ul dir=\"auto\">\n<li>Do an apt upgrade and save a copy of the output to a current dated filename</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ apt-get upgrade | tee upgrade-$( date +%F ).log\"><pre>❯❯ apt-get upgrade <span class=\"pl-k\">|</span> tee upgrade-<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> date +%F <span class=\"pl-pds\">)</span></span>.log</pre></div>\n<ul dir=\"auto\">\n<li>Life is too short to run the same command twice</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ export HISTSIZE=0\"><pre>❯❯ <span class=\"pl-k\">export</span> HISTSIZE=0</pre></div>\n<ul dir=\"auto\">\n<li>Random color per log line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -F syslog |while read -r line;do printf &quot;\\\\033[38;5;%dm%s\\\\033[0m\\\\n&quot; $(($RANDOM%255)) &quot;$line&quot;;done\"><pre>❯❯ tail -F syslog <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r line<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>033[38;5;%dm%s<span class=\"pl-cce\">\\\\</span>033[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">255</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$line</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Because you can't do this in real life</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nohup sleep 8h\"><pre>❯❯ nohup sleep 8h</pre></div>\n<ul dir=\"auto\">\n<li>Make month histogram of dates of files in current directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -la --full-time |tr -s &quot; &quot; |cut -f6 -d &quot; &quot;|cut -c1-7 | sort | uniq -c\"><pre>❯❯ ls -la --full-time <span class=\"pl-k\">|</span>tr -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>cut -f6 -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>cut -c1-7 <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>A nice fade slideshow command you can also use</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/glslideshow -pan 20 -duration 20 -delay 0 -fade 5 -clip -window-id\"><pre>❯❯ /usr/lib/xscreensaver/glslideshow -pan 20 -duration 20 -delay 0 -fade 5 -clip -window-id</pre></div>\n<ul dir=\"auto\">\n<li>Matrix screensaver background</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/glmatrix -window-id $(xwininfo -int -name &quot;Desktop&quot; |awk \\'/Desktop{print $4}\\')\"><pre>❯❯ /usr/lib/xscreensaver/glmatrix -window-id <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>xwininfo -int -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Desktop<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>/Desktop{print <span class=\"pl-smi\">$4</span>}<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Move current year pics to 2015 directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -daystart -type f -name '*.jpg' -mtime -$( date +%j ) -exec mv -v {} 2015/ \\\\;\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -daystart -type f -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*.jpg<span class=\"pl-pds\">'</span></span> -mtime -<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> date +%j <span class=\"pl-pds\">)</span></span> -exec mv -v {} 2015/ <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Learn a command on each new shell open</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo \\'man $(ls /usr/bin | shuf -n 1)| sed -n &quot;/^NAME/ { n;p;q }&quot;\\' &gt; &gt; ~/.bashrc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\'</span>man <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls /usr/bin <span class=\"pl-k\">|</span> shuf -n 1<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">|</span> sed -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/^NAME/ { n;p;q }<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">~</span>/.bashrc</pre></div>\n<ul dir=\"auto\">\n<li>Show directory size and sort by human readable amount (MB, GB, etc.). Requires GNU sort for -h option</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh */ | sort -h\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> sort -h</pre></div>\n<ul dir=\"auto\">\n<li>list top 50 404's in descending order</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'$9 == &quot;404&quot; {print $7}\\' access.log |sort|uniq -c|sort -rn| head -n 50\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$9</span> == <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>404<span class=\"pl-pds\">\"</span></span> {print <span class=\"pl-smi\">$7</span>}<span class=\"pl-cce\">\\'</span> access.log <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -rn<span class=\"pl-k\">|</span> head -n 50</pre></div>\n<ul dir=\"auto\">\n<li>iodine is a client and server that allow you to tunnel IP traffic over DNS, bypassing many firewalls, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/Uxzf93qAkC\"><pre>❯❯ https://t.co/Uxzf93qAkC</pre></div>\n<ul dir=\"auto\">\n<li>Edit a file on a remote server using vim from your local *nix desktop</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim scp://user@server1//etc/httpd/httpd.conf\"><pre>❯❯ vim scp://user@server1//etc/httpd/httpd.conf</pre></div>\n<ul dir=\"auto\">\n<li>And you probably haven't heard one of these in a while</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth sine 480 sine 620 remix 1-2 fade 0 0.5 delay 0.5 repeat 5\"><pre>❯❯ play -n synth sine 480 sine 620 remix 1-2 fade 0 0.5 delay 0.5 repeat 5</pre></div>\n<ul dir=\"auto\">\n<li>With this command you can generate a U.S. dial tone using sox play</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth sine A sine F remix 1-2 fade 0 5\"><pre>❯❯ play -n synth sine A sine F remix 1-2 fade 0 5</pre></div>\n<ul dir=\"auto\">\n<li>@stormdragon2976 constructed this command that imitates the sound of an old rotary phone using espeak</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/sDwF5A448q\"><pre>❯❯ https://t.co/sDwF5A448q</pre></div>\n<ul dir=\"auto\">\n<li>Find any files or directories on your system that are suid or sgid. Older versions of find can try -perm +u+s</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / -perm /+s -ls\"><pre>❯❯ find / -perm /+s -ls</pre></div>\n<ul dir=\"auto\">\n<li>Quick popup notification command after 3 minutes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 3m; xmessage -nearmouse &quot;Your tea is ready\"><pre>❯❯ sleep 3m<span class=\"pl-k\">;</span> xmessage -nearmouse <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Your tea is ready</span></pre></div>\n<ul dir=\"auto\">\n<li>Get a list of all files last modified in 2013. Useful for passing to xargs or while loop</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -printf &quot;%TY %p\\\\n&quot; | grep ^2013\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%TY %p<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> grep ^2013</pre></div>\n<ul dir=\"auto\">\n<li>List all rpm packaged files in /var/log by what rpm they belong to</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --filesbypkg | grep &quot; /var/log/\"><pre>❯❯ rpm -qa --filesbypkg <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> /var/log/</span></pre></div>\n<ul dir=\"auto\">\n<li>Say hello using a nice voice</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -q -O- -U Mozilla &quot;https://t.co/FtVcqALluf\\\\.com/translate_tts?q=hello&amp;tl=en&quot;|mpg123 -q -\"><pre>❯❯ wget -q -O- -U Mozilla <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://t.co/FtVcqALluf<span class=\"pl-cce\">\\\\</span>.com/translate_tts?q=hello&amp;tl=en<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>mpg123 -q -</pre></div>\n<ul dir=\"auto\">\n<li>Create the \"Matrix effect\" in your terminal window</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/XoOtJkj06I\"><pre>❯❯ https://t.co/XoOtJkj06I</pre></div>\n<ul dir=\"auto\">\n<li>find all files larger than 100MB and display their human readable size</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / -size +100M -exec du -h {} \\\\;\"><pre>❯❯ find / -size +100M -exec du -h {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>You can use the bc command to convert base 10 numbers to base 16 (hexadecimal). Tip: Specify obase first</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;obase=16;ibase=10;40&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>obase=16;ibase=10;40<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Convert hexadecimal number 28 to decimal 40. Can also do echo $((16</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $((0x28))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">0x28</span><span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Ever edit a file as a normal user that is owned by root. This vim command will allow you to overwrite it with root perms</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :w !sudo tee %\"><pre>❯❯ :w <span class=\"pl-k\">!</span>sudo tee %</pre></div>\n<ul dir=\"auto\">\n<li>Turn a Unix epoch time back into a human readable date. Feature of GNU date</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d @192179700\"><pre>❯❯ date -d @192179700</pre></div>\n<ul dir=\"auto\">\n<li>Play alarm.wav once site is back</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while ! curl -m 10 http://www.example\\\\.com/ ; do echo still down ; sleep 1m ; done ; play alarm.wav\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-k\">!</span> curl -m 10 http://www.example<span class=\"pl-cce\">\\\\</span>.com/ <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> still down <span class=\"pl-k\">;</span> sleep 1m <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">;</span> play alarm.wav</pre></div>\n<ul dir=\"auto\">\n<li>CLI generated dubstep. Thx @Butter_Tweets</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do echo wub wub wub | espeak --stdout | play - pitch -400 bend .3,-600,.3 ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> wub wub wub <span class=\"pl-k\">|</span> espeak --stdout <span class=\"pl-k\">|</span> play - pitch -400 bend .3,-600,.3 <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>groundhog0day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ The groundhog saw /etc/shadow, the rainbows are next. Winter is over.\"><pre>❯❯ The groundhog saw /etc/shadow, the rainbows are next. Winter is over.</pre></div>\n<ul dir=\"auto\">\n<li>sshfs is a nice util that uses FUSE and SSH to mount a remote directory as a local one</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sshfs user@remotehost:/remotedir mydir\"><pre>❯❯ sshfs user@remotehost:/remotedir mydir</pre></div>\n<ul dir=\"auto\">\n<li>1</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ You probably learned SSH from me. I wrote the top ssh tutorial for the past 15 years. Search for ssh tutorial. Its the Suso one, usually\"><pre>❯❯ You probably learned SSH from me. I wrote the top ssh tutorial <span class=\"pl-k\">for</span> the past 15 years. Search <span class=\"pl-k\">for</span> ssh tutorial. Its the Suso one, usually</pre></div>\n<ul dir=\"auto\">\n<li>Apparently according to testing, this is the fastest way to delete millions of small files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync -a -delete empty/ foo/\"><pre>❯❯ rsync -a -delete empty/ foo/</pre></div>\n<ul dir=\"auto\">\n<li>You started a program, but now want it to notify you when its done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;ctrl-z &gt; bg ; wait %1 ; echo &quot;done&quot; | mail -s &quot;done&quot; you@example.com\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>ctrl-z <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">bg</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">wait</span> %1 <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>done<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> mail -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>done<span class=\"pl-pds\">\"</span></span> you@example.com</pre></div>\n<ul dir=\"auto\">\n<li>Download playlist vids</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ youtube-dl --max-quality 37 --title --playlist-start=1 --playlist-end=10 --ignore-errors youtube-playlist-url\"><pre>❯❯ youtube-dl --max-quality 37 --title --playlist-start=1 --playlist-end=10 --ignore-errors youtube-playlist-url</pre></div>\n<ul dir=\"auto\">\n<li>CLIMagic video: Use comment characters in commands to add meta info to commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/k9WE4wZycs\"><pre>❯❯ https://t.co/k9WE4wZycs</pre></div>\n<ul dir=\"auto\">\n<li>Suspend and reattach a process to screen</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ longcmd ; [Ctrl-Z] ; bg ; disown ; screen ; reptyr $( pidof longcmd )\"><pre>❯❯ longcmd <span class=\"pl-k\">;</span> [Ctrl-Z] <span class=\"pl-k\">;</span> <span class=\"pl-c1\">bg</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">disown</span> <span class=\"pl-k\">;</span> screen <span class=\"pl-k\">;</span> reptyr <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> pidof longcmd <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>By @seidler2547</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ git log --author=$USER --format=&quot;- %B&quot; --since=-7days --reverse |mail -s &quot;What I\\'ve done this week&quot; boss@company\\\\.com\"><pre>❯❯ git log --author=<span class=\"pl-smi\">$USER</span> --format=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>- %B<span class=\"pl-pds\">\"</span></span> --since=-7days --reverse <span class=\"pl-k\">|</span>mail -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>What I\\'ve done this week<span class=\"pl-pds\">\"</span></span> boss@company<span class=\"pl-cce\">\\\\</span>.com</pre></div>\n<ul dir=\"auto\">\n<li>I find brace expansion useful for renaming files. This cmd expands to \"mv Picture.jpg Picture-of-my-cat.jpg\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mv Picture{,-of-my-cat}.jpg\"><pre>❯❯ mv Picture{,-of-my-cat}.jpg</pre></div>\n<ul dir=\"auto\">\n<li>mnt iPad filesystem. Thx @timothyjones</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ apt-get install ifuse&quot;, &quot;ifuse /media/iPad&quot; and &quot;cp -v /media/iPad/DCIM/100APPLE/IMG*MOV /target\"><pre>❯❯ apt-get install ifuse<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>ifuse /media/iPad<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> and <span class=\"pl-pds\">\"</span></span>cp -v /media/iPad/DCIM/100APPLE/IMG<span class=\"pl-k\">*</span>MOV /target</pre></div>\n<ul dir=\"auto\">\n<li>Use the exiv2 EXIF program to rename your jpg files according to their exif date/time data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ exiv2 -k -F rename *.jpg\"><pre>❯❯ exiv2 -k -F rename <span class=\"pl-k\">*</span>.jpg</pre></div>\n<ul dir=\"auto\">\n<li>tail log &amp; highlight errors (if your grep supports --color) Thx @kvegh</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f foo.log|egrep --line-buffered --color=auto 'ERROR|WARN|$'\"><pre>❯❯ tail -f foo.log<span class=\"pl-k\">|</span>egrep --line-buffered --color=auto <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ERROR|WARN|$<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Pretend that you're on a starship</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1\"><pre>❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1</pre></div>\n<ul dir=\"auto\">\n<li>Extract MP3 from FLV function. Thx @tweetygeekyhbar</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ extr_mp3(){ ffmpeg -i $1.flv -f mp3 -ar 44100 -ac 2 -ab 192k -y -acodec copy $1.mp3; }\"><pre>❯❯ <span class=\"pl-en\">extr_mp3</span>(){ ffmpeg -i <span class=\"pl-smi\">$1</span>.flv -f mp3 -ar 44100 -ac 2 -ab 192k -y -acodec copy <span class=\"pl-smi\">$1</span>.mp3; }</pre></div>\n<ul dir=\"auto\">\n<li>Mark Zuckerburg could've saved a billion if he knew about ImageMagick. (Instagram)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert +level-colors Firebrick, me.jpg oldme.jpg\"><pre>❯❯ convert +level-colors Firebrick, me.jpg oldme.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Show the query and results of 'select' queries going to your mysql server. Won't work on socket conns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ngrep -d eth0 -i 'select' port 3306\"><pre>❯❯ ngrep -d eth0 -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>select<span class=\"pl-pds\">'</span></span> port 3306</pre></div>\n<ul dir=\"auto\">\n<li>Show what processes are using port 80 either locally or remotely. Need to be root for unowned processes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof -i TCP:80\"><pre>❯❯ lsof -i TCP:80</pre></div>\n<ul dir=\"auto\">\n<li>Wrap the lines of draft.txt at 72 characters wide, doing so at spaces, not middle of word (-s)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fold -w 72 -s draft.txt &gt; newdraft.txt\"><pre>❯❯ fold -w 72 -s draft.txt <span class=\"pl-k\">&gt;</span> newdraft.txt</pre></div>\n<ul dir=\"auto\">\n<li>Professional development: Learn vim while playing an adventure game</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/wGMlnaXJYp\"><pre>❯❯ https://t.co/wGMlnaXJYp</pre></div>\n<ul dir=\"auto\">\n<li>Blink eth0's LED so you can find it in the rat's next of server cables. Ctrl-C to stop</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ethtool -p eth0\"><pre>❯❯ ethtool -p eth0</pre></div>\n<ul dir=\"auto\">\n<li>Save a url for reading later when you \"have time\". Also try <a href=\"https://t.co/8R1vy0yrRR\" rel=\"nofollow\">https://t.co/8R1vy0yrRR</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ saveurl() { cat &gt; /dev/null; }\"><pre>❯❯ <span class=\"pl-en\">saveurl</span>() { cat <span class=\"pl-k\">&gt;</span> /dev/null<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Display top RAM using processes. Browser is probably</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps aux|tail -n+2 |sort -nrk4 |head -$(($(tput lines)-1)) |cut -c 1-$(tput cols)\"><pre>❯❯ ps aux<span class=\"pl-k\">|</span>tail -n+2 <span class=\"pl-k\">|</span>sort -nrk4 <span class=\"pl-k\">|</span>head -<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>$(tput lines)<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">|</span>cut -c 1-<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tput cols<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Remote intercom system. \"Kent, this is God!\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rec -t wav - | ssh remotehost play -t wav -\"><pre>❯❯ rec -t wav - <span class=\"pl-k\">|</span> ssh remotehost play -t wav -</pre></div>\n<ul dir=\"auto\">\n<li>Quickly find the largest 5 files in the CWD tree without crossing filesystem boundaries</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -xdev -ls | sort -n -k 7 | tail -5\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -xdev -ls <span class=\"pl-k\">|</span> sort -n -k 7 <span class=\"pl-k\">|</span> tail -5</pre></div>\n<ul dir=\"auto\">\n<li>Quick and easy way to make a mirror of a website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -m http://www.example\\\\.com/\"><pre>❯❯ wget -m http://www.example<span class=\"pl-cce\">\\\\</span>.com/</pre></div>\n<ul dir=\"auto\">\n<li>Start a web service on port 8000 that uses the current directory as its document root</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ python -m SimpleHTTPServer\"><pre>❯❯ python -m SimpleHTTPServer</pre></div>\n<ul dir=\"auto\">\n<li>Automatically installs your public key to the remote host (this is included in the openssh package)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-copy-id 'user@remotehost'\"><pre>❯❯ ssh-copy-id <span class=\"pl-s\"><span class=\"pl-pds\">'</span>user@remotehost<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>restore a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pv bigdump.sql.gz | gunzip | mysql\"><pre>❯❯ pv bigdump.sql.gz <span class=\"pl-k\">|</span> gunzip <span class=\"pl-k\">|</span> mysql</pre></div>\n<ul dir=\"auto\">\n<li>Show the TCP and UDP ports being listened on and if you're root, also show the process associated, user, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ netstat -lepunt\"><pre>❯❯ netstat -lepunt</pre></div>\n<ul dir=\"auto\">\n<li>Make slideshow from *.jpg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for p in *.jpg; do ffmpeg -loop_input -f image2 -i $p -t 3 -r 4 -s 1080x720 -f avi - &gt; &gt; slides.avi; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">p</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.jpg<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> ffmpeg -loop_input -f image2 -i <span class=\"pl-smi\">$p</span> -t 3 -r 4 -s 1080x720 -f avi - <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> slides.avi<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Your Linux laptop says ESSID names while you drive around</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do iwlist wlan0 scan |awk -F\\\\&quot; \\'/ESSID/{print $2}\\' |espeak;done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> iwlist wlan0 scan <span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span> \\'/ESSID/{print <span class=\"pl-smi\">$2</span>}\\' |espeak;done</span></pre></div>\n<ul dir=\"auto\">\n<li>Make local webserver available via remoteserver:8080. Req. GatewayPorts yes on sshd</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -R *:8080:localhost:80 remoteserver\"><pre>❯❯ ssh -R <span class=\"pl-k\">*</span>:8080:localhost:80 remoteserver</pre></div>\n<ul dir=\"auto\">\n<li>Quickly scan network without using nmap, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in 172.16.0.{1..254};do (ping -c1 $i &gt; /dev/null &amp;&amp; echo $_) &amp;done &gt; pinged-hosts\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> 172.16.0.{1..254}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> (ping -c1 <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$_</span>) <span class=\"pl-k\">&amp;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">&gt;</span> pinged-hosts</pre></div>\n<ul dir=\"auto\">\n<li>CLIMAGIC video: Using awk or numsum to sum up numbers in df output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/kpb7imeVxs\"><pre>❯❯ https://t.co/kpb7imeVxs</pre></div>\n<ul dir=\"auto\">\n<li>Quickly list the directories that are two levels down without having to do something more complex with 'find'</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ld */*/\"><pre>❯❯ ls -ld <span class=\"pl-k\">*</span>/<span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>Search for available python packages through yum, but only show lines for packages starting with python</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yum search python | grep ^python\"><pre>❯❯ yum search python <span class=\"pl-k\">|</span> grep ^python</pre></div>\n<ul dir=\"auto\">\n<li>Scan your internal network for hosts listening on TCP port 22 (SSH)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nmap --open -p T:22 192.168.1.0/24\"><pre>❯❯ nmap --open -p T:22 192.168.1.0/24</pre></div>\n<ul dir=\"auto\">\n<li>Turn a mono channel recording of talking into a small mp3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lame -b 32 -m m --bitwidth 8 podcast.wav podcast.mp3\"><pre>❯❯ lame -b 32 -m m --bitwidth 8 podcast.wav podcast.mp3</pre></div>\n<ul dir=\"auto\">\n<li>Delete messages from Jan 20th in the postfix queue</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mailq |grep &quot; Jan 20 &quot; |awk {\\'print $1\\'} |xargs -n 1 postsuper -d\"><pre>❯❯ mailq <span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> Jan 20 <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>awk {<span class=\"pl-cce\">\\'</span>print <span class=\"pl-smi\">$1</span><span class=\"pl-cce\">\\'</span>} <span class=\"pl-k\">|</span>xargs -n 1 postsuper -d</pre></div>\n<ul dir=\"auto\">\n<li>Make box around text. By @bartonski</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ function box(){ t=&quot;$1xxxx&quot;;c=${2:-=}; echo ${t//?/$c}; echo &quot;$c $1 $c&quot;; echo ${t//?/$c}; }\"><pre>❯❯ <span class=\"pl-k\">function</span> <span class=\"pl-en\">box(){</span> t=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span>xxxx<span class=\"pl-pds\">\"</span></span>;c=<span class=\"pl-smi\">${2<span class=\"pl-k\">:-</span>=}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$c</span> <span class=\"pl-smi\">$1</span> <span class=\"pl-smi\">$c</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Make a quick rot13 translation quick reference table</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo {a..z} ; echo {n..z} {a..m}\"><pre>❯❯ <span class=\"pl-c1\">echo</span> {a..z} <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> {n..z} {a..m}</pre></div>\n<ul dir=\"auto\">\n<li>Run a command \"unreliably\". Useful in cron. Remember to use \\% instead of % if using in crontab</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [ $(( $RANDOM % 2 )) -eq 0 ] &amp;&amp; command\"><pre>❯❯ [ <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> <span class=\"pl-smi\">$RANDOM</span> <span class=\"pl-k\">%</span> <span class=\"pl-c1\">2</span> <span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">-eq</span> 0 ] <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>Display top bandwidth hogs on website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{a[$1] += $10} END {for (h in a) print h &quot; &quot; a[h]}\\' access_log | sort -k 2 -nr | head -10\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{a[<span class=\"pl-smi\">$1</span>] += <span class=\"pl-smi\">$1</span>0} END {for (h <span class=\"pl-k\">in</span> a) print h <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> a[h]}<span class=\"pl-cce\">\\'</span> access_log <span class=\"pl-k\">|</span> sort -k 2 -nr <span class=\"pl-k\">|</span> head -10</pre></div>\n<ul dir=\"auto\">\n<li>CLIMagic video: Tar command tutorial</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/Jd8hP5clg0\"><pre>❯❯ https://t.co/Jd8hP5clg0</pre></div>\n<ul dir=\"auto\">\n<li>This will show a count of all lines that have more than 1 copy. So only show the duplicates. (-d)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ uniq -cd popular.txt\"><pre>❯❯ uniq -cd popular.txt</pre></div>\n<ul dir=\"auto\">\n<li>Show the mail servers that mail destined to example\\xe2\\x80\\x8b.com is going to go. +short for less info than default</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dig +short MX example\\\\.com\"><pre>❯❯ dig +short MX example<span class=\"pl-cce\">\\\\</span>.com</pre></div>\n<ul dir=\"auto\">\n<li>Split a file into 500 line files called splitfile-xaa, splitfile-xab, etc. Useful for variety of things</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ split -l 500 largefile splitfile-\"><pre>❯❯ split -l 500 largefile splitfile-</pre></div>\n<ul dir=\"auto\">\n<li>List the filenames that don't contain the pattern specified</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -L pattern *\"><pre>❯❯ grep -L pattern <span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Go directly to the crontab man page that is in chapter 5 of the unix manual pages. Some topics have multiple man pages</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man 5 crontab\"><pre>❯❯ man 5 crontab</pre></div>\n<ul dir=\"auto\">\n<li>Use rev twice to get around limitation of cut not being able to truncate end of a string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo test | rev | cut -c 2- | rev\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-c1\">test</span> <span class=\"pl-k\">|</span> rev <span class=\"pl-k\">|</span> cut -c 2- <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>Split a file into multiple using an empty line as the split point. {*} means do this until the end</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ csplit sections.txt '/^$/' {*}\"><pre>❯❯ csplit sections.txt <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^$/<span class=\"pl-pds\">'</span></span> {<span class=\"pl-k\">*</span>}</pre></div>\n<ul dir=\"auto\">\n<li>Print out the file requested for CLF log entries with HTTP 404 status code</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$10==404 {print $7}' access_log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$10==404 {print $7}<span class=\"pl-pds\">'</span></span> access_log</pre></div>\n<ul dir=\"auto\">\n<li>On Linux and others, display the inodes used per filesystem. Useful for determining how long it takes to backup or search the fs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -i\"><pre>❯❯ df -i</pre></div>\n<ul dir=\"auto\">\n<li>Show a 3 month view (before, current, after) in cal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cal -3\"><pre>❯❯ cal -3</pre></div>\n<ul dir=\"auto\">\n<li>Find which Debian package the notify-send program is included with - &gt; libnotify-bin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -S $( which notify-send )\"><pre>❯❯ dpkg -S <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which notify-send <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Pass the output of which (showing path to lspci) into rpm's -qf, which tells you the pkg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qf $( which lspci )\"><pre>❯❯ rpm -qf <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which lspci <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Do an rsync and limit the bandwidth used to about 200 KBytes/sec. Useful on shared or slow links</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync --bwlimit=200 src dest\"><pre>❯❯ rsync --bwlimit=200 src dest</pre></div>\n<ul dir=\"auto\">\n<li>Determine what lines two different files have in common. The comm program requires sorted files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -12 &lt;(sort names1) &lt;(sort names2)\"><pre>❯❯ comm -12 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names1<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names2<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Make thumbnails of images IMG_3000.JPG - IMG_3499.JPG</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in IMG_3[0-4]*.JPG ; do convert -quality 60 -geometry 300 $i thumbs/$i ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> IMG_3[0-4]<span class=\"pl-k\">*</span>.JPG <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> convert -quality 60 -geometry 300 <span class=\"pl-smi\">$i</span> thumbs/<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Join the splits back together</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat split-xaa split-xab split-xac &gt; rejoinedlargefile\"><pre>❯❯ cat split-xaa split-xab split-xac <span class=\"pl-k\">&gt;</span> rejoinedlargefile</pre></div>\n<ul dir=\"auto\">\n<li>Split a file called largefile into 1 gigabyte pieces called split-xaa, split-xab, split-xac</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ split -b 1G verylargefile split\"><pre>❯❯ split -b 1G verylargefile split</pre></div>\n<ul dir=\"auto\">\n<li>Spice up your excessive usage of [Ctrl-C]. Needs ack or ack-grep. For @trifero</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ trap &quot;echo;ack-grep --bar | sed \\'y/ge/ta/\\'&quot; SIGINT\"><pre>❯❯ <span class=\"pl-c1\">trap</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>echo;ack-grep --bar | sed \\'y/ge/ta/\\'<span class=\"pl-pds\">\"</span></span> SIGINT</pre></div>\n<ul dir=\"auto\">\n<li>poor man's file serve. Use nc serverhost 1234 &gt; output.txt to retrieve file from remote host. NAT bugs this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nc -q1 -lvp 1234 &lt; file.txt\"><pre>❯❯ nc -q1 -lvp 1234 <span class=\"pl-k\">&lt;</span> file.txt</pre></div>\n<ul dir=\"auto\">\n<li>Bean counter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias coffee='VALUE=$( cat ~/.cupsocoffee ) ; VALUE=$(( $VALUE + 1 )); echo $VALUE &gt; ~/.cupsocoffee ; echo $VALUE'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> coffee=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALUE=$( cat ~/.cupsocoffee ) ; VALUE=$(( $VALUE + 1 )); echo $VALUE &gt; ~/.cupsocoffee ; echo $VALUE<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>List the 20 largest files or folders under the current working directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -ma | sort -nr | head -n 20\"><pre>❯❯ du -ma <span class=\"pl-k\">|</span> sort -nr <span class=\"pl-k\">|</span> head -n 20</pre></div>\n<ul dir=\"auto\">\n<li>Find out if any duplicate image files exist in the current directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shasum *.jpg | awk {\\'print $1\\'} | sort | uniq -c | grep -v &quot; 1\"><pre>❯❯ shasum <span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">|</span> awk {<span class=\"pl-cce\">\\'</span>print <span class=\"pl-smi\">$1</span><span class=\"pl-cce\">\\'</span>} <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> grep -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> 1</span></pre></div>\n<ul dir=\"auto\">\n<li>This will run ls without using any alias called ls that might be in place. You can do this with any command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\ls\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>ls</pre></div>\n<ul dir=\"auto\">\n<li>Show Linux distro release information or die trying</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsb_release -a || cat /etc/redhat-release\"><pre>❯❯ lsb_release -a <span class=\"pl-k\">||</span> cat /etc/redhat-release</pre></div>\n<ul dir=\"auto\">\n<li>Look at the full year calendar for 2013 and 2014 side by side. (Requires term width &gt; 135)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ paste &lt;(cal 2015) &lt;(cal 2016)\"><pre>❯❯ paste <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cal 2015<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cal 2016<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>|^$\" httpd.conf</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -v &quot;^\"><pre>❯❯ egrep -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^</span></pre></div>\n<ul dir=\"auto\">\n<li>Count the number of web server processes running. Or use (pgrep -c httpd)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxw | grep &quot;[h]ttpd&quot; | wc -l\"><pre>❯❯ ps auxw <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[h]ttpd<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>trim output data width of file to the exact width of your terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cut -c 1-$COLUMNS file\"><pre>❯❯ cut -c 1-<span class=\"pl-smi\">$COLUMNS</span> file</pre></div>\n<ul dir=\"auto\">\n<li>Engage lazy mode</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {1..10} ; do sleep $(( $RANDOM % 3600 + 1800 )) ; twitter-queueposter.py ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {1..10} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> <span class=\"pl-smi\">$RANDOM</span> <span class=\"pl-k\">%</span> <span class=\"pl-c1\">3600</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1800</span> <span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">;</span> twitter-queueposter.py <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Space usage of directories only (This was the very first CLIMagic command posted on December 15th, 2009)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh */\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>(Calmer) Snow in your terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/mPoGSm9FTn\"><pre>❯❯ https://t.co/mPoGSm9FTn</pre></div>\n<ul dir=\"auto\">\n<li>Snow storm in the terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true;do N=$(($RANDOM % $COLUMNS));for i in $( seq 1 $N );do echo -n &quot; &quot;;done;echo \\\\*;done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> N=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span> <span class=\"pl-k\">%</span> <span class=\"pl-smi\">$COLUMNS</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> seq 1 <span class=\"pl-smi\">$N</span> <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>You might want to use this command to flip your X display for the next one. xrandr -o normal flips back</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xrandr -o inverted\"><pre>❯❯ xrandr -o inverted</pre></div>\n<ul dir=\"auto\">\n<li>WarOnFTP <a href=\"https://t.co/yfjUKl0Goa\" rel=\"nofollow\">https://t.co/yfjUKl0Goa</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes NO\"><pre>❯❯ yes NO</pre></div>\n<ul dir=\"auto\">\n<li>Tron lightcycles in the terminal or Etch-a-sketch. Take your pick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/Kvo0jd2eTK\"><pre>❯❯ https://t.co/Kvo0jd2eTK</pre></div>\n<ul dir=\"auto\">\n<li>Graph of the history of Unix and its derivatives. Last updated October 2015 (yes its still updated)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/d8AmdxPY25\"><pre>❯❯ https://t.co/d8AmdxPY25</pre></div>\n<ul dir=\"auto\">\n<li>Show IPv4 and IPv6 addresses per interface in Linux. Thx to all in</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo addr show|ip -o -b -|cut -d' ' -f2,7\"><pre>❯❯ <span class=\"pl-c1\">echo</span> addr show<span class=\"pl-k\">|</span>ip -o -b -<span class=\"pl-k\">|</span>cut -d<span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> -f2,7</pre></div>\n<ul dir=\"auto\">\n<li>reptyr can be used to reattach a program on another tty to the current tty so you can transfer it into screen/tmux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ reptyr &lt;pid &gt;\"><pre>❯❯ reptyr <span class=\"pl-k\">&lt;</span>pid <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Sometimes I like to paste data to grep on stdin, problem is output can interweave with the input. Use sponge + Ctrl-D</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sponge | grep needle\"><pre>❯❯ sponge <span class=\"pl-k\">|</span> grep needle</pre></div>\n<ul dir=\"auto\">\n<li>In Mutt, pipe a message (press |) through this command to decode and view a base64 encoded body</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '/^$/,$p' | base64 -d | less\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^$/,$p<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> base64 -d <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>Encapsulate UDP packets in a TCP stream so it can be tunneled through an SSH tunnel, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ socat -v UDP-LISTEN:8161,fork TCP:localhost:8161\"><pre>❯❯ socat -v UDP-LISTEN:8161,fork TCP:localhost:8161</pre></div>\n<ul dir=\"auto\">\n<li>Use brace expansion to easily specify a list of 8 interfaces to listen on. p1p1 - p2p4</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tshark -ip{1,2}p{1..4} -w 20160115.pcap\"><pre>❯❯ tshark -ip{1,2}p{1..4} -w 20160115.pcap</pre></div>\n<ul dir=\"auto\">\n<li>Playback a voicemail at 10 decibels louder and 50% faster without affecting pitch. Req. sox package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play msg0114.WAV vol 10 dB tempo 1.5\"><pre>❯❯ play msg0114.WAV vol 10 dB tempo 1.5</pre></div>\n<ul dir=\"auto\">\n<li>Get data and timestamp til 40X status</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do wget http://example\\\\.com/exposed -O exposed-$(date +%Y%m%d%H%M%S)||break;sleep 1h;done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> wget http://example<span class=\"pl-cce\">\\\\</span>.com/exposed -O exposed-<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y%m%d%H%M%S<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">||</span>break<span class=\"pl-k\">;</span>sleep 1h<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Rename all single leading digit flac files so that they have a padding 0 for easier sorting</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rename -v 's/^([0-9])_/0\\\\1_/' *.flac\"><pre>❯❯ rename -v <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^([0-9])_/0\\\\1_/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>.flac</pre></div>\n<ul dir=\"auto\">\n<li>Brace expansion quickly appends the devel pacakge as well to your list</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yum install package-with-long-name{,-devel}\"><pre>❯❯ yum install package-with-long-name{,-devel}</pre></div>\n<ul dir=\"auto\">\n<li>Poor folk's multi music album player</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;Listen to which album?&quot; ; select album in */ ; do mplayer &quot;$album&quot;/* ; done\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Listen to which album?<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">select</span> <span class=\"pl-smi\">album</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mplayer <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$album</span><span class=\"pl-pds\">\"</span></span>/<span class=\"pl-k\">*</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Actually this might work better for your .bashrc. Shorter and more fun. Thx @nervengiftlabs and @Schlumpf23_v3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cowsay $(fortune -s)\"><pre>❯❯ cowsay <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>fortune -s<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Dump your paste clipboard to hexdump for character by character investigation of what you just copied</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (xsel -b || pbpaste) |hexdump -c\"><pre>❯❯ (xsel -b <span class=\"pl-k\">||</span> pbpaste) <span class=\"pl-k\">|</span>hexdump -c</pre></div>\n<ul dir=\"auto\">\n<li>Pave the road</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true; do for i in 02E{{9..5},{6..8}}; do printf &quot;\\\\u${i}O=o &gt;&quot;;sleep 0.09;printf &quot;\\\\b\\\\b\\\\b\\\\b\\\\b&quot;;done;printf &quot;_&quot;;done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> 02E{{9..5},{6..8}}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>u<span class=\"pl-smi\">${i}</span>O=o &gt;<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>sleep 0.09<span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>b<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Finish a download started by a previous instance of wget, or  by another program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -c http://example\\\\.com/dvd.iso\"><pre>❯❯ wget -c http://example<span class=\"pl-cce\">\\\\</span>.com/dvd.iso</pre></div>\n<ul dir=\"auto\">\n<li>In the</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;ibase=10;obase=12;2016&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibase=10;obase=12;2016<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>A function to make it easy to upload photos. Ex. usage: uploadphotos IMG_3*.JPG</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ uploadphotos(){ scp -rp &quot;$@&quot; you@webserver:www/photos/; }\"><pre>❯❯ <span class=\"pl-en\">uploadphotos</span>(){ scp -rp <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span> you@webserver:www/photos/; }</pre></div>\n<ul dir=\"auto\">\n<li>Or find another terminal resolution that equals 2016</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 1 1008 | awk \\'{if (2016%$1==0){print $0 &quot;x&quot; (2016/$1)}}\\'\"><pre>❯❯ seq 1 1008 <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{if (2016%<span class=\"pl-smi\">$1</span>==0){print <span class=\"pl-smi\">$0</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span> (2016/<span class=\"pl-smi\">$1</span>)}}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use the apache benchmarking client to make 100 requests, 10 at a time and get the results</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ab -n 100 -c 10 &quot;http://www.poorwebsite\\\\.com/\"><pre>❯❯ ab -n 100 -c 10 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.poorwebsite<span class=\"pl-cce\">\\\\</span>.com/</span></pre></div>\n<ul dir=\"auto\">\n<li>another way to handle files starting with a - in CWD is to prefix them with ./</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm ./-file-starting-with-dash\"><pre>❯❯ rm ./-file-starting-with-dash</pre></div>\n<ul dir=\"auto\">\n<li>Play a video called sb.mpg, starting at 1 hour, 59 minutes and 45 seconds in</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -ss 1:59:45 sb.mpg\"><pre>❯❯ mplayer -ss 1:59:45 sb.mpg</pre></div>\n<ul dir=\"auto\">\n<li>Sort full IPv6 addresses. (Note: Will not work with shortened notations.)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=1;sort -t: {1..8},$((n++)) ipv6-addrs.txt\"><pre>❯❯ n=1<span class=\"pl-k\">;</span>sort -t: {1..8},<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>n<span class=\"pl-k\">++</span><span class=\"pl-pds\">))</span></span> ipv6-addrs.txt</pre></div>\n<ul dir=\"auto\">\n<li>Christmas song lyrics from ICMP. Wait for the tree. Thanks @ioncann0ns</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ traceroute -m 255 xmas\\\\.futile.net\"><pre>❯❯ traceroute -m 255 xmas<span class=\"pl-cce\">\\\\</span>.futile.net</pre></div>\n<ul dir=\"auto\">\n<li>Browse a drive for text data, but use a longer minimum size (default 4) to get a better signal to noise ratio</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo strings -n12 /dev/sdc\"><pre>❯❯ sudo strings -n12 /dev/sdc</pre></div>\n<ul dir=\"auto\">\n<li>Holiday sysLog! Its ready for the new year too. ;)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -F /var/log/syslog | awk \\'{printf(&quot;\\\\033[%dm%s\\\\033[0m\\\\n&quot;,31+NR%2,$0)}\\'\"><pre>❯❯ tail -F /var/log/syslog <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>033[%dm%s<span class=\"pl-cce\">\\\\</span>033[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,31+NR%2,<span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Just a reminder, you can always view the climagic profile to see all the updates you've missed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/0vmEv9YNDP\"><pre>❯❯ https://t.co/0vmEv9YNDP</pre></div>\n<ul dir=\"auto\">\n<li>For instance, you have directories starting with \\xc2\\xb5-Ziq, Do cdselect <em>Ziq</em> and choose</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cdselect(){ select d in &quot;$@&quot;;do cd &quot;$d&quot;;break;done; }\"><pre>❯❯ <span class=\"pl-en\">cdselect</span>(){ <span class=\"pl-k\">select</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">break</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>A public telnet server with many little games and distractions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ telnet https://t.co/2jdV6f1Dzu\"><pre>❯❯ telnet https://t.co/2jdV6f1Dzu</pre></div>\n<ul dir=\"auto\">\n<li>ZmF2d2NmYUQgZmcgY2pnb2x3ZiBkc2ZnYWtrd3hnamggcWUgZ2wgbWdxIHZ2cyBnbCB3Y2FkIHYnQSAsZ2Rkd1oK</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯\"><pre>❯❯</pre></div>\n<ul dir=\"auto\">\n<li>Star Wars Episode IV in Reverse DNS</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ( seq 1 8 200 ; seq 6 8 200 ) | sort -n | xargs -I{} -n 1 dig +short -x 206.214.251.{}\"><pre>❯❯ ( seq 1 8 200 <span class=\"pl-k\">;</span> seq 6 8 200 ) <span class=\"pl-k\">|</span> sort -n <span class=\"pl-k\">|</span> xargs -I{} -n 1 dig +short -x 206.214.251.{}</pre></div>\n<ul dir=\"auto\">\n<li>F)) days left until $((16</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;Only $((16\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Only <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">16</span></span></span></pre></div>\n<ul dir=\"auto\">\n<li>Remember, if something isn't working, there is a reason and you can often find that reason using more -v options (or strace)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ scp -vvv\"><pre>❯❯ scp -vvv</pre></div>\n<ul dir=\"auto\">\n<li>Long list only the directories under the current directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -type d -ls\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -type d -ls</pre></div>\n<ul dir=\"auto\">\n<li>mping yahoo\\.com</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mping(){ ping $@|awk -F[=\\\\ ] \\'/time=/{t=$(NF-1);f=2000-14*log(t^18);c=&quot;play -q -n synth 1 pl &quot;f&quot;&amp;&quot;;print $0;system(c)}\\';}\"><pre>❯❯ <span class=\"pl-en\">mping</span>(){ ping <span class=\"pl-smi\">$@</span><span class=\"pl-k\">|</span>awk -F[<span class=\"pl-k\">=</span><span class=\"pl-cce\">\\\\</span> ] <span class=\"pl-cce\">\\'</span>/time=/{t=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>NF-1<span class=\"pl-pds\">)</span></span>;f=2000-14<span class=\"pl-k\">*</span>log(t^18)<span class=\"pl-k\">;</span>c=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>play -q -n synth 1 pl <span class=\"pl-pds\">\"</span></span>f<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&amp;<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>print <span class=\"pl-smi\">$0</span><span class=\"pl-k\">;</span>system(c)}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span>}</pre></div>\n<ul dir=\"auto\">\n<li>Simple lunch location decider</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;Tacos,Burgers,Pizza,Pasta,Sushi,Salad,Soup,Noodles,Veggie wraps&quot; | tr \\',\\' \\'\\\\n\\' | sort -R | head -1\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Tacos,Burgers,Pizza,Pasta,Sushi,Salad,Soup,Noodles,Veggie wraps<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr <span class=\"pl-cce\">\\'</span>,<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> sort -R <span class=\"pl-k\">|</span> head -1</pre></div>\n<ul dir=\"auto\">\n<li>Move mouse in spiral</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ x=0;y=0;while [[ $y -lt 500 ]] ; do xdotool mousemove --polar $x $y ; x=$(($x+4));y=$(($y+1)); sleep 0.01; done\"><pre>❯❯ x=0<span class=\"pl-k\">;</span>y=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> [[ <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">-lt</span> 500 ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xdotool mousemove --polar <span class=\"pl-smi\">$x</span> <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">;</span> x=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$x</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">4</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>y=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$y</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> sleep 0.01<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Wrapper function to catch a common scp mistake</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ scp(){ [[ &quot;$@&quot; =~ : ]] &amp;&amp; /usr/bin/scp &quot;$@&quot; || echo \\'You forgot the colon!\\'; }\"><pre>❯❯ <span class=\"pl-en\">scp</span>(){ [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=~</span> <span class=\"pl-c1\">:</span> ]] &amp;<span class=\"pl-k\">&amp;</span> /usr/bin/scp <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\'</span>You forgot the colon<span class=\"pl-k\">!</span><span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Run multiple times and this will demonstrate how sort -R is different from shuf</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;.\\\\n.\\\\n.\\\\n.\\\\n.\\\\n.\\\\na\\\\na\\\\nb\\\\nb\\\\nb\\\\nc\\\\nc\\\\n&quot; | sort -R\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-cce\">\\\\</span>n.<span class=\"pl-cce\">\\\\</span>n.<span class=\"pl-cce\">\\\\</span>n.<span class=\"pl-cce\">\\\\</span>n.<span class=\"pl-cce\">\\\\</span>n.<span class=\"pl-cce\">\\\\</span>na<span class=\"pl-cce\">\\\\</span>na<span class=\"pl-cce\">\\\\</span>nb<span class=\"pl-cce\">\\\\</span>nb<span class=\"pl-cce\">\\\\</span>nb<span class=\"pl-cce\">\\\\</span>nc<span class=\"pl-cce\">\\\\</span>nc<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sort -R</pre></div>\n<ul dir=\"auto\">\n<li>Pick 5 random lines (names in this case) from a file called names.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shuf -n5 names.txt\"><pre>❯❯ shuf -n5 names.txt</pre></div>\n<ul dir=\"auto\">\n<li>Connections to tcp localhost:9909 will be made to 192.168.1.1:80 via SSH tunnel to home. Thx @mralext20</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh -L 9909:192.168.1.1:80 home\"><pre>❯❯ ssh -L 9909:192.168.1.1:80 home</pre></div>\n<ul dir=\"auto\">\n<li>Random human like pauses</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ acthuman(){ h=$(date +%H);case $h in 8|12|17) sleep 1h;; 22|23|0) sleep 8h;; *) sleep $((5+$RANDOM%60));; esac; }\"><pre>❯❯ <span class=\"pl-en\">acthuman</span>(){ h=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%H<span class=\"pl-pds\">)</span></span>;<span class=\"pl-k\">case</span> <span class=\"pl-smi\">$h</span> <span class=\"pl-k\">in</span> 8|12|17) sleep 1h;; 22|23|0) sleep 8h;; <span class=\"pl-k\">*</span>) sleep <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">5</span><span class=\"pl-k\">+</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">60</span><span class=\"pl-pds\">))</span></span>;; <span class=\"pl-k\">esac</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Find any files that start with a -. These can end up setting options to commands when you do stuff like du -sh *</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo find / -name '-*'\"><pre>❯❯ sudo find / -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-*<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Function to help with an emoji. Thx @supercow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shrug(){ echo -n &quot;\\xc2\\xaf\\\\_(\\xe3\\x83\\x84)_/\\xc2\\xaf&quot; | (xsel||pbcopy);echo &quot;\\xc2\\xaf\\\\_(\\xe3\\x83\\x84)_/\\xc2\\xaf copied to your clipboard&quot;; }\"><pre>❯❯ <span class=\"pl-en\">shrug</span>(){ <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\xc2\\xaf<span class=\"pl-cce\">\\\\</span>_(\\xe3\\x83\\x84)_/\\xc2\\xaf<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> (xsel<span class=\"pl-k\">||</span>pbcopy);<span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\xc2\\xaf<span class=\"pl-cce\">\\\\</span>_(\\xe3\\x83\\x84)_/\\xc2\\xaf copied to your clipboard<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>THX-like sound. play is from the sox package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -q -n synth sq F2 sq C3 remix - fade 0 5 .1 norm -4 bend 0.5,2477,3 fade 0 5 0.8\"><pre>❯❯ play -q -n synth sq F2 sq C3 remix - fade 0 5 .1 norm -4 bend 0.5,2477,3 fade 0 5 0.8</pre></div>\n<ul dir=\"auto\">\n<li>Put the sh back into it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat /bin/sh &gt; it\"><pre>❯❯ cat /bin/sh <span class=\"pl-k\">&gt;</span> it</pre></div>\n<ul dir=\"auto\">\n<li>This will also show you a process tree, but is more terse in the information it provides</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pstree\"><pre>❯❯ pstree</pre></div>\n<ul dir=\"auto\">\n<li>Show the process in a tree format, search for gzip and show 8 lines of pre-match context to see its family</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxwf | grep -B8 &quot;[g]zip\"><pre>❯❯ ps auxwf <span class=\"pl-k\">|</span> grep -B8 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[g]zip</span></pre></div>\n<ul dir=\"auto\">\n<li>Then do kill -USR1 PIDOFBASH to flip the state of the variable v. Could be useful in loops, turn on/off a print</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ trap 'v=$((! v));' SIGUSR1\"><pre>❯❯ <span class=\"pl-c1\">trap</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>v=$((! v));<span class=\"pl-pds\">'</span></span> SIGUSR1</pre></div>\n<ul dir=\"auto\">\n<li>Minecraft make stone floor commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for x in -{630..599}; do for z in -{115..130}; do echo &quot;/setblock $x 60 $z minecraft:stone&quot;;done;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">in</span> -{630..599}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">z</span> <span class=\"pl-k\">in</span> -{115..130}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/setblock <span class=\"pl-smi\">$x</span> 60 <span class=\"pl-smi\">$z</span> minecraft:stone<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Remove the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivilent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Incremental undo of command line edits. Ctrl-- works the same and Ctrl-? sometimes works as well, although its not documented</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-_ &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-_ <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>description. The</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just a reminder about the format of climagic tweets: command\"><pre>❯❯ Just a reminder about the format of climagic tweets: <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>Much better than <a href=\"https://t.co/Qgan2tKJEI\" rel=\"nofollow\">https://t.co/Qgan2tKJEI</a> where anything goes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/mwmevXw1ku\"><pre>❯❯ https://t.co/mwmevXw1ku</pre></div>\n<ul dir=\"auto\">\n<li>List the cached ssh host key fingerprint for 10.0.0.23</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-keygen -F 10.0.0.23 -l\"><pre>❯❯ ssh-keygen -F 10.0.0.23 -l</pre></div>\n<ul dir=\"auto\">\n<li>Thx @mitchell486</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (find . -name \\\\*.git 2 &gt;/dev/null|grep -oP \\'^(.*)(?=\\\\/\\\\.git$)\\'|while read l;do pushd &quot;$l&quot;;git status;popd;printf &quot;\\\\n&quot;;done)\"><pre>❯❯ (find <span class=\"pl-c1\">.</span> -name <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span>.git 2 <span class=\"pl-k\">&gt;</span>/dev/null<span class=\"pl-k\">|</span>grep -oP <span class=\"pl-cce\">\\'</span>^(.<span class=\"pl-k\">*</span>)(<span class=\"pl-k\">?</span>=<span class=\"pl-cce\">\\\\</span>/<span class=\"pl-cce\">\\\\</span>.git$)<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> l<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">pushd</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$l</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>git status<span class=\"pl-k\">;</span><span class=\"pl-c1\">popd</span><span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>done)</pre></div>\n<ul dir=\"auto\">\n<li>SC15</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I'm at SuperComputing 2015 in Austin, Texas today. If you are too, let me know or look for the climagic ~$ t-shirt.\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>m at SuperComputing 2015 in Austin, Texas today. If you are too, let me know or look for the climagic ~$ t-shirt.</span></pre></div>\n<ul dir=\"auto\">\n<li>Find primes using PCRE. <a href=\"https://t.co/rnfOtboabv\" rel=\"nofollow\">https://t.co/rnfOtboabv</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=0;while : $((n++));do printf &quot;%0${n}d&quot;|grep -qP &quot;^0?$|^(00+?)\\\\1+$&quot; ||echo $n;done\"><pre>❯❯ n=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span>n<span class=\"pl-k\">++</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%0<span class=\"pl-smi\">${n}</span>d<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>grep -qP <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^0?$|^(00+?)<span class=\"pl-cce\">\\\\</span>1+$<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span>echo <span class=\"pl-smi\">$n</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>SC15</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I'll be at SuperComputing 2015 in Austin, Texas this week. If you will be there too, let me know and we can meet up.\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ll be at SuperComputing 2015 in Austin, Texas this week. If you will be there too, let me know and we can meet up.</span></pre></div>\n<ul dir=\"auto\">\n<li>Globe animation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ oneworld=$(curl -s http://artscene.textfiles\\\\.com/vt100/globe.vt);while :;do  pv -L4242 -q  &lt; &quot;$oneworld&quot;;sleep .1;done\"><pre>❯❯ oneworld=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>curl -s http://artscene.textfiles<span class=\"pl-cce\">\\\\</span>.com/vt100/globe.vt<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span>  pv -L4242 -q  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$oneworld</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>sleep .1<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>French Flag</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t=$(($(tput cols)/3));for FR in $(seq $(tput lines));do printf &quot;\\\\e[44m%${t}s\\\\e[47m%${t}s\\\\e[41m%${t}s\\\\e[0m\\\\n&quot;;done\"><pre>❯❯ t=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>$(tput cols)<span class=\"pl-k\">/</span><span class=\"pl-c1\">3</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">FR</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tput lines<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[44m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[47m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[41m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>French Flag</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t=$(($(tput cols)/3));for FR in $(seq $(tput lines));do printf &quot;\\\\e[44m%${t}s\\\\e[47m %${t}s\\\\e[41m%${t}s\\\\e[0m\\\\n&quot;;done\"><pre>❯❯ t=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>$(tput cols)<span class=\"pl-k\">/</span><span class=\"pl-c1\">3</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">FR</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tput lines<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[44m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[47m %<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[41m%<span class=\"pl-smi\">${t}</span>s<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>GeoIP traceroute by @xjjo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ traceroute linux.fi |awk \\'($2~/[.]/){&quot;geoiplookup &quot;$2 |getline g;$0=sprintf(&quot;%-64s %s&quot;, $0, g)}{print}\\'\"><pre>❯❯ traceroute linux.fi <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>(<span class=\"pl-smi\">$2</span>~/[.]/){<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>geoiplookup <span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$2</span> <span class=\"pl-k\">|</span>getline g<span class=\"pl-k\">;</span><span class=\"pl-smi\">$0</span>=sprintf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%-64s %s<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">$0</span>, g)}{print}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Show years with 3 Fri 13ths</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;1800-01-13 +%s months\\\\n&quot; {0..4800} |date -f - |grep ^Fri |awk \\'{print $NF}\\' |uniq -c |grep &quot; 3\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1800-01-13 +%s months<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {0..4800} <span class=\"pl-k\">|</span>date -f - <span class=\"pl-k\">|</span>grep ^Fri <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$NF</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> 3</span></pre></div>\n<ul dir=\"auto\">\n<li>Find all Friday 13ths in the next 20 years. Thx @xjjo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;now +%s months\\\\n&quot; {0..240}| date -f - |grep ^Fri\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now +%s months<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {0..240}<span class=\"pl-k\">|</span> date -f - <span class=\"pl-k\">|</span>grep ^Fri</pre></div>\n<ul dir=\"auto\">\n<li>See an earlier version date for TBL's WWW proposal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -sI http://www.w3\\\\.org/History/1989/proposal.rtf |grep Last-Modified\"><pre>❯❯ curl -sI http://www.w3<span class=\"pl-cce\">\\\\</span>.org/History/1989/proposal.rtf <span class=\"pl-k\">|</span>grep Last-Modified</pre></div>\n<ul dir=\"auto\">\n<li>Put lines 5000 through 7500 from a large compressed SQL file into a new file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat dump.sql.gz | sed -n '5000,7500p' &gt; newdump.sql\"><pre>❯❯ zcat dump.sql.gz <span class=\"pl-k\">|</span> sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>5000,7500p<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&gt;</span> newdump.sql</pre></div>\n<ul dir=\"auto\">\n<li>A similar top uniq, which defaults to reverse numeric sort of count if no options given</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ topuniq(){ sort | uniq -c | sort ${@:--rn} ; }\"><pre>❯❯ <span class=\"pl-en\">topuniq</span>(){ sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort <span class=\"pl-smi\">${<span class=\"pl-k\">@:-</span>-rn}</span> ; }</pre></div>\n<ul dir=\"auto\">\n<li>Make a function to shorten this commonly used command line pattern &amp; allow for options for final sort</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sus(){ sort | uniq -c | sort $@; }\"><pre>❯❯ <span class=\"pl-en\">sus</span>(){ sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort <span class=\"pl-smi\">$@</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Check how similar code submitted with a resume is to the original code you found online. :-(</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff resumecode.py origcode.py | less -S\"><pre>❯❯ diff resumecode.py origcode.py <span class=\"pl-k\">|</span> less -S</pre></div>\n<ul dir=\"auto\">\n<li>Show services that are set to start up automatically on a systemd based system</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ systemctl list-unit-files | grep enabled\"><pre>❯❯ systemctl list-unit-files <span class=\"pl-k\">|</span> grep enabled</pre></div>\n<ul dir=\"auto\">\n<li>mps-youtube is a newish TUI interface for Youtube. Thx @rkfb</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/YsVv423nMx\"><pre>❯❯ https://t.co/YsVv423nMx</pre></div>\n<ul dir=\"auto\">\n<li>Send 123456789 in a udp packet to the lights at <a href=\"https://t.co/2ECImTvDRH\" rel=\"nofollow\">https://t.co/2ECImTvDRH</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo {1..9} | tr -d &quot; &quot; &gt; /dev/udp/lights.climagic.com/45444\"><pre>❯❯ <span class=\"pl-c1\">echo</span> {1..9} <span class=\"pl-k\">|</span> tr -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> /dev/udp/lights.climagic.com/45444</pre></div>\n<ul dir=\"auto\">\n<li>Sending new RSS entries to email Thx @schtobia</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsstail -u $FEEDURL -n 50 | while read line; do mail -s &quot;FeedUpdate&quot; $user  &lt; &quot;$line&quot;; done\"><pre>❯❯ rsstail -u <span class=\"pl-smi\">$FEEDURL</span> -n 50 <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> line<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mail -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>FeedUpdate<span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$user</span>  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$line</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Don't trust your own abilities to come up with a clever way of generating passwords (or an accidental one)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pwgen 12\"><pre>❯❯ pwgen 12</pre></div>\n<ul dir=\"auto\">\n<li>Learn to use vim. Happy Birthday vim</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vimtutor\"><pre>❯❯ vimtutor</pre></div>\n<ul dir=\"auto\">\n<li>In bash, this will leave history, ls, date, w and man whatever out of your command history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ HISTIGNORE=&quot;history;ls;date;w;man *\"><pre>❯❯ HISTIGNORE=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>history;ls;date;w;man *</span></pre></div>\n<ul dir=\"auto\">\n<li>The Matrix effect in a bit more than 140 characters</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/XoOtJkj06I\"><pre>❯❯ https://t.co/XoOtJkj06I</pre></div>\n<ul dir=\"auto\">\n<li>Check the whole last login log, but filter out that annoying user that must login every minute</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da | grep -v ^autologinuser\"><pre>❯❯ last -da <span class=\"pl-k\">|</span> grep -v ^autologinuser</pre></div>\n<ul dir=\"auto\">\n<li>Convert tiff images to rescaled jpg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for p in *.tiff; do convert -quality 75 -scale 50% &quot;$p&quot; &quot;${p%%.tiff}.jpg&quot;; echo converted $p; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">p</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.tiff<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> convert -quality 75 -scale 50% <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$p</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${p<span class=\"pl-k\">%%</span>.tiff}</span>.jpg<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> converted <span class=\"pl-smi\">$p</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Run management in debug mode to find out why its not understanding the input you're sending it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ management -D\"><pre>❯❯ management -D</pre></div>\n<ul dir=\"auto\">\n<li>Count uniq hosts in time range</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -k4 *.log |sed -n \\'/15\\\\/Aug\\\\/2015:14:11:02/,/20\\\\/Aug\\\\/2015:02:34:58/p\\' |cut -d&quot; &quot; -f1|sort|uniq|wc -l\"><pre>❯❯ sort -k4 <span class=\"pl-k\">*</span>.log <span class=\"pl-k\">|</span>sed -n <span class=\"pl-cce\">\\'</span>/15<span class=\"pl-cce\">\\\\</span>/Aug<span class=\"pl-cce\">\\\\</span>/2015:14:11:02/,/20<span class=\"pl-cce\">\\\\</span>/Aug<span class=\"pl-cce\">\\\\</span>/2015:02:34:58/p<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>cut -d<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> -f1<span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq<span class=\"pl-k\">|</span>wc -l</pre></div>\n<ul dir=\"auto\">\n<li>Last 2 years of this weekday. Shorter easier to read version. ;-)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for w in {1..104} ; do date -d &quot;now - $w weeks&quot; +%Y-%m-%d ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">w</span> <span class=\"pl-k\">in</span> {1..104} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now - <span class=\"pl-smi\">$w</span> weeks<span class=\"pl-pds\">\"</span></span> +%Y-%m-%d <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Last 2 years of this weekday</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t=$(date +%s);n=0;while [ $n -lt $((86400*365*2)) ];do n=$(($n+86400*7));date -d @$(($t-$n)) +%Y-%m-%d;done\"><pre>❯❯ t=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%s<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>n=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> [ <span class=\"pl-smi\">$n</span> <span class=\"pl-k\">-lt</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">86400</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">365</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span><span class=\"pl-pds\">))</span></span> ]<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> n=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$n</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">86400</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">7</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>date -d @<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$t</span><span class=\"pl-k\">-</span><span class=\"pl-smi\">$n</span><span class=\"pl-pds\">))</span></span> +%Y-%m-%d<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Pick up where you left off on tmux session 2. tmux list-sessions to see what's available</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux attach -t 2\"><pre>❯❯ tmux attach -t 2</pre></div>\n<ul dir=\"auto\">\n<li>Give your visitors truly live updates. Type a message + Ctrl-D</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat &lt;(printf &quot;HTTP/1.1 200 OK\\\\nContent-type: text/html\\\\n\\\\n&quot;) - |nc -l 80\"><pre>❯❯ cat <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTTP/1.1 200 OK<span class=\"pl-cce\">\\\\</span>nContent-type: text/html<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span> - <span class=\"pl-k\">|</span>nc -l 80</pre></div>\n<ul dir=\"auto\">\n<li>Calculate the current Swatch Beat time. /me ducks</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ TZ=UTC-1 date +&quot;(%S + (%M * 60) + (%H * 3600))/86.4&quot; | bc\"><pre>❯❯ TZ=UTC-1 date +<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(%S + (%M * 60) + (%H * 3600))/86.4<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Read it, otherwise you may end up running that backup script every minute during the 4th month of the year</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man 5 crontab\"><pre>❯❯ man 5 crontab</pre></div>\n<ul dir=\"auto\">\n<li>In mutt, pipe msg to this to count</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -o '&lt;[^@]\\\\+@[^ &gt;]\\\\+ &gt;'|wc -l\"><pre>❯❯ grep -o <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;[^@]\\\\+@[^ &gt;]\\\\+ &gt;<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>wc -l</pre></div>\n<ul dir=\"auto\">\n<li>In GNU date, show the epoch time 30 years ago. Interestingly, @498765432 was at 17:57:12 GMT that day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;now 30 years ago&quot; +%s\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now 30 years ago<span class=\"pl-pds\">\"</span></span> +%s</pre></div>\n<ul dir=\"auto\">\n<li>Be notified in the terminal when you receive e-mail or when someone asks about Gray's Sports Almanac</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ biff\"><pre>❯❯ biff</pre></div>\n<ul dir=\"auto\">\n<li>Instant stopwatch. Run to start timer and press Ctrl-D to stop it. \"real\" time is the elapsed time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ time cat\"><pre>❯❯ <span class=\"pl-k\">time</span> cat</pre></div>\n<ul dir=\"auto\">\n<li>Quickly check the integrity of the \"AMP\" stack on rpm based systems</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa | grep -e http -e php -e mariadb | xargs rpm -V\"><pre>❯❯ rpm -qa <span class=\"pl-k\">|</span> grep -e http -e php -e mariadb <span class=\"pl-k\">|</span> xargs rpm -V</pre></div>\n<ul dir=\"auto\">\n<li>Prefix the epoch time in column 1 with the local time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f udp.log |gawk \\'{printf(&quot;%s %s\\\\n&quot;,strftime(&quot;%Y-%m-%d_%T&quot;, $1),$0)}\\'\"><pre>❯❯ tail -f udp.log <span class=\"pl-k\">|</span>gawk <span class=\"pl-cce\">\\'</span>{printf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s %s<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>,strftime(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y-%m-%d_%T<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">$1</span>),<span class=\"pl-smi\">$0</span>)}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Or if you can't leave yet, check this code out. Thx @brimston3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/eLDIsgZrOn\"><pre>❯❯ https://t.co/eLDIsgZrOn</pre></div>\n<ul dir=\"auto\">\n<li>Hey everyone, does your shell do this?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-D &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-D <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Wooo!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 231 -1 16)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 231 -1 16<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Long list files under /etc that were modified between 2 and 30 days ago</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /etc -type f -mtime +2 -mtime -30 -ls\"><pre>❯❯ find /etc -type f -mtime +2 -mtime -30 -ls</pre></div>\n<ul dir=\"auto\">\n<li>Remove duplicate lines <em>without sorting</em>. Low memory version. That !a[$0]++ construct can get big</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{if (t!=$0){print;t=$0}}' file\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{if (t!=$0){print;t=$0}}<span class=\"pl-pds\">'</span></span> file</pre></div>\n<ul dir=\"auto\">\n<li>Produce sum of sent bytes in the mail.log. Uses PCRE</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -P -o &quot;(?&lt;=sent=)[0-9]+&quot; mail.log | awk \\'{sum+=$1} END {print sum}\\'\"><pre>❯❯ grep -P -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(?&lt;=sent=)[0-9]+<span class=\"pl-pds\">\"</span></span> mail.log <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{sum+=<span class=\"pl-smi\">$1</span>} END {print sum}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>climagic. Great for discussing the command line and seeing some stuff before its posted</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ There is also an IRC channel on Freenode at\"><pre>❯❯ There is also an IRC channel on Freenode at</pre></div>\n<ul dir=\"auto\">\n<li>This clears/yanks from the cursor to beginning of line. Also useful to clear your password attempt and start over at pw prompts</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-U]\"><pre>❯❯ [Ctrl-U]</pre></div>\n<ul dir=\"auto\">\n<li>Replace path to perl in .pl scripts. Use , delimiter instead of / for easier reading</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -s -i '1s,/local/bin/perl,/bin/perl,' *.pl\"><pre>❯❯ sed -s -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1s,/local/bin/perl,/bin/perl,<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>.pl</pre></div>\n<ul dir=\"auto\">\n<li>Remove duplicate lines without sorting 'file'. $0 means whole line in awk. 'a' is an array. So print if not in array</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '!a[$0]++' file\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>!a[$0]++<span class=\"pl-pds\">'</span></span> file</pre></div>\n<ul dir=\"auto\">\n<li>This is a real command from the bsdgames package that has a database of acronyms. Ironically it doesn't have BSD in it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wtf is rtfm\"><pre>❯❯ wtf is rtfm</pre></div>\n<ul dir=\"auto\">\n<li>Show the 20 largest files at least 2 subdirectories down from your home dir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ~/ -mindepth 2 -type f -ls | sort -n -r -k 7 | head -20\"><pre>❯❯ find <span class=\"pl-k\">~</span>/ -mindepth 2 -type f -ls <span class=\"pl-k\">|</span> sort -n -r -k 7 <span class=\"pl-k\">|</span> head -20</pre></div>\n<ul dir=\"auto\">\n<li>Make function command 'tolower' that will convert all arguments to lowercase</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tolower(){ echo ${@,,}; }\"><pre>❯❯ <span class=\"pl-en\">tolower</span>(){ <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${<span class=\"pl-k\">@</span>,,}</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Print only the lines from quotes.txt that are shorter than 140 characters</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk 'length &lt; 140' quotes.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>length &lt; 140<span class=\"pl-pds\">'</span></span> quotes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Poor man's auto updating slideshow image</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true;do for i in ~/Pictures/*.jpg ;do cp &quot;$i&quot; ~/slideshow.jpg ;sleep 5;done; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">~</span>/Pictures/<span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> cp <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">~</span>/slideshow.jpg <span class=\"pl-k\">;</span>sleep 5<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>With bc, specify your obase value before ibase value because the ibase applies to rest of the string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ bc  &lt; &quot;obase=16;ibase=8;7414\"><pre>❯❯ bc  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>obase=16;ibase=8;7414</span></pre></div>\n<ul dir=\"auto\">\n<li>option count</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in $(ls -1 /usr/share/man/man1/) ; do p=${i//.1.gz} ; echo -n &quot;$p &quot; ; man $p|egrep &quot;^[\\\\ \\\\t]*--?[a-zA-Z0-9]&quot;|wc -l;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls -1 /usr/share/man/man1/<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> p=<span class=\"pl-smi\">${i<span class=\"pl-k\">//</span>.1.gz}</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$p</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> man <span class=\"pl-smi\">$p</span><span class=\"pl-k\">|</span>egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[<span class=\"pl-cce\">\\\\</span> <span class=\"pl-cce\">\\\\</span>t]*--?[a-zA-Z0-9]<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>wc -l<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>A good regex to know about is \\b for boundary markers. It prevents matching other words with 'date' in it. Try it in man pages</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\bdate\\\\b\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>bdate<span class=\"pl-cce\">\\\\</span>b</pre></div>\n<ul dir=\"auto\">\n<li>Being 10-01, here is how to fix Beatles's MP3 with the right channel broken. Thx @gialloporpora</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sox input.mp3 output.mp3 remix 1,2\"><pre>❯❯ sox input.mp3 output.mp3 remix 1,2</pre></div>\n<ul dir=\"auto\">\n<li>Set the search jump target to 2 lines down so that you see the previous line of context on searches within less</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less -j2 /var/log/syslog\"><pre>❯❯ less -j2 /var/log/syslog</pre></div>\n<ul dir=\"auto\">\n<li>When you want to see the output (including stderr) of your removal AND save it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm -frv somestuff 2 &gt;&amp;1 | tee remove.log\"><pre>❯❯ rm -frv somestuff 2 <span class=\"pl-k\">&gt;&amp;1</span> <span class=\"pl-k\">|</span> tee remove.log</pre></div>\n<ul dir=\"auto\">\n<li>List packages with specific version and make sure the name column is visible by piping the output into cat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -l '*3.19.0-2[56]*' | cat\"><pre>❯❯ dpkg -l <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*3.19.0-2[56]*<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> cat</pre></div>\n<ul dir=\"auto\">\n<li>snd</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for n in 30 41 41 38 41 9999 31 30;do for t in {0..2200};do [[ $(($t%$n)) == 0 ]]&amp;&amp;echo -n $'\\\\xb0'||echo -n $'\\\\x80';done;done &gt;/dev/dsp\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">n</span> <span class=\"pl-k\">in</span> 30 41 41 38 41 9999 31 30<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">t</span> <span class=\"pl-k\">in</span> {0..2200}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$t</span><span class=\"pl-k\">%</span><span class=\"pl-smi\">$n</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">==</span> 0 ]]<span class=\"pl-k\">&amp;&amp;</span><span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>xb0<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">||</span>echo -n <span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>x80<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span> <span class=\"pl-k\">&gt;</span>/dev/dsp</pre></div>\n<ul dir=\"auto\">\n<li>Hex color value display function in vim</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/35bPBSQIGT\"><pre>❯❯ http://t.co/35bPBSQIGT</pre></div>\n<ul dir=\"auto\">\n<li>Fetch the current time in bash using this special device path hostname/port. Thx @fetoxm1</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat &lt;/dev/tcp/time.nist.gov/13\"><pre>❯❯ cat <span class=\"pl-k\">&lt;</span>/dev/tcp/time.nist.gov/13</pre></div>\n<ul dir=\"auto\">\n<li>This will create a readline macro of whatever you type. Run the macro with &lt;Ctrl-x + e &gt;</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-x + ( &gt; keystrokes go here. &lt;Ctrl-x + ) &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-x + ( <span class=\"pl-k\">&gt;</span> keystrokes go here. <span class=\"pl-k\">&lt;</span>Ctrl-x + ) <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This will create a macro of whatever you type. Run the macro with &lt;Ctrl-x + e &gt;</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-x + [ &gt; keystrokes go here. &lt;Ctrl-x + ] &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-x + [ <span class=\"pl-k\">&gt;</span> keystrokes go here. <span class=\"pl-k\">&lt;</span>Ctrl-x + ] <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>In bash, this sets the history to ignore commands starting with spaces and duplicates. May already be set</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ HISTCONTROL=&quot;ignoreboth\"><pre>❯❯ HISTCONTROL=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ignoreboth</span></pre></div>\n<ul dir=\"auto\">\n<li>Show the last 10 packages installed on an RPM based host. Thx for the correction @ThomasConstans</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --last | head\"><pre>❯❯ rpm -qa --last <span class=\"pl-k\">|</span> head</pre></div>\n<ul dir=\"auto\">\n<li>Show the last 10 packages installed on an RPM based host</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --last | tail\"><pre>❯❯ rpm -qa --last <span class=\"pl-k\">|</span> tail</pre></div>\n<ul dir=\"auto\">\n<li>Send paste buffer into sort. Because your {Cloud} based document editor lacks this basic functionality</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ {xsel -b || pbpaste} | sort\"><pre>❯❯ {xsel -b <span class=\"pl-k\">||</span> pbpaste} <span class=\"pl-k\">|</span> sort</pre></div>\n<ul dir=\"auto\">\n<li>Show remote hosts who received HTTP 400s or 413s</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat *access_log*.gz |cat - *access_log* |awk '$9==400||$9==413{print $1}' |sort |uniq\"><pre>❯❯ zcat <span class=\"pl-k\">*</span>access_log<span class=\"pl-k\">*</span>.gz <span class=\"pl-k\">|</span>cat - <span class=\"pl-k\">*</span>access_log<span class=\"pl-k\">*</span> <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$9==400||$9==413{print $1}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>sort <span class=\"pl-k\">|</span>uniq</pre></div>\n<ul dir=\"auto\">\n<li>Create tar called Stash.tar.xz of Stash and use 2 v options to long list and write to idx file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tar pcvvf Stash{.tar.xz,} |tee Stash.idx\"><pre>❯❯ tar pcvvf Stash{.tar.xz,} <span class=\"pl-k\">|</span>tee Stash.idx</pre></div>\n<ul dir=\"auto\">\n<li>NationalCheeseburgerDay, here is ascii art of someone eating a cheeseburger. (DO NOT RUN THIS FORK BOMB)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :(){ :|:&amp; };: To celebrate\"><pre>❯❯ <span class=\"pl-en\">:</span>(){ :<span class=\"pl-k\">|</span>:&amp; }<span class=\"pl-k\">;</span><span class=\"pl-c1\">:</span> To celebrate</pre></div>\n<ul dir=\"auto\">\n<li>If your fullscreen X Window System game exits and leaves your screen resolution at a lower resolution. Try this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xrandr -s 0\"><pre>❯❯ xrandr -s 0</pre></div>\n<ul dir=\"auto\">\n<li>Most common type of file per subdir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in */; do echo -n &quot;$d &quot;; file -b &quot;$d&quot;/* |cut -d\\' \\' -f1 |sort| uniq -c| sort -rn|head -1; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>/<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> file -b <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span><span class=\"pl-pds\">\"</span></span>/<span class=\"pl-k\">*</span> <span class=\"pl-k\">|</span>cut -d<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span> -f1 <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span> uniq -c<span class=\"pl-k\">|</span> sort -rn<span class=\"pl-k\">|</span>head -1<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>linux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Happy 24th Birthday Linux! Today is the anniversary of the source code being released, not of some baby shower.\"><pre>❯❯ Happy 24th Birthday Linux<span class=\"pl-k\">!</span> Today is the anniversary of the <span class=\"pl-c1\">source</span> code being released, not of some baby shower.</pre></div>\n<ul dir=\"auto\">\n<li>Print the first and last line of stdin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n '1p;$p'\"><pre>❯❯ sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1p;$p<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Specify an alternate rpm database path using --dbpath</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm --dbpath=/oldserverbackup/var/lib/rpm -q perl-Date-Manip\"><pre>❯❯ rpm --dbpath=/oldserverbackup/var/lib/rpm -q perl-Date-Manip</pre></div>\n<ul dir=\"auto\">\n<li>Don't have telnet, netcat, etc installed. You can use curl with telnet:// prefix. Thx @6byNine</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -v telnet://blt.evedder\\\\.otv:4240\"><pre>❯❯ curl -v telnet://blt.evedder<span class=\"pl-cce\">\\\\</span>.otv:4240</pre></div>\n<ul dir=\"auto\">\n<li>Anyone want to watch The Outer Limits?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for cmd in &quot;load tape 95&quot; rew play; do mt -f /dev/vtp20 $cmd || break ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">cmd</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load tape 95<span class=\"pl-pds\">\"</span></span> rew play<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mt -f /dev/vtp20 <span class=\"pl-smi\">$cmd</span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">break</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Replace error with ERROR: only on lines that start with 'print \"' accounting for leading space</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -r &quot;/^\\\\s*print \\\\&quot;/ s/error/ERROR:/\"><pre>❯❯ sed -r <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/^<span class=\"pl-cce\">\\\\</span>s*print <span class=\"pl-cce\">\\\\</span><span class=\"pl-pds\">\"</span></span>/ s/error/ERROR:/</pre></div>\n<ul dir=\"auto\">\n<li>Add all IPs for subnet range to eth0. For listening on whole subnet. Careful!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in {2..254}; do ip addr add 172.16.8.$d dev eth0; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> {2..254}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> ip addr add 172.16.8.<span class=\"pl-smi\">$d</span> dev eth0<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Run tail on system log, but don't fail when the log is rotated. It will open the new file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -F /var/log/messages\"><pre>❯❯ tail -F /var/log/messages</pre></div>\n<ul dir=\"auto\">\n<li>My 5th wipe</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;HI, THIS IS A MESSAGE FROM THE LAST CUSTOMER TO LET YOU KNOW THEY DID NOT WIPE THE DRIVE FOR ME EITHER. :-P&quot; &gt; /dev/sdb\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HI, THIS IS A MESSAGE FROM THE LAST CUSTOMER TO LET YOU KNOW THEY DID NOT WIPE THE DRIVE FOR ME EITHER. :-P<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> /dev/sdb</pre></div>\n<ul dir=\"auto\">\n<li>SIXELS, if your xterm supports it. Thx @fcambus,@drscriptt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xterm -geometry 120x50 -ti vt240 -e 'curl climagic\\\\.org/SIXEL/time.six;/bin/sh'\"><pre>❯❯ xterm -geometry 120x50 -ti vt240 -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>curl climagic\\\\.org/SIXEL/time.six;/bin/sh<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Happy Programmer's Error Day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date +%j\"><pre>❯❯ date +%j</pre></div>\n<ul dir=\"auto\">\n<li>Find the total disk space allocated to filesystems with level0 in name</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -PB1 | awk \\'/level0/{sum+=$2} END {print sum/2^30 &quot; GiB&quot;}\\'\"><pre>❯❯ df -PB1 <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>/level0/{sum+=<span class=\"pl-smi\">$2</span>} END {print sum/2^30 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> GiB<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Print log lines per minute stats in real time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f maillog | awk \\'{c++;t=substr($0,0,12);if (t!=ot){print c &quot; &quot; ot; c=0;ot=t}}\\'\"><pre>❯❯ tail -f maillog <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{c++<span class=\"pl-k\">;</span>t=substr(<span class=\"pl-smi\">$0</span>,0,12)<span class=\"pl-k\">;</span><span class=\"pl-k\">if</span> (t<span class=\"pl-k\">!</span>=ot){print c <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> ot<span class=\"pl-k\">;</span> c=0<span class=\"pl-k\">;</span>ot=t}}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Watch a few commands together every 10 seconds. Quotes, whitespace and ending ; are important</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n 10 '{ uptime ; free ; df -h; }'\"><pre>❯❯ watch -n 10 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{ uptime ; free ; df -h; }<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Fix logs to be dateext rotation format</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in log.{1..99}.gz;do new=$(date -d &quot;$(stat -c %y &quot;$i&quot;)&quot; +%Y%m%d );mv &quot;$i&quot; log-${new}.gz;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> log.{1..99}.gz<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> new=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>stat -c %y <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> +%Y%m%d <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>mv <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span> log-<span class=\"pl-smi\">${new}</span>.gz<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Set this option in tmux to send keystrokes to all panes in current window. <a href=\"http://t.co/ch9zKsQCDn\" rel=\"nofollow\">http://t.co/ch9zKsQCDn</a> Thx @tyrmored</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :setw synchronize-panes\"><pre>❯❯ :setw synchronize-panes</pre></div>\n<ul dir=\"auto\">\n<li>anthony-vm &lt;-- Use a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tcpdump -i vnet15 -n tcp\"><pre>❯❯ tcpdump -i vnet15 -n tcp</pre></div>\n<ul dir=\"auto\">\n<li>Pretend that you're on a starship. play from sox pkg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1\"><pre>❯❯ play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +30 fade h 1 86400 1</pre></div>\n<ul dir=\"auto\">\n<li>climagic video: My daughter creates a surprise program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/OPkV5Wh0R5\"><pre>❯❯ https://t.co/OPkV5Wh0R5</pre></div>\n<ul dir=\"auto\">\n<li>:1</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls &quot;Have a nice day&quot; 2 &gt;&amp;1 &gt; /dev/null | grep -o !\"><pre>❯❯ ls <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Have a nice day<span class=\"pl-pds\">\"</span></span> 2 <span class=\"pl-k\">&gt;&amp;1</span> <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">|</span> grep -o <span class=\"pl-k\">!</span></pre></div>\n<ul dir=\"auto\">\n<li>In awk, use \\x27 to specify a single quote character using hexadecimal escaping</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{print &quot;\\\\x27&quot; $1 &quot;\\\\x27,&quot;}\\' userlist\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x27<span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x27,<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span> userlist</pre></div>\n<ul dir=\"auto\">\n<li>3g dongle bandwidth by @gontsekekana</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pppstats|cut -d&quot; &quot; -f2|tail -n +2|xargs printf &quot;%s/2^20\\\\n&quot;|calc -p|cut -f2|xargs printf &quot;Use: %s MB\\\\n\"><pre>❯❯ pppstats<span class=\"pl-k\">|</span>cut -d<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> -f2<span class=\"pl-k\">|</span>tail -n +2<span class=\"pl-k\">|</span>xargs <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s/2^20<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>calc -p<span class=\"pl-k\">|</span>cut -f2<span class=\"pl-k\">|</span>xargs <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Use: %s MB<span class=\"pl-cce\">\\\\</span>n</span></pre></div>\n<ul dir=\"auto\">\n<li>Start playing music files with the 51st file in (0 indexed). Good for when wildcards would be too complex</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ f=(*.mp3); mpg123 &quot;${f[@]:50}\"><pre>❯❯ f=(<span class=\"pl-k\">*</span>.mp3)<span class=\"pl-k\">;</span> mpg123 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${f[@]<span class=\"pl-k\">:</span>50}</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Metaphysical Unix</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;It it really a line of text if there is no newline?&quot; | wc -l\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>It it really a line of text if there is no newline?<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>Save the last 10 commands that you ran to a file called script.sh. sed trims the whitespace</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fc -nl -10 0 | sed -r 's/^\\\\s+//' &gt; script.sh\"><pre>❯❯ <span class=\"pl-c1\">fc</span> -nl -10 0 <span class=\"pl-k\">|</span> sed -r <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^\\\\s+//<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&gt;</span> script.sh</pre></div>\n<ul dir=\"auto\">\n<li>Quick access to the ASCII character table via the ascii program or the man page if you don't have the program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii || man ascii\"><pre>❯❯ ascii <span class=\"pl-k\">||</span> man ascii</pre></div>\n<ul dir=\"auto\">\n<li>unzip all zips \\,,/(^_^)\\,,/</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while ls *.gz*;do for i in *.gz*;do [ -f ${i/.gz/} ]||gunzip -f -c $i &gt; ${i/.gz/} &amp;&amp; rm -vf $i ;done; done\"><pre>❯❯ <span class=\"pl-k\">while</span> ls <span class=\"pl-k\">*</span>.gz<span class=\"pl-k\">*</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.gz<span class=\"pl-k\">*</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> [ <span class=\"pl-k\">-f</span> <span class=\"pl-smi\">${i<span class=\"pl-k\">/</span>.gz<span class=\"pl-k\">/</span>}</span> ]<span class=\"pl-k\">||</span>gunzip -f -c <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">${i<span class=\"pl-k\">/</span>.gz<span class=\"pl-k\">/</span>}</span> <span class=\"pl-k\">&amp;&amp;</span> rm -vf <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>log_rotation_gone_horribly_wrong.1.gz.2.gz.1.gz</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ access_log.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.2.gz.1.gz.1.gz.12.gz\"><pre>❯❯ access_log.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.1.gz.2.gz.2.gz.1.gz.1.gz.12.gz</pre></div>\n<ul dir=\"auto\">\n<li>Count the total number of invalid (4xx and 5xx status) requests in 2015 on all websites</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$9~/^[45]/' *-access_log.2015* | wc -l\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$9~/^[45]/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>-access_log.2015<span class=\"pl-k\">*</span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>Show the total bandwidth consumed by websites so far in 2015</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{sum+=$10} END {print sum}' *-access_log.2015*\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{sum+=$10} END {print sum}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>-access_log.2015<span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Print out home directories owned by users without a valid password entry</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l /home | awk '$3~/^[0-9]+$/'\"><pre>❯❯ ls -l /home <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$3~/^[0-9]+$/<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show at jobs, but sort them by the time of day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ atq | sort -k6n -k3M -k4n -k5n\"><pre>❯❯ atq <span class=\"pl-k\">|</span> sort -k6n -k3M -k4n -k5n</pre></div>\n<ul dir=\"auto\">\n<li>Find any files under /home owned by system accounts/groups, except users (gid=100)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /home -uid -500 -o \\\\( -gid -500 -a \\\\! -gid 100 \\\\)\"><pre>❯❯ find /home -uid -500 -o <span class=\"pl-cce\">\\\\</span>( -gid -500 -a <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">!</span> -gid 100 <span class=\"pl-cce\">\\\\</span>)</pre></div>\n<ul dir=\"auto\">\n<li>Find broken symbolic links under /etc. Thx @MarceloBytes and @dominikhonnef</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find -L /etc -type l\"><pre>❯❯ find -L /etc -type l</pre></div>\n<ul dir=\"auto\">\n<li>I ran a systemd command from muscle memory today and then I became nauseous. Coincidence?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ journalctl -xn\"><pre>❯❯ journalctl -xn</pre></div>\n<ul dir=\"auto\">\n<li>View process table in tree format and search directly to 19797 (the pid), avoiding this command itself</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxwwf | less +/[1]9797\"><pre>❯❯ ps auxwwf <span class=\"pl-k\">|</span> less +/[1]9797</pre></div>\n<ul dir=\"auto\">\n<li>Just see what files under /etc are different between the local host and remotehost</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rsync -nav -e ssh /etc root@remotehost:/etc\"><pre>❯❯ rsync -nav -e ssh /etc root@remotehost:/etc</pre></div>\n<ul dir=\"auto\">\n<li>Check which Apache modules aren't installed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -h LoadModule *.conf | awk '{print $NF}' | xargs ls &gt; /dev/null\"><pre>❯❯ grep -h LoadModule <span class=\"pl-k\">*</span>.conf <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $NF}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> xargs ls <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>In vim command mode, this will replace ALL the text in the buffer with just the second column from the buffer</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :%! awk '{print $2}'\"><pre>❯❯ :%<span class=\"pl-k\">!</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $2}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show most of the rpms I'm missing on new server</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff &lt;(sed 's/-[0-9].*$//' old-rpms.txt) &lt;(sed 's/-[0-9].*$//' new-rpms.txt) | grep '&lt; '\"><pre>❯❯ diff <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/-[0-9].*$//<span class=\"pl-pds\">'</span></span> old-rpms.txt<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/-[0-9].*$//<span class=\"pl-pds\">'</span></span> new-rpms.txt<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt; <span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>servernaming</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Need to replace a server called drumroll. So what do I call it? Rimshot of course.\"><pre>❯❯ Need to replace a server called drumroll. So what <span class=\"pl-k\">do</span> I call it<span class=\"pl-k\">?</span> Rimshot of course.</pre></div>\n<ul dir=\"auto\">\n<li>Relabel your terminal window to \"VPS control\". May have to disable any existing title updating functions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;\\\\033];VPS control\\\\007\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>033];VPS control<span class=\"pl-cce\">\\\\</span>007</span></pre></div>\n<ul dir=\"auto\">\n<li>NSFSummit2015</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I'm at NSF Summit 2015 this week in DC / Arlington. If you are here too, let me know and we can meet up.\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>m at NSF Summit 2015 this week in DC / Arlington. If you are here too, let me know and we can meet up.</span></pre></div>\n<ul dir=\"auto\">\n<li>Find all the other words that start with bro for your software project names</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look bro\"><pre>❯❯ look bro</pre></div>\n<ul dir=\"auto\">\n<li>100K</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Imagine a huge stadium filled with over 100,000 people all rooting for the command line. Don't imagine it anymore, you're here!\"><pre>❯❯ Imagine a huge stadium filled with over 100,000 people all rooting <span class=\"pl-k\">for</span> the <span class=\"pl-c1\">command</span> line. Don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t imagine it anymore, you<span class=\"pl-pds\">'</span></span>re here<span class=\"pl-k\">!</span></pre></div>\n<ul dir=\"auto\">\n<li>Anyone remember this? <a href=\"https://t.co/emkrBn45vd\" rel=\"nofollow\">https://t.co/emkrBn45vd</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d '2010-04-16 + 1946 days'\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span>2010-04-16 + 1946 days<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Hey, can we make this work day end sooner because some of you probably can really do this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh timeserver sudo date 08141659\"><pre>❯❯ ssh timeserver sudo date 08141659</pre></div>\n<ul dir=\"auto\">\n<li>Look at the two first lines of file program.pl and print each character including newlines, tabs, etc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ head -2 program.pl | hexdump -c\"><pre>❯❯ head -2 program.pl <span class=\"pl-k\">|</span> hexdump -c</pre></div>\n<ul dir=\"auto\">\n<li>\"Foreign\" 2FA fails</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, \\'/FAILURE/{print $5}\\' 2FA-log.csv |while read ip; do printf &quot;$ip &quot;; geoiplookup $ip; done |grep -v -e &quot; US,\"><pre>❯❯ awk -F, <span class=\"pl-cce\">\\'</span>/FAILURE/{print <span class=\"pl-smi\">$5</span>}<span class=\"pl-cce\">\\'</span> 2FA-log.csv <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> ip<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$ip</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> geoiplookup <span class=\"pl-smi\">$ip</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>grep -v -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> US,</span></pre></div>\n<ul dir=\"auto\">\n<li>iptraf is a nice standalone real time network monitoring utility for Linux that runs in the terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ iptraf\"><pre>❯❯ iptraf</pre></div>\n<ul dir=\"auto\">\n<li>Fetch a copy of your IMAP inbox and send it to your localhost mailserver</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fetchmail --ssl --keep -u youremail@yourmaildomain imap.server\"><pre>❯❯ fetchmail --ssl --keep -u youremail@yourmaildomain imap.server</pre></div>\n<ul dir=\"auto\">\n<li>Sum stats by user letter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F[\\\\\\\\t/] \\'{l=substr($4,0,1);a[l]+=$1}END{for (i in a){printf &quot;%s %10d\\\\n&quot;, i, a[i]}}\\' userdiskstats.txt |sort\"><pre>❯❯ awk -F[<span class=\"pl-cce\">\\\\\\\\</span>t/] <span class=\"pl-cce\">\\'</span>{l=substr(<span class=\"pl-smi\">$4</span>,0,1)<span class=\"pl-k\">;</span>a[l]+=<span class=\"pl-smi\">$1</span>}END{for (i <span class=\"pl-k\">in</span> a){printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s %10d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>, i, a[i]}}<span class=\"pl-cce\">\\'</span> userdiskstats.txt <span class=\"pl-k\">|</span>sort</pre></div>\n<ul dir=\"auto\">\n<li>Out of space? Compress large log to other filesystem, then delete &amp; move the old log back</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gzip -v9 -c /var/log/maillog &gt; /root/maillog.gz\"><pre>❯❯ gzip -v9 -c /var/log/maillog <span class=\"pl-k\">&gt;</span> /root/maillog.gz</pre></div>\n<ul dir=\"auto\">\n<li>long list log.0000.txt through log.0099.txt, but nothing else. Good for sub ranges! Thx @nathanrayo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l /tmp/log.00[0-9][0-9].txt\"><pre>❯❯ ls -l /tmp/log.00[0-9][0-9].txt</pre></div>\n<ul dir=\"auto\">\n<li>Long list contents of two directories at once. Same as ls -l /usr/local/sbin /usr/local/bin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l /usr/local/{s,}bin\"><pre>❯❯ ls -l /usr/local/{s,}bin</pre></div>\n<ul dir=\"auto\">\n<li>Add @example.com to the end of lines that don't have @ in them and join em w/ ,s</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed 's/^[^@]\\\\+$/&amp;@example.com/' emails.txt |tr '\\\\n' ,\"><pre>❯❯ sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^[^@]\\\\+$/&amp;@example.com/<span class=\"pl-pds\">'</span></span> emails.txt <span class=\"pl-k\">|</span>tr <span class=\"pl-s\"><span class=\"pl-pds\">'</span>\\\\n<span class=\"pl-pds\">'</span></span> ,</pre></div>\n<ul dir=\"auto\">\n<li>InternationalBeerDay</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wait %1 ; cd /pub &amp;&amp; more beer\"><pre>❯❯ <span class=\"pl-c1\">wait</span> %1 <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> /pub <span class=\"pl-k\">&amp;&amp;</span> more beer</pre></div>\n<ul dir=\"auto\">\n<li>$c\";read -p \"Color? \" g;echo \"Color was $c</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ r=$((RANDOM%4096));c=$(echo &quot;obase=16;$r&quot;|bc);display -size 300x300 -title \\'\\' xc:\"><pre>❯❯ r=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span>RANDOM<span class=\"pl-k\">%</span><span class=\"pl-c1\">4096</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>c=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>echo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>obase=16;<span class=\"pl-smi\">$r</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>bc<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>display -size 300x300 -title <span class=\"pl-cce\">\\'\\'</span> xc:</pre></div>\n<ul dir=\"auto\">\n<li>Lists files grouped by extension, which is handy, especially when cleaning up your homedir. Thx @ben_nuttall</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -X\"><pre>❯❯ ls -X</pre></div>\n<ul dir=\"auto\">\n<li>Did wget produce a file with a url in it. Just use curlybraces to easy rename</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mv {countdl.php\\\\?lalalalala,}somedownload.tar.gz\"><pre>❯❯ mv {countdl.php<span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">?</span>lalalalala,}somedownload.tar.gz</pre></div>\n<ul dir=\"auto\">\n<li>Community question: What's Your current terminal size? To find out, please run this command and reply</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ { tput cols ; tput lines; } | xargs\"><pre>❯❯ { tput cols <span class=\"pl-k\">;</span> tput lines<span class=\"pl-k\">;</span> } <span class=\"pl-k\">|</span> xargs</pre></div>\n<ul dir=\"auto\">\n<li>count words</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s xkcd\\\\.com/1560/ |sed -n \\'s/.*bubblegum.png.*title=&quot;\\\\([^&quot;]\\\\+\\\\)&quot;.*/\\\\1/p\\' |pee &quot;html2text -width $COLUMNS&quot; &quot;wc -w\"><pre>❯❯ curl -s xkcd<span class=\"pl-cce\">\\\\</span>.com/1560/ <span class=\"pl-k\">|</span>sed -n <span class=\"pl-cce\">\\'</span>s/.<span class=\"pl-k\">*</span>bubblegum.png.<span class=\"pl-k\">*</span>title=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>([^<span class=\"pl-pds\">\"</span></span>]<span class=\"pl-cce\">\\\\</span>+<span class=\"pl-cce\">\\\\</span>)<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.*/<span class=\"pl-cce\">\\\\</span>1/p\\' |pee <span class=\"pl-pds\">\"</span></span>html2text -width <span class=\"pl-smi\">$COLUMNS</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>wc -w</pre></div>\n<ul dir=\"auto\">\n<li>Show per user count of inbox messages</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in */Maildir/{new,cur} ; do printf &quot;$d &quot;; ls -1 $d | wc -l ; done | column -t\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>/Maildir/{new,cur} <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> ls -1 <span class=\"pl-smi\">$d</span> <span class=\"pl-k\">|</span> wc -l <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> column -t</pre></div>\n<ul dir=\"auto\">\n<li>Another site that allows you to share your recorded terminal sessions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/1HbKUSdDEZ\"><pre>❯❯ http://t.co/1HbKUSdDEZ</pre></div>\n<ul dir=\"auto\">\n<li>Check connectivity/latency to a network host. Kind of a real time ping/traceroute hybrid. Try the different display modes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mtr 1.2.3.4\"><pre>❯❯ mtr 1.2.3.4</pre></div>\n<ul dir=\"auto\">\n<li>In X windows, you can usually paste your primary selection buffer with this shortcut. Faster than middle mouse</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Shift+Ins]\"><pre>❯❯ [Shift+Ins]</pre></div>\n<ul dir=\"auto\">\n<li>Hz game</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ f=$(($RANDOM%5900+100));play -qn synth sin $f trim 0 0.75 vol .1;read -p &quot;Hz(100-6000)? &quot; g;printf &quot;Hz=$f; Off by %d\\\\n&quot; $((f-g))\"><pre>❯❯ f=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">5900</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">100</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>play -qn synth sin <span class=\"pl-smi\">$f</span> trim 0 0.75 vol .1<span class=\"pl-k\">;</span><span class=\"pl-c1\">read</span> -p <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hz(100-6000)? <span class=\"pl-pds\">\"</span></span> g<span class=\"pl-k\">;</span><span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hz=<span class=\"pl-smi\">$f</span>; Off by %d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span>f<span class=\"pl-k\">-</span>g<span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>What the world thinks of command line users. (Description of image: <a href=\"http://t.co/2zh8ryRiY9\" rel=\"nofollow\">http://t.co/2zh8ryRiY9</a>)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/ZkKDbvXZ3g\"><pre>❯❯ http://t.co/ZkKDbvXZ3g</pre></div>\n<ul dir=\"auto\">\n<li>When self signed SSL certs I created 10 years ago finally expire, I weep</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ openssl x509 -in cheapbastard.crt -dates | grep not\"><pre>❯❯ openssl x509 -in cheapbastard.crt -dates <span class=\"pl-k\">|</span> grep not</pre></div>\n<ul dir=\"auto\">\n<li>Get your I-net IP from DNS service and set a var to it. Yes, there are many such services</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ OUTSIDE_IP=$(dig +short my.ip @outsideip.net)\"><pre>❯❯ OUTSIDE_IP=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>dig +short my.ip @outsideip.net<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show directory size and sort by human readable amount (MB, GB, etc.). Requires fairly recent version of GNU sort</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh */ | sort -h\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> sort -h</pre></div>\n<ul dir=\"auto\">\n<li>rot13 \\xc2\\xa9 joke</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr A-Za-z N-ZA-Mn-za-m  &lt; &quot;Guvf Gjrrg sebz @pyvzntvp unf orra jvguuryq va erfcbafr gb n ercbeg sebz gur pbclevtug ubyqre\"><pre>❯❯ tr A-Za-z N-ZA-Mn-za-m  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Guvf Gjrrg sebz @pyvzntvp unf orra jvguuryq va erfcbafr gb n ercbeg sebz gur pbclevtug ubyqre</span></pre></div>\n<ul dir=\"auto\">\n<li>telnet / tcp debugging via SSL</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ openssl s_client -connect google.com:443\"><pre>❯❯ openssl s_client -connect google.com:443</pre></div>\n<ul dir=\"auto\">\n<li>Recursively grep for MYSQL_PWD in all files under /etc, sending any errors (permissions) to /dev/null</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -r MYSQL_PWD /etc 2 &gt; /dev/null\"><pre>❯❯ grep -r MYSQL_PWD /etc 2 <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>Rm msgs from Q by IP</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mailq |awk '/^[0-9A-F]+/{print $1}' |while read id; do postcat -q $id |grep -qi 10\\\\.4\\\\.5\\\\.6 &amp;&amp; postsuper -d $id;done\"><pre>❯❯ mailq <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^[0-9A-F]+/{print $1}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> id<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> postcat -q <span class=\"pl-smi\">$id</span> <span class=\"pl-k\">|</span>grep -qi 10<span class=\"pl-cce\">\\\\</span>.4<span class=\"pl-cce\">\\\\</span>.5<span class=\"pl-cce\">\\\\</span>.6 <span class=\"pl-k\">&amp;&amp;</span> postsuper -d <span class=\"pl-smi\">$id</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Find less than an hour old files in CWD or below without crossing into other partitions. (-xdev)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -mmin -60 -xdev -ls\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -mmin -60 -xdev -ls</pre></div>\n<ul dir=\"auto\">\n<li>hexdump-stream</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;hello, climagic&quot; | od -t x1 -A&quot;n&quot; | tr &quot;\\\\n&quot; &quot; &quot; | tr -d &quot;\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello, climagic<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> od -t x1 -A<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span></span></pre></div>\n<ul dir=\"auto\">\n<li>range random</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 0 9 | shuf -n 1\"><pre>❯❯ seq 0 9 <span class=\"pl-k\">|</span> shuf -n 1</pre></div>\n<ul dir=\"auto\">\n<li>wordwrap for less</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less -S &lt;text_file &gt;\"><pre>❯❯ less -S <span class=\"pl-k\">&lt;</span>text_file <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Range random</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ let &quot;rand = RANDOM % 9&quot;; echo $rand\"><pre>❯❯ <span class=\"pl-c1\">let</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rand = RANDOM % 9<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$rand</span></pre></div>\n<ul dir=\"auto\">\n<li>Crude live testing script as you save</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n .2 &lt;bash_script &gt;\"><pre>❯❯ watch -n .2 <span class=\"pl-k\">&lt;</span>bash_script <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>disable wordwrap</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tput rmam; &lt;any-command &gt;; tput smam\"><pre>❯❯ tput rmam<span class=\"pl-k\">;</span> <span class=\"pl-k\">&lt;</span>any-command <span class=\"pl-k\">&gt;</span><span class=\"pl-k\">;</span> tput smam</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today's posts are by Rhoit (@rhoitman), a Linux user who uses zsh.\"><pre>❯❯ Today<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s posts are by Rhoit (@rhoitman), a Linux user who uses zsh.</span></pre></div>\n<ul dir=\"auto\">\n<li>Change all uppercase letters in a file to lowercase</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat file1 | tr &quot;[A-Z]&quot; &quot;[a-z]&quot; \\xc2\\xa0\"><pre>❯❯ cat file1 <span class=\"pl-k\">|</span> tr <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[A-Z]<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[a-z]<span class=\"pl-pds\">\"</span></span> <span class=\"pl-cce\">\\x</span>c2<span class=\"pl-cce\">\\x</span>a0</pre></div>\n<ul dir=\"auto\">\n<li>Learn to use vim</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vimtutor\"><pre>❯❯ vimtutor</pre></div>\n<ul dir=\"auto\">\n<li>Have grep return lines around the one you find (x is the number of lines)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -Bx -Ax foo bar.txt\"><pre>❯❯ grep -Bx -Ax foo bar.txt</pre></div>\n<ul dir=\"auto\">\n<li>Get the usernames from /etc/passwd</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cut -f 1 -d: /etc/passwd\"><pre>❯❯ cut -f 1 -d: /etc/passwd</pre></div>\n<ul dir=\"auto\">\n<li>Kill defunct processes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps -ef | grep defunct | awk '{print $2}' | xargs kill\"><pre>❯❯ ps -ef <span class=\"pl-k\">|</span> grep defunct <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $2}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> xargs <span class=\"pl-c1\">kill</span></pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today's posts are by Bill Newcomb (@billthelinuxguy), who is a 10+year Solaris admin now turned Linux admin using RHEL and Ubuntu\"><pre>❯❯ Today<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s posts are by Bill Newcomb (@billthelinuxguy), who is a 10+year Solaris admin now turned Linux admin using RHEL and Ubuntu</span></pre></div>\n<ul dir=\"auto\">\n<li>Check every 5 seconds if something.pid exits and it's last access and size</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n 5 &quot;ls -l something.pid\"><pre>❯❯ watch -n 5 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ls -l something.pid</span></pre></div>\n<ul dir=\"auto\">\n<li>Do a reverse DNS lookup of all hosts in 192.168.0.0/24</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {1..254}; do host 192.168.0.$i; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {1..254}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> host 192.168.0.<span class=\"pl-smi\">$i</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Check if this machine is being pinged</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tcpdump -ni eth0 icmp\"><pre>❯❯ tcpdump -ni eth0 icmp</pre></div>\n<ul dir=\"auto\">\n<li>See a live output of the syslog file filtered for dhcp messages</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f /var/log/syslog | grep dhcp\"><pre>❯❯ tail -f /var/log/syslog <span class=\"pl-k\">|</span> grep dhcp</pre></div>\n<ul dir=\"auto\">\n<li>Get a List of all Emailadresses in your MBox file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -o &quot;\\\\b[a-zA-Z0-9\\\\.\\\\+-]+@[a-zA-Z0-9\\\\.-]+\\\\.[a-zA-Z0-9\\\\.-]+\\\\b&quot; mbox | sort -u\"><pre>❯❯ egrep -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>b[a-zA-Z0-9<span class=\"pl-cce\">\\\\</span>.<span class=\"pl-cce\">\\\\</span>+-]+@[a-zA-Z0-9<span class=\"pl-cce\">\\\\</span>.-]+<span class=\"pl-cce\">\\\\</span>.[a-zA-Z0-9<span class=\"pl-cce\">\\\\</span>.-]+<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-pds\">\"</span></span> mbox <span class=\"pl-k\">|</span> sort -u</pre></div>\n<ul dir=\"auto\">\n<li>Collapse groups of 3 lines to 1 line and seperate the values by commas</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat list | sed -e &quot;N;N;s/\\\\n/,/g&quot; &gt; list.csv\"><pre>❯❯ cat list <span class=\"pl-k\">|</span> sed -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>N;N;s/<span class=\"pl-cce\">\\\\</span>n/,/g<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> list.csv</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ His Twitter id is @Macgoever of course.\"><pre>❯❯ His Twitter id is @Macgoever of course.</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today's posts are by Macgoever, a network engineer in Germany whose team supports over 10k network devices.\"><pre>❯❯ Today<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s posts are by Macgoever, a network engineer in Germany whose team supports over 10k network devices.</span></pre></div>\n<ul dir=\"auto\">\n<li>terminate the shell if no activity in 5 minutes, security people like this on ssh connections</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ export TMOUT=300\"><pre>❯❯ <span class=\"pl-k\">export</span> TMOUT=300</pre></div>\n<ul dir=\"auto\">\n<li>get cheat sheets on popular topics from <a href=\"http://t.co/WzzHiZs2hE\" rel=\"nofollow\">http://t.co/WzzHiZs2hE</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gem install cheat; cheat strftime\"><pre>❯❯ gem install cheat<span class=\"pl-k\">;</span> cheat strftime</pre></div>\n<ul dir=\"auto\">\n<li>add a slash to run the actual command and not an alias</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\grep foo bar.txt\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>grep foo bar.txt</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ put &quot;git blame $@&quot; into ~/bin/git-praise and now you can run \\'git praise\\' instead of \\'git blame\\'\"><pre>❯❯ put <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>git blame <span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span> into <span class=\"pl-k\">~</span>/bin/git-praise and now you can run <span class=\"pl-cce\">\\'</span>git praise<span class=\"pl-cce\">\\'</span> instead of <span class=\"pl-cce\">\\'</span>git blame<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>now you can cd up two levels at a time with cd ... (zsh only?)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias -g ...=../..\"><pre>❯❯ <span class=\"pl-c1\">alias</span> -g ...=../..</pre></div>\n<ul dir=\"auto\">\n<li>funzip can uncompress piped zipfiles</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat http://t.co/auRfocBF3k | funzip | grep alice &gt; alice.txt\"><pre>❯❯ cat http://t.co/auRfocBF3k <span class=\"pl-k\">|</span> funzip <span class=\"pl-k\">|</span> grep alice <span class=\"pl-k\">&gt;</span> alice.txt</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today's guest posts are by Alice Kaerast (@kaerast), who uses a mixture of bash and zsh to automate everything.\"><pre>❯❯ Today<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s guest posts are by Alice Kaerast (@kaerast), who uses a mixture of bash and zsh to automate everything.</span></pre></div>\n<ul dir=\"auto\">\n<li>speed up grep with a fixed string search and optimal localization</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LC_ALL=C grep -F pattern file\"><pre>❯❯ LC_ALL=C grep -F pattern file</pre></div>\n<ul dir=\"auto\">\n<li>fold a file into 3 columns (row ordering)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 9 | pr -tas&quot; &quot; --columns 3\"><pre>❯❯ seq 9 <span class=\"pl-k\">|</span> pr -tas<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> --columns 3</pre></div>\n<ul dir=\"auto\">\n<li>fold a file into 3 columns (column ordering)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 9 | pr -ts&quot; &quot; --columns 3\"><pre>❯❯ seq 9 <span class=\"pl-k\">|</span> pr -ts<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> --columns 3</pre></div>\n<ul dir=\"auto\">\n<li>replace double quotes with single quotes without the usual quoting nightmare</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr \\'&quot;\\' &quot;\\'&quot; &lt; file\"><pre>❯❯ tr <span class=\"pl-cce\">\\'</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\' <span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span> &lt; file</span></pre></div>\n<ul dir=\"auto\">\n<li>page through a log file in reverse to avoid guessing number of lines to tail</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tac log | less\"><pre>❯❯ tac log <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>use uniq to count lines with common prefixes. For example timestamps in log files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ uniq -w 12 -c log\"><pre>❯❯ uniq -w 12 -c log</pre></div>\n<ul dir=\"auto\">\n<li>print a file in a tabular format (right align). Set delimiter with -s</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rev file | column -t | rev\"><pre>❯❯ rev file <span class=\"pl-k\">|</span> column -t <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>print a file in a tabular format (left align). Set delimiter with -s</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ column -t file\"><pre>❯❯ column -t file</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Today's posts are by Chris Seymour (@iiSeymour), a zsh, i3wm and emacs user who'se favorite command line tool is awk.\"><pre>❯❯ Today<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s posts are by Chris Seymour (@iiSeymour), a zsh, i3wm and emacs user who<span class=\"pl-pds\">'</span></span>se favorite <span class=\"pl-c1\">command</span> line tool is awk.</pre></div>\n<ul dir=\"auto\">\n<li>guestweek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ This week is a guest week. Each day will bring posts from a different person.\"><pre>❯❯ This week is a guest week. Each day will bring posts from a different person.</pre></div>\n<ul dir=\"auto\">\n<li>CLIMAGIC quick video: Using awk or numsum to sum up numbers in df output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/kpb7ilXk8S\"><pre>❯❯ http://t.co/kpb7ilXk8S</pre></div>\n<ul dir=\"auto\">\n<li>Delete podcasts older than 7 days</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ~/podcasts -type f -mtime +7 -delete\"><pre>❯❯ find <span class=\"pl-k\">~</span>/podcasts -type f -mtime +7 -delete</pre></div>\n<ul dir=\"auto\">\n<li>move Up in your Roku interface. Great for when you can't find the remote</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -d '' http://roku\\\\.home:8060/keypress/Up\"><pre>❯❯ curl -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span> http://roku<span class=\"pl-cce\">\\\\</span>.home:8060/keypress/Up</pre></div>\n<ul dir=\"auto\">\n<li>Make a gif out of all jpg's in a directory @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @garth_mortensen: convert -delay 20 -loop 0 *.jpg newgif.gif\"><pre>❯❯ RT @garth_mortensen: convert -delay 20 -loop 0 <span class=\"pl-k\">*</span>.jpg newgif.gif</pre></div>\n<ul dir=\"auto\">\n<li>client\\ntar cvf - dir/|lz4c |netcat server 12345 \\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @gousiosg: Pushing 5Gbps over an 1Gbps network:\\n\"><pre>❯❯ RT @gousiosg: Pushing 5Gbps over an 1Gbps network:<span class=\"pl-cce\">\\n</span></pre></div>\n<ul dir=\"auto\">\n<li>Find files on the entire filesystem for which there is no corresponding user or group</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / \\\\( -nouser -o -nogroup \\\\) -ls\"><pre>❯❯ find / <span class=\"pl-cce\">\\\\</span>( -nouser -o -nogroup <span class=\"pl-cce\">\\\\</span>) -ls</pre></div>\n<ul dir=\"auto\">\n<li>If you'd like to be a poster for the upcoming guest week, please follow this link for instructions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/ZsC9plbyeU\"><pre>❯❯ http://t.co/ZsC9plbyeU</pre></div>\n<ul dir=\"auto\">\n<li>Breakup compressed log by syslog date and recompress</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat large.log.gz | awk \\'{print $0 | &quot;gzip -v9c &gt; large.log-&quot;$1&quot;_&quot;$2&quot;.gz&quot;}\\'\"><pre>❯❯ zcat large.log.gz <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$0</span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gzip -v9c &gt; large.log-<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$1</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span><span class=\"pl-smi\">$2</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.gz<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Compress and ssh transfer a log that has filled a filesystem</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gzip -c large.log | ssh user@hostwithbigdisk 'cat &gt; /dir/large.log.gz'\"><pre>❯❯ gzip -c large.log <span class=\"pl-k\">|</span> ssh user@hostwithbigdisk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>cat &gt; /dir/large.log.gz<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Check the size of yesterday's netflow data directory using date format technique</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -s $( date -d &quot;yesterday&quot; +/netflow/%Y/%m/%d )\"><pre>❯❯ du -s <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>yesterday<span class=\"pl-pds\">\"</span></span> +/netflow/%Y/%m/%d <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>New tmux session, split window w/ 5 (4) line tail of syslog at bottom</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux new-session \\\\; split-window -l 5 -d 'tail -F /var/log/syslog'\"><pre>❯❯ tmux new-session <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span> split-window -l 5 -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tail -F /var/log/syslog<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Having trouble with username resolution? (LDAP issues, etc.) Use the -n option with -l to print uids instead of usernames</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ln\"><pre>❯❯ ls -ln</pre></div>\n<ul dir=\"auto\">\n<li>By default, strings will only show data if there are 4 or more consecutive ASCII chars, you can reduce this with -n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strings -n1 file.bin\"><pre>❯❯ strings -n1 file.bin</pre></div>\n<ul dir=\"auto\">\n<li>Figure out when your md-raid will finish</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;$(grep finish /proc/mdstat |sed -e \\'s/^.*finish=//;s/ .*$//;s/\\\\..*$//\\')min\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>grep finish /proc/mdstat <span class=\"pl-k\">|</span>sed -e <span class=\"pl-cce\">\\'</span>s/^.<span class=\"pl-k\">*</span>finish=//<span class=\"pl-k\">;</span>s/ .<span class=\"pl-k\">*</span>$//<span class=\"pl-k\">;</span>s/<span class=\"pl-cce\">\\\\</span>..<span class=\"pl-k\">*</span>$//<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span>min</span></pre></div>\n<ul dir=\"auto\">\n<li>True on last day of the month. Useful in cron and other places</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [ $( date -d 'next day' +%d ) == 1 ] &amp;&amp; echo 'its the end of the month'\"><pre>❯❯ [ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> date -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span>next day<span class=\"pl-pds\">'</span></span> +%d <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">==</span> 1 ] <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>its the end of the month<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>circlecitycon</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Me @ conferences - &gt; Alright, now I have all my stuff setup just they way I like it..... awww time to go already?\"><pre>❯❯ Me @ conferences - <span class=\"pl-k\">&gt;</span> Alright, now I have all my stuff setup just they way I like it..... awww <span class=\"pl-k\">time</span> to go already<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>Try all upper/lower case combos of url</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for mc in http://goo\\\\.gl/{A,a}{B,b}9{X,x}0 ; do curl -sI $mc | grep Location: &amp;&amp; echo $mc ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">mc</span> <span class=\"pl-k\">in</span> http://goo<span class=\"pl-cce\">\\\\</span>.gl/{A,a}{B,b}9{X,x}0 <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> curl -sI <span class=\"pl-smi\">$mc</span> <span class=\"pl-k\">|</span> grep Location: <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$mc</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>In GNU sort, you can use -V (version sort) to also sort IPv4 addresses numerically according to each class</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -V ipv4addrs.txt\"><pre>❯❯ sort -V ipv4addrs.txt</pre></div>\n<ul dir=\"auto\">\n<li>vim in Read only mode. Useful when you just want to get features like syntax highlighting without modifying anything</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim -R httpd.conf\"><pre>❯❯ vim -R httpd.conf</pre></div>\n<ul dir=\"auto\">\n<li>run the non-aliased version of rm. Putting a \\ in front of a command name will bypass any aliases of the same name</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\rm file\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>rm file</pre></div>\n<ul dir=\"auto\">\n<li>Poor man's annoy-a-tron. 3 - 6 min interval</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do play -qn synth sin 14k trim 0 0.75 vol .8 ; sleep $((RANDOM % 4 + 3))m ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> play -qn synth sin 14k trim 0 0.75 vol .8 <span class=\"pl-k\">;</span> sleep <span class=\"pl-s\"><span class=\"pl-pds\">$((</span>RANDOM <span class=\"pl-k\">%</span> <span class=\"pl-c1\">4</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">3</span><span class=\"pl-pds\">))</span></span>m <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>(Unrotated log) Count the number of lines per month in boot.log</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cut -c1-3 boot.log | uniq -c\"><pre>❯❯ cut -c1-3 boot.log <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Log!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ base64 -d &lt; TVRoZAAAAAYAAQABAYBNVHJrAAAAOgD/UQOAAAAAkEV/CIBFfwCQRX8IgEV/AJBKfwiASn8AkEx/CIBMfwqQSX8IgEl/AJBKfwiASn//LwA= |timidity -\"><pre>❯❯ base64 -d <span class=\"pl-k\">&lt;</span> TVRoZAAAAAYAAQABAYBNVHJrAAAAOgD/UQOAAAAAkEV/CIBFfwCQRX8IgEV/AJBKfwiASn8AkEx/CIBMfwqQSX8IgEl/AJBKfwiASn//LwA= <span class=\"pl-k\">|</span>timidity -</pre></div>\n<ul dir=\"auto\">\n<li>Rename set of files with non-hyphenated date to be hyphenated</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rename 's/_(\\\\d{4})(\\\\d{2})(\\\\d{2}).txt/_$1-$2-$3.txt/' *_????????.txt\"><pre>❯❯ rename <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/_(\\\\d{4})(\\\\d{2})(\\\\d{2}).txt/_$1-$2-$3.txt/<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">*</span>_<span class=\"pl-k\">????????</span>.txt</pre></div>\n<ul dir=\"auto\">\n<li>Use a subshell to generate a complex list of files for tar</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ (find /one -print0; find /two -print0) | tar cvf backup.tar --null -T -\"><pre>❯❯ (find /one -print0<span class=\"pl-k\">;</span> find /two -print0) <span class=\"pl-k\">|</span> tar cvf backup.tar --null -T -</pre></div>\n<ul dir=\"auto\">\n<li>Run du -sh every 5 minutes precisely (ignoring time it takes to run du -s by using watch -p)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n 300 -p du -s\"><pre>❯❯ watch -n 300 -p du -s</pre></div>\n<ul dir=\"auto\">\n<li>thousands of logfiles, compressed in as many threads as CPUs you have. / cc @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @SnowRaptor: ls *.log | parallel xz -v\"><pre>❯❯ RT @SnowRaptor: ls <span class=\"pl-k\">*</span>.log <span class=\"pl-k\">|</span> parallel xz -v</pre></div>\n<ul dir=\"auto\">\n<li>diy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @Tech_Poet: This is the kind of thing that gives IT professions heart attacks.\"><pre>❯❯ RT @Tech_Poet: This is the kind of thing that gives IT professions heart attacks.</pre></div>\n<ul dir=\"auto\">\n<li>hook into stdout and stderr of a running process! /cc @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @amenthes_de: sudo strace -p &lt;PID &gt; -e trace=write -e write=1,2\"><pre>❯❯ RT @amenthes_de: sudo strace -p <span class=\"pl-k\">&lt;</span>PID <span class=\"pl-k\">&gt;</span> -e trace=write -e write=1,2</pre></div>\n<ul dir=\"auto\">\n<li>CLI PDF to HTML tool</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pdftohtml -stdout my.pdf &gt; my.pdf.html; elinks my.pdf.html\"><pre>❯❯ pdftohtml -stdout my.pdf <span class=\"pl-k\">&gt;</span> my.pdf.html<span class=\"pl-k\">;</span> elinks my.pdf.html</pre></div>\n<ul dir=\"auto\">\n<li>Show the last access time of all files ending with .txt. This may not work on all filesystems/setups</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l --time=atime --full-time *.txt\"><pre>❯❯ ls -l --time=atime --full-time <span class=\"pl-k\">*</span>.txt</pre></div>\n<ul dir=\"auto\">\n<li>Who watches who? You watch who!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch who\"><pre>❯❯ watch who</pre></div>\n<ul dir=\"auto\">\n<li>uuoc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Stuck on an island, with only a terminal. I ran \\'cat file\\' and 1000 people appeared saying &quot;Useless use of cat!&quot; Rescued.\"><pre>❯❯ Stuck on an island, with only a terminal. I ran <span class=\"pl-cce\">\\'</span>cat file<span class=\"pl-cce\">\\'</span> and 1000 people appeared saying <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Useless use of cat!<span class=\"pl-pds\">\"</span></span> Rescued.</pre></div>\n<ul dir=\"auto\">\n<li>Check if old domains are still pointing to you</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat old_domains |while read -r d; do dig +short NS $d |grep -q yourNShost &amp;&amp; echo $d; done\"><pre>❯❯ cat old_domains <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r d<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> dig +short NS <span class=\"pl-smi\">$d</span> <span class=\"pl-k\">|</span>grep -q yourNShost <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$d</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>When using less with piped input data, you can use the 's' key to save the data to a file. Very useful with database queries</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less tip: s\"><pre>❯❯ less tip: s</pre></div>\n<ul dir=\"auto\">\n<li>Just noticed that my town (Bloomington) has got <a href=\"http://t.co/PqP8oA7lcM\" rel=\"nofollow\">http://t.co/PqP8oA7lcM</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ whois root\\\\.com | grep -E &quot;Registrant (City|State|Country)\"><pre>❯❯ whois root<span class=\"pl-cce\">\\\\</span>.com <span class=\"pl-k\">|</span> grep -E <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Registrant (City|State|Country)</span></pre></div>\n<ul dir=\"auto\">\n<li>emojic8ball how will I die?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ em8ball(){ a=$( printf &quot;%x\\\\n&quot; $(($RANDOM%368+9728)) );printf &quot;\\\\u$a &quot;;random -e 2 &amp;&amp; $FUNCNAME||echo; }\"><pre>❯❯ <span class=\"pl-en\">em8ball</span>(){ a=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%x<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">368</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">9728</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-pds\">)</span></span>;<span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>u<span class=\"pl-smi\">$a</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>random -e 2 <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$FUNCNAME</span><span class=\"pl-k\">||</span>echo<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Funhouse mirror with your webcam. Kids love this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer --vf=geq='(p(X\\\\,Y*sin(X/512))-0)' tv://\"><pre>❯❯ mplayer --vf=geq=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>(p(X\\\\,Y*sin(X/512))-0)<span class=\"pl-pds\">'</span></span> tv://</pre></div>\n<ul dir=\"auto\">\n<li>Record a macro called 'a' that moves down two lines (jj) and then deletes 1 line (dd). Run w/ @a, run 100 times 100@a</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ vim macro: qajjddq\"><pre>❯❯ vim macro: qajjddq</pre></div>\n<ul dir=\"auto\">\n<li>Linux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @a_alasiri: vi / vim visualized cheat-sheet.\\n\"><pre>❯❯ RT @a_alasiri: vi / vim visualized cheat-sheet.<span class=\"pl-cce\">\\n</span></pre></div>\n<ul dir=\"auto\">\n<li>unix</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @nixcraft: Open 5 random articles:\\n\\nfor J in {1..5}; do xdg-open http://t.co/TvxBGjcKo9; done\\n\\nMore http://t.co/i1zaNi7kN8\"><pre>❯❯ RT @nixcraft: Open 5 random articles:<span class=\"pl-cce\">\\n\\n</span>for J <span class=\"pl-k\">in</span> {1..5}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xdg-open http://t.co/TvxBGjcKo9<span class=\"pl-k\">;</span> done<span class=\"pl-cce\">\\n\\n</span>More http://t.co/i1zaNi7kN8</pre></div>\n<ul dir=\"auto\">\n<li>Its alive!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :;do printf &quot;\\\\e[%d;%dH\\\\e[48;5;%dm \\\\e[0m&quot; $(($RANDOM%$LINES)) $(($RANDOM%$COLUMNS)) $(($RANDOM%216 )); done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[%d;%dH<span class=\"pl-cce\">\\\\</span>e[48;5;%dm <span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-smi\">$LINES</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-smi\">$COLUMNS</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">216</span> <span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use poppler-utils to extract text data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in *2015-04-*-.pdf; do printf &quot;$i &quot; ; pdftotext $i - | sed -n \\'/Total Bytes/{n;n;p;q}\\';done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>2015-04-<span class=\"pl-k\">*</span>-.pdf<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> pdftotext <span class=\"pl-smi\">$i</span> - <span class=\"pl-k\">|</span> sed -n <span class=\"pl-cce\">\\'</span>/Total Bytes/{n<span class=\"pl-k\">;</span>n<span class=\"pl-k\">;</span>p<span class=\"pl-k\">;</span>q}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the sum of all the values of lines that start with \"Bytes: \" in traffic.log</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'/^Bytes: /{sum+=$2} END {print sum}\\' traffic.log\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>/^Bytes: /{sum+=<span class=\"pl-smi\">$2</span>} END {print sum}<span class=\"pl-cce\">\\'</span> traffic.log</pre></div>\n<ul dir=\"auto\">\n<li>To print commits per day for a git repo.  Thx @akkaashgoel</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ git log | awk \\'/Date/{print &quot; : &quot; $4 &quot; &quot; $3 &quot; &quot; $6}\\' | uniq -c\"><pre>❯❯ git log <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>/Date/{print <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> : <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$4</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$3</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$6</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Print messages per day stats in a maildrop.log file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep ^Date maildrop.log | cut -c1-16 | uniq -c\"><pre>❯❯ grep ^Date maildrop.log <span class=\"pl-k\">|</span> cut -c1-16 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Long list all(a) files(l) in CWD, ordering by size(S) ascending(r) and displaying size in human readable form(h)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -Sharl\"><pre>❯❯ ls -Sharl</pre></div>\n<ul dir=\"auto\">\n<li>We shouldn't have counted our thumbs when we choose a numeric base</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {0..70};do printf &quot;$i &quot;;echo &quot;ibase=10;obase=8;2^$i&quot;|bc;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {0..70}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibase=10;obase=8;2^<span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>bc<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>puzzle</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ 590295810358705653049\"><pre>❯❯ 590295810358705653049</pre></div>\n<ul dir=\"auto\">\n<li>Decimal to binary conversion in bash by @blind_coder</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Dec2Bin=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}); echo ${Dec2Bin[27]}\"><pre>❯❯ Dec2Bin=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1})<span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${Dec2Bin[27]}</span></pre></div>\n<ul dir=\"auto\">\n<li>Play enough of the video to get the VIDEO dimensions. (The monkey way)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -ao null -vo null --endpos=0.1 *.mp4 | grep VIDEO\"><pre>❯❯ mplayer -ao null -vo null --endpos=0.1 <span class=\"pl-k\">*</span>.mp4 <span class=\"pl-k\">|</span> grep VIDEO</pre></div>\n<ul dir=\"auto\">\n<li>bzip2 compress 90+ day old log files under directories a - z</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find [a-z] -mtime +90 -type f -name '*_log' -exec bzip2 -v9 {} \\\\;\"><pre>❯❯ find [a-z] -mtime +90 -type f -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*_log<span class=\"pl-pds\">'</span></span> -exec bzip2 -v9 {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Analyze your whole Linux lastlog to see the different remote hosts for each user</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da | awk \\'{print $1 &quot; &quot; $NF}\\' | sort | uniq -c\"><pre>❯❯ last -da <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$NF</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>And if you're looking for a more keys/scales, instruments. Try this program I wrote a few years back</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/4TJhfBbaie\"><pre>❯❯ http://t.co/4TJhfBbaie</pre></div>\n<ul dir=\"auto\">\n<li>Poly synth. Press asdfghj</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=CDEFGAB;l=asdfghj;while read -n1 k;do x=$(tr $l $n &lt; $k);play -qn synth pl ${x}3 fade 0 .7 &amp; done\"><pre>❯❯ n=CDEFGAB<span class=\"pl-k\">;</span>l=asdfghj<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> -n1 k<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> x=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tr <span class=\"pl-smi\">$l</span> <span class=\"pl-smi\">$n</span> <span class=\"pl-k\">&lt;</span> <span class=\"pl-smi\">$k</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>play -qn synth pl <span class=\"pl-smi\">${x}</span>3 fade 0 .7 <span class=\"pl-k\">&amp;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>An addicting command line game where you use hjklyubn keys to move around and gobble up numbers. <a href=\"http://t.co/MUtxVLlaqq\" rel=\"nofollow\">http://t.co/MUtxVLlaqq</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ greed\"><pre>❯❯ greed</pre></div>\n<ul dir=\"auto\">\n<li>View the 'open' system calls made by a program called vpnc. strace = window into program functionality</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strace -e open vpnc\"><pre>❯❯ strace -e open vpnc</pre></div>\n<ul dir=\"auto\">\n<li>Sometimes its handy to copy small amounts of data from one host to host this way</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ base64 + copy buffer - &gt; base64 -d + paste buffer\"><pre>❯❯ base64 + copy buffer - <span class=\"pl-k\">&gt;</span> base64 -d + paste buffer</pre></div>\n<ul dir=\"auto\">\n<li>Go left in your Roku interface. Great for when you can't find the remote</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -d '' http://roku\\\\.home:8060/keypress/Left\"><pre>❯❯ curl -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span> http://roku<span class=\"pl-cce\">\\\\</span>.home:8060/keypress/Left</pre></div>\n<ul dir=\"auto\">\n<li>It probably says a lot that pulseaudio's kill command has a short option, but the start option doesn't</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pulseaudio -k\"><pre>❯❯ pulseaudio -k</pre></div>\n<ul dir=\"auto\">\n<li>This is how you quit vi</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Esc &gt;:q!\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Esc <span class=\"pl-k\">&gt;</span>:q<span class=\"pl-k\">!</span></pre></div>\n<ul dir=\"auto\">\n<li>Remove the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivilent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Incremental undo of command line edits. Ctrl-- works the same and Ctrl-? sometimes works as well, although its not documented</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-_ &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-_ <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>description. The</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just a reminder about the format of climagic tweets: command\"><pre>❯❯ Just a reminder about the format of climagic tweets: <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>Show directory-only usage in human readable form, but don't decend into other filesystems. Sort human readable data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -shx */ | sort -h\"><pre>❯❯ du -shx <span class=\"pl-k\">*</span>/ <span class=\"pl-k\">|</span> sort -h</pre></div>\n<ul dir=\"auto\">\n<li>Cures most shell symptoms, including runny prompts, echo congestion, binary infection and color stain. Use as directed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ stty sane; reset\"><pre>❯❯ stty sane<span class=\"pl-k\">;</span> reset</pre></div>\n<ul dir=\"auto\">\n<li>Instead of using sleep 60, you can use read and \"short-circuit\" the wait with a return</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do do_something; read -st 60 X ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> do_something<span class=\"pl-k\">;</span> <span class=\"pl-c1\">read</span> -st 60 X <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Find ph words where the ph is not pronounced as 'f</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look . |grep ph |while read w; do espeak -qx &quot;$w&quot;|grep -q f||echo &quot;$w&quot;; done\"><pre>❯❯ look <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span>grep ph <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> w<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> espeak -qx <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$w</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>grep -q f<span class=\"pl-k\">||</span>echo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$w</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Try finding the URL given a fuzzy screenshot</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for u in example/bc{3,8}449{0,8,9}2-ab7a-1{3,8}03; do curl -sI $u|grep -q 404||echo $u; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">u</span> <span class=\"pl-k\">in</span> example/bc{3,8}449{0,8,9}2-ab7a-1{3,8}03<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> curl -sI <span class=\"pl-smi\">$u</span><span class=\"pl-k\">|</span>grep -q 404<span class=\"pl-k\">||</span>echo <span class=\"pl-smi\">$u</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Open mplayer man page and search for 'ass,'</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LESS=&quot;+/ass,&quot; man mplayer\"><pre>❯❯ LESS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+/ass,<span class=\"pl-pds\">\"</span></span> man mplayer</pre></div>\n<ul dir=\"auto\">\n<li>Use || when you want to run a command only if the first one failed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fsck -y /dev/sda1 || echo &quot;You\\'re fscked!&quot; | mail -s alert admin@x.com\"><pre>❯❯ fsck -y /dev/sda1 <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>You\\'re fscked!<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> mail -s alert admin@x.com</pre></div>\n<ul dir=\"auto\">\n<li>lasttweet</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @msquadrat: allow the IP you're connecting from via SSH all access for two hours\"><pre>❯❯ RT @msquadrat: allow the IP you<span class=\"pl-s\"><span class=\"pl-pds\">'</span>re connecting from via SSH all access for two hours</span></pre></div>\n<ul dir=\"auto\">\n<li>Find *.txt in $dir sorted by lines with $word By .@msquadrat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find &quot;$dir&quot; -name \\'*.txt\\' -print0|xargs -0 grep -FwiHc $word|sort -rn -t: -k2\"><pre>❯❯ find <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$dir</span><span class=\"pl-pds\">\"</span></span> -name <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">*</span>.txt<span class=\"pl-cce\">\\'</span> -print0<span class=\"pl-k\">|</span>xargs -0 grep -FwiHc <span class=\"pl-smi\">$word</span><span class=\"pl-k\">|</span>sort -rn -t: -k2</pre></div>\n<ul dir=\"auto\">\n<li>Sum instance counts by start set of non-zero numbers</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gawk \\'{gsub(&quot;0&quot;,&quot;&quot;,$1);a[$1]+=$2} END {for (p in a){print p &quot; &quot; a[p]}}\\' resistors.txt\"><pre>❯❯ gawk <span class=\"pl-cce\">\\'</span>{gsub(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,<span class=\"pl-smi\">$1</span>)<span class=\"pl-k\">;</span>a[<span class=\"pl-smi\">$1</span>]+=<span class=\"pl-smi\">$2</span>} END {for (p <span class=\"pl-k\">in</span> a){print p <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> a[p]}}<span class=\"pl-cce\">\\'</span> resistors.txt</pre></div>\n<ul dir=\"auto\">\n<li>Start a web service on port 8000. Among other things, it can be useful to testing LISTENing ports vs firewall</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ python -m SimpleHTTPServer\"><pre>❯❯ python -m SimpleHTTPServer</pre></div>\n<ul dir=\"auto\">\n<li>Speak nicely</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ googlesay(){ curl -A RG translate\\\\.google\\\\.com/translate_tts -d &quot;tl=en&amp;q=$*&quot; |mpg123 -; }; googlesay &quot;I\\'m tired of talking.\"><pre>❯❯ <span class=\"pl-en\">googlesay</span>(){ curl -A RG translate<span class=\"pl-cce\">\\\\</span>.google<span class=\"pl-cce\">\\\\</span>.com/translate_tts -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tl=en&amp;q=<span class=\"pl-smi\">$*</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>mpg123 -; }<span class=\"pl-k\">;</span> googlesay <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I\\'m tired of talking.</span></pre></div>\n<ul dir=\"auto\">\n<li>Automatically installs your public key to the remote host (this is included in the openssh package)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-copy-id 'user@remotehost'\"><pre>❯❯ ssh-copy-id <span class=\"pl-s\"><span class=\"pl-pds\">'</span>user@remotehost<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>When you want to see output AND save it, try \"| tee\" of just a \" &gt;\" redirect</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm -fv /somedir | tee remove.log\"><pre>❯❯ rm -fv /somedir <span class=\"pl-k\">|</span> tee remove.log</pre></div>\n<ul dir=\"auto\">\n<li>On Linux, show the exact time/date the system was last booted</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d @$(grep ^btime /proc/stat | cut -d&quot; &quot; -f 2)\"><pre>❯❯ date -d @<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>grep ^btime /proc/stat <span class=\"pl-k\">|</span> cut -d<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> -f 2<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Use Perl regex to find cases of status: NOT followed by NOERROR in dig output files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zgrep -A100 -P &quot;(?&lt;= status: )(?!NOERROR)&quot; 99.*.gz\"><pre>❯❯ zgrep -A100 -P <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(?&lt;= status: )(?!NOERROR)<span class=\"pl-pds\">\"</span></span> 99.<span class=\"pl-k\">*</span>.gz</pre></div>\n<ul dir=\"auto\">\n<li>In vim, after using something like 'v' to select a range of lines, you can pass the range of lines through commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :'&lt;,' &gt;!sort |column -t\"><pre>❯❯ :<span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;,<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&gt;</span><span class=\"pl-k\">!</span>sort <span class=\"pl-k\">|</span>column -t</pre></div>\n<ul dir=\"auto\">\n<li>Find broken symlinks</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -type l | (while read FN ; do test -e &quot;$FN&quot; || ls -ld &quot;$FN&quot;; done)\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -type l <span class=\"pl-k\">|</span> (while <span class=\"pl-c1\">read</span> FN <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">test</span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$FN</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span> ls -ld <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$FN</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> done)</pre></div>\n<ul dir=\"auto\">\n<li>Multiple choice music player.  Type the number of the song you want to hear</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ select mus in *.mp3 ; do mpg123 &quot;$mus&quot; ; done\"><pre>❯❯ <span class=\"pl-k\">select</span> <span class=\"pl-smi\">mus</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.mp3 <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mpg123 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$mus</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>See <a href=\"http://t.co/CxXfZILQE7\" rel=\"nofollow\">http://t.co/CxXfZILQE7</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(( ( $( date -d '2031-06-28' +%s ) - $( date +%s ) ) / 86400 )) days until Tau day\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> ( $( date <span class=\"pl-k\">-</span>d '<span class=\"pl-c1\">2031</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">06</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">28</span>' <span class=\"pl-k\">+%</span>s ) <span class=\"pl-k\">-</span> $( date <span class=\"pl-k\">+%</span>s ) ) <span class=\"pl-k\">/</span> <span class=\"pl-c1\">86400</span> <span class=\"pl-pds\">))</span></span> days <span class=\"pl-k\">until</span> Tau day</pre></div>\n<ul dir=\"auto\">\n<li>Happy Pi Day! (Run at 9:26:53am of course or just use date -d '2015-03-14 9:26:53.589793238')</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date +%-m.%-d%y%-H%-M%-S%-N\"><pre>❯❯ date +%-m.%-d%y%-H%-M%-S%-N</pre></div>\n<ul dir=\"auto\">\n<li>How many Friday the 13ths are there this year</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;%d\\\\n&quot; {1..12} | xargs -n1 -I{} date -d &quot;2015-{}-13&quot; | grep ^Fri\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> {1..12} <span class=\"pl-k\">|</span> xargs -n1 -I{} date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2015-{}-13<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> grep ^Fri</pre></div>\n<ul dir=\"auto\">\n<li>Try catching a file that shows up temporarily in a queue</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true ; do cp -va *.dat /tmp/saveit/ 2 &gt; /dev/null ; sleep 0.05 ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> cp -va <span class=\"pl-k\">*</span>.dat /tmp/saveit/ 2 <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">;</span> sleep 0.05 <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>How much space files older than the present year are using. %j=Julian day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -mtime +$(date +%j) -ls | awk '{sum+=$7} END {print sum}'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -mtime +<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%j<span class=\"pl-pds\">)</span></span> -ls <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{sum+=$7} END {print sum}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Remove data dirs with specific length names older than 7 days</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /data -maxdepth 1 -type d -mtime +7 -name '20??????' -exec rm -vf {} +\"><pre>❯❯ find /data -maxdepth 1 -type d -mtime +7 -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>20??????<span class=\"pl-pds\">'</span></span> -exec rm -vf {} +</pre></div>\n<ul dir=\"auto\">\n<li><em>facepalms</em></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rmdir mkdir\"><pre>❯❯ rmdir mkdir</pre></div>\n<ul dir=\"auto\">\n<li>First 80GB of sda to remote host w/ progress</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dd if=/dev/sda bs=1G count=80 |pv -s80G |pbzip2 -c |ssh user@remote 'cat &gt; /tmp/sda-80GB.bz2'\"><pre>❯❯ dd if=/dev/sda bs=1G count=80 <span class=\"pl-k\">|</span>pv -s80G <span class=\"pl-k\">|</span>pbzip2 -c <span class=\"pl-k\">|</span>ssh user@remote <span class=\"pl-s\"><span class=\"pl-pds\">'</span>cat &gt; /tmp/sda-80GB.bz2<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>A rainbow in your shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 231 -1 16)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 231 -1 16<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Another fun video trick. Mirror right side of video to left</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer --vf=geq='p(X\\\\,Y)*gt(W/2\\\\,X)+p(W-1-X\\\\,Y)*lt(W/2-1\\\\,X)' tv://\"><pre>❯❯ mplayer --vf=geq=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>p(X\\\\,Y)*gt(W/2\\\\,X)+p(W-1-X\\\\,Y)*lt(W/2-1\\\\,X)<span class=\"pl-pds\">'</span></span> tv://</pre></div>\n<ul dir=\"auto\">\n<li>Alternate dimension with your webcam. Kids love this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer --vf=geq='128+(p(X\\\\,Y)-128)*8' tv://\"><pre>❯❯ mplayer --vf=geq=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>128+(p(X\\\\,Y)-128)*8<span class=\"pl-pds\">'</span></span> tv://</pre></div>\n<ul dir=\"auto\">\n<li>Generate a random ordered list of 20 numbers. For example to determine order of presentation</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 20 | shuf\"><pre>❯❯ seq 20 <span class=\"pl-k\">|</span> shuf</pre></div>\n<ul dir=\"auto\">\n<li>[01].[01].[01]</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -crop 150x750+100+150 dress.jpg txt: | grep &quot;black|\"><pre>❯❯ convert -crop 150x750+100+150 dress.jpg txt: <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>black|</span></pre></div>\n<ul dir=\"auto\">\n<li>Listen to permissions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ n=(C D E F G A B &quot;C4 &quot;);stat -c%a *|while read -n1 k;do x=${n[$k]};sleep .2;play -qn synth pl ${x}3 fade 0 1 &amp; done\"><pre>❯❯ n=(C D E F G A B <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C4 <span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">;</span>stat -c%a <span class=\"pl-k\">*</span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -n1 k<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> x=<span class=\"pl-smi\">${n[$k]}</span><span class=\"pl-k\">;</span>sleep .2<span class=\"pl-k\">;</span>play -qn synth pl <span class=\"pl-smi\">${x}</span>3 fade 0 1 <span class=\"pl-k\">&amp;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Anyone else seeing this https://: problem?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -I https://archive\\\\.org/index.php | grep Location\"><pre>❯❯ curl -I https://archive<span class=\"pl-cce\">\\\\</span>.org/index.php <span class=\"pl-k\">|</span> grep Location</pre></div>\n<ul dir=\"auto\">\n<li>paste chk</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pmd5(){ xsel -p|md5sum|cut -d\\' \\' -f1;}; while :;do if [[ &quot;$l&quot; != &quot;$( pmd5 )&quot; ]];then xsel -p;echo;l=$( pmd5 );fi ;sleep .25;done\"><pre>❯❯ <span class=\"pl-en\">pmd5</span>(){ xsel -p<span class=\"pl-k\">|</span>md5sum<span class=\"pl-k\">|</span>cut -d<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span> -f1;}<span class=\"pl-k\">;</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$l</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span> pmd5 <span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]]<span class=\"pl-k\">;</span><span class=\"pl-k\">then</span> xsel -p<span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span><span class=\"pl-k\">;</span>l=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> pmd5 <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">fi</span> <span class=\"pl-k\">;</span>sleep .25<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Never trust your own abilities to come up with a clever way of generating passwords. Swallow your ego and use pwgen instead</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pwgen 12\"><pre>❯❯ pwgen 12</pre></div>\n<ul dir=\"auto\">\n<li>Counts files in the current path by modification month</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -type f -printf '%TY-%Tm\\\\n' | sort | uniq -c\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -type f -printf <span class=\"pl-s\"><span class=\"pl-pds\">'</span>%TY-%Tm\\\\n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>Find logs for auths under hosts dir and list them by last modified time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find hosts -name auth.log -o -name secure.log | xargs ls -ltra\"><pre>❯❯ find hosts -name auth.log -o -name secure.log <span class=\"pl-k\">|</span> xargs ls -ltra</pre></div>\n<ul dir=\"auto\">\n<li>Do something special number of ssh processes &gt; 20</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while [[ $(pgrep -c -f &quot;ssh &quot; ) -le 20 ]]; do sleep 10; done; echo &quot;There is a problem\"><pre>❯❯ <span class=\"pl-k\">while</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>pgrep -c -f <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ssh <span class=\"pl-pds\">\"</span></span> <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">-le</span> 20 ]]<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep 10<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>There is a problem</span></pre></div>\n<ul dir=\"auto\">\n<li>E-mail reformat dates</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -r \\'for &lt;me@host &gt;\\' . |awk -F\\\\; \\'{print $2}\\'|while read -r date; do date -d &quot;$date&quot; +%Y-%m-%d ; done &gt; dates-Ymd\"><pre>❯❯ grep -r <span class=\"pl-cce\">\\'</span>for <span class=\"pl-k\">&lt;</span>me@host <span class=\"pl-k\">&gt;</span><span class=\"pl-cce\">\\'</span> <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span>awk -F<span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span> <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$2</span>}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r date<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$date</span><span class=\"pl-pds\">\"</span></span> +%Y-%m-%d <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">&gt;</span> dates-Ymd</pre></div>\n<ul dir=\"auto\">\n<li>climagic video: Use comment characters in commands to add meta info to commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/k9WE4wZycs\"><pre>❯❯ http://t.co/k9WE4wZycs</pre></div>\n<ul dir=\"auto\">\n<li>Mount set of partitions for recovery</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {1..12}; do mkdir /media/sdd$i &amp;&amp;mount -o ro /{dev,media}/sdd$i ||rmdir /media/sdd$i ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {1..12}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mkdir /media/sdd<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">&amp;&amp;</span>mount -o ro /{dev,media}/sdd<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">||</span>rmdir /media/sdd<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Using GNU date you can specify a Unix epoch date with an @ in front and return the local time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d @1424242424\"><pre>❯❯ date -d @1424242424</pre></div>\n<ul dir=\"auto\">\n<li>Put this in your .bashrc so that on login it will list your tmux sessions. If none, don't show the error</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tmux list-sessions 2 &gt; /dev/null\"><pre>❯❯ tmux list-sessions 2 <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>in .profile, lists screen sessions on login /c...</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @schtobia: if [ -x `which screen` ]; then screen -q -ls; [ $? -ge 10 ] &amp;&amp; screen -ls; fi\"><pre>❯❯ RT @schtobia: <span class=\"pl-k\">if</span> [ <span class=\"pl-k\">-x</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span>which screen<span class=\"pl-pds\">`</span></span> ]<span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span> screen -q -ls<span class=\"pl-k\">;</span> [ <span class=\"pl-smi\">$?</span> <span class=\"pl-k\">-ge</span> 10 ] <span class=\"pl-k\">&amp;&amp;</span> screen -ls<span class=\"pl-k\">;</span> <span class=\"pl-k\">fi</span></pre></div>\n<ul dir=\"auto\">\n<li>Print out the first character of <math-renderer class=\"js-inline-math\" style=\"display: inline\" data-static-url=\"https://github.githubassets.com/static\" data-run-id=\"1b7715e0a1091f0a1a92b9c5ff6f4a91\">$val. The syntax is $</math-renderer>{variable:start:length}. Omitting length value gives rest of string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo ${val:0:1}\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${val<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span>1}</span></pre></div>\n<ul dir=\"auto\">\n<li>1} -eq 1 ] &amp;&amp; arg=\"Lit_$1\" ||arg=$1; curl -d '' \"<a href=\"http://roku%5C%5C.yournetwork:8060/keypress/$arg\" rel=\"nofollow\">http://roku\\\\.yournetwork:8060/keypress/$arg</a>\"; }</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ roku(){ [ ${\"><pre>❯❯ <span class=\"pl-en\">roku</span>(){ [ <span class=\"pl-smi\">${</span></pre></div>\n<ul dir=\"auto\">\n<li>climagic. Its a great place for discussing command line tricks</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ There is also an official IRC channel for climagic on http://t.co/8Ef508iK89\"><pre>❯❯ There is also an official IRC channel <span class=\"pl-k\">for</span> climagic on http://t.co/8Ef508iK89</pre></div>\n<ul dir=\"auto\">\n<li>Columns with data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {1..161}; do printf &quot;$i &quot;; awk -F, \\'NR &gt;1{print $\\'$i\\'}\\' weather.csv |uniq -c |wc -l; done |awk \\'$2 &gt;1{print $1}\\'\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {1..161}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> awk -F, <span class=\"pl-cce\">\\'</span>NR <span class=\"pl-k\">&gt;</span>1{print $<span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$i</span><span class=\"pl-cce\">\\'</span>}<span class=\"pl-cce\">\\'</span> weather.csv <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span>wc -l<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$2</span> <span class=\"pl-k\">&gt;</span>1{print <span class=\"pl-smi\">$1</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Make a function to shorten this commonly used command line pattern &amp; allow for options for final sort</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sus(){ sort | uniq -c | sort $@; }\"><pre>❯❯ <span class=\"pl-en\">sus</span>(){ sort <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> sort <span class=\"pl-smi\">$@</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>GNU grep supports perl regex expressions. This gives only the PID on CRON lines in syslog</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -o -P &quot;(?&lt;=CRON\\\\[)\\\\d+&quot; /var/log/syslog\"><pre>❯❯ grep -o -P <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(?&lt;=CRON<span class=\"pl-cce\">\\\\</span>[)<span class=\"pl-cce\">\\\\</span>d+<span class=\"pl-pds\">\"</span></span> /var/log/syslog</pre></div>\n<ul dir=\"auto\">\n<li>\"Last\" Received: line of each msg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find .spam/ -type f -exec sed -n -e \\'/^Received:/{h}\\' -e \\'/^$/{x;p;q}\\' {} \\\\; &gt; initial-received\"><pre>❯❯ find .spam/ -type f -exec sed -n -e <span class=\"pl-cce\">\\'</span>/^Received:/{h}<span class=\"pl-cce\">\\'</span> -e <span class=\"pl-cce\">\\'</span>/^$/{x<span class=\"pl-k\">;</span>p<span class=\"pl-k\">;</span>q}<span class=\"pl-cce\">\\'</span> {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">&gt;</span> initial-received</pre></div>\n<ul dir=\"auto\">\n<li>Quick access to the ASCII character table via the ascii program or the man page if you don't have the prog. @mshindal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii || man ascii\"><pre>❯❯ ascii <span class=\"pl-k\">||</span> man ascii</pre></div>\n<ul dir=\"auto\">\n<li>Find incomplete years in data</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F, '/USC00120784/{print substr($6,0,4)}' weather.csv |uniq -c |awk '$2%4==0&amp;&amp;$1&lt;366||$2%4!=0&amp;&amp;$1&lt;365'\"><pre>❯❯ awk -F, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/USC00120784/{print substr($6,0,4)}<span class=\"pl-pds\">'</span></span> weather.csv <span class=\"pl-k\">|</span>uniq -c <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$2%4==0&amp;&amp;$1&lt;366||$2%4!=0&amp;&amp;$1&lt;365<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Mount the root filesystem to an alternate path in Linux to access \"hidden\" files underneath logical mountpoints</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mount -o bind / /mnt/root\"><pre>❯❯ mount -o <span class=\"pl-c1\">bind</span> / /mnt/root</pre></div>\n<ul dir=\"auto\">\n<li>Run this if you want to send your children off in the world to be on their own. I'm talking about processes of course</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ disown -a\"><pre>❯❯ <span class=\"pl-c1\">disown</span> -a</pre></div>\n<ul dir=\"auto\">\n<li>Get a random line from a file. sort -R will also do this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shuf -n1 quotes.txt\"><pre>❯❯ shuf -n1 quotes.txt</pre></div>\n<ul dir=\"auto\">\n<li>In vim, when you want to paste in text, this will prevent autoindent/autosyntax doesn't interfere. :set nopaste to turn off</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set paste\"><pre>❯❯ :set paste</pre></div>\n<ul dir=\"auto\">\n<li>Linux full ps output, sorting process table by memory usage in descending order (- before rss)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxw --sort -rss\"><pre>❯❯ ps auxw --sort -rss</pre></div>\n<ul dir=\"auto\">\n<li>Show the process in a tree format, search for gzip and show 8 lines of pre-match context to see its family</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxwwf | grep -B8 &quot;[g]zip\"><pre>❯❯ ps auxwwf <span class=\"pl-k\">|</span> grep -B8 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[g]zip</span></pre></div>\n<ul dir=\"auto\">\n<li>Play music for 60 minutes and then shutdown. Like sleep on alarm clock</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo shutdown -h 60 &amp; mpg123 ambientmusic/*.mp3\"><pre>❯❯ sudo shutdown -h 60 <span class=\"pl-k\">&amp;</span> mpg123 ambientmusic/<span class=\"pl-k\">*</span>.mp3</pre></div>\n<ul dir=\"auto\">\n<li>In Linux, find running dd processes and send them a signal to print out their progress. For @Erstejahre</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ kill -USR1 $( pidof dd )\"><pre>❯❯ <span class=\"pl-c1\">kill</span> -USR1 <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> pidof dd <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Happy Groundhog Day!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [ -f /etc/shadow ]&amp;&amp;while :;do N=$(($RANDOM%$(tput cols)));for i in $(seq 1 $N);do echo -n &quot; &quot;;done;echo \\\\*;done\"><pre>❯❯ [ <span class=\"pl-k\">-f</span> /etc/shadow ]<span class=\"pl-k\">&amp;&amp;</span><span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> N=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span>$(tput cols<span class=\"pl-pds\">))</span></span>)<span class=\"pl-k\">;</span><span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 1 <span class=\"pl-smi\">$N</span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>climagic video: The epic demo of how I watched Superbowl 46 using the command line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/dL1fKj9Npw\"><pre>❯❯ http://t.co/dL1fKj9Npw</pre></div>\n<ul dir=\"auto\">\n<li>On Debian, find out which non-installed package provides a file. Need to install apt-file package first</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ apt-file search /usr/bin/apxs2\"><pre>❯❯ apt-file search /usr/bin/apxs2</pre></div>\n<ul dir=\"auto\">\n<li>When adding \"bar\" to project, which files contain foo but not bar? Thx @CoolSWEng</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -23 &lt;(grep -rl foo . |sort) &lt;(grep -rl bar . |sort)\"><pre>❯❯ comm -23 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>grep -rl foo <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span>sort<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>grep -rl bar <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span>sort<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show photo filenames where no flash was used. Req. Imagemagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format &quot;%f F:%[EXIF:Flash]\\\\n&quot; *.jpg | egrep &quot; F:(0|16|24|32)$\"><pre>❯❯ identify -format <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%f F:%[EXIF:Flash]<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> F:(0|16|24|32)$</span></pre></div>\n<ul dir=\"auto\">\n<li>Search for something in CWD and below and then order those matching files by time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -lrZ password . | xargs -0 ls -lt\"><pre>❯❯ grep -lrZ password <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> xargs -0 ls -lt</pre></div>\n<ul dir=\"auto\">\n<li>Find eval( lines in PHP files in user's www subdirectory trees</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find /home/*/www -name &quot;*.php&quot; -exec grep --color -H -n \\'eval(\\' {} +\"><pre>❯❯ find /home/<span class=\"pl-k\">*</span>/www -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.php<span class=\"pl-pds\">\"</span></span> -exec grep --color -H -n <span class=\"pl-cce\">\\'</span>eval(<span class=\"pl-cce\">\\'</span> {} +</pre></div>\n<ul dir=\"auto\">\n<li>Listen to the last 20 seconds of a long voicemail that has the contact phone at the end</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play msg0493.WAV trim -20\"><pre>❯❯ play msg0493.WAV trim -20</pre></div>\n<ul dir=\"auto\">\n<li>Today's famous birthdays</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -no-numbering -dump-width $COLUMNS $(date +enwp\\\\.org/%B_%-d)|sed '/Birth/,/Death/!d'|grep \\\\*\"><pre>❯❯ elinks -no-numbering -dump-width <span class=\"pl-smi\">$COLUMNS</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +enwp<span class=\"pl-cce\">\\\\</span>.org/%B_%-d<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">|</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Birth/,/Death/!d<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>grep <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Use brace expansion to copy range of images (IMG_1050.JPG through IMG_1622.JPG) to usb drive</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cp -va IMG_{1050..1622}.JPG /media/usbdrive/\"><pre>❯❯ cp -va IMG_{1050..1622}.JPG /media/usbdrive/</pre></div>\n<ul dir=\"auto\">\n<li>Use rev twice to get around limitation of cut not being able to truncate end of a string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo test | rev | cut -c 2- | rev\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-c1\">test</span> <span class=\"pl-k\">|</span> rev <span class=\"pl-k\">|</span> cut -c 2- <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>Print different parts of two different lines and join them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'/date/{print $4 &quot; &quot; $5} /src_ip/{print $3}\\' alerts.mbox | xargs -n3\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>/date/{print <span class=\"pl-smi\">$4</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$5</span>} /src_ip/{print <span class=\"pl-smi\">$3</span>}<span class=\"pl-cce\">\\'</span> alerts.mbox <span class=\"pl-k\">|</span> xargs -n3</pre></div>\n<ul dir=\"auto\">\n<li>Play pink noise for thirty hours. Thx @hackedy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -t sl - synth 30:00:00 pinknoise band -n 1200 200 tremolo 20 .1 &lt;/dev/zero\"><pre>❯❯ play -t sl - synth 30:00:00 pinknoise band -n 1200 200 tremolo 20 .1 <span class=\"pl-k\">&lt;</span>/dev/zero</pre></div>\n<ul dir=\"auto\">\n<li>Download images in sequence IMG_0001.JPG through IMG_0100.JPG</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl --remote-name http://www.example\\\\.com/images/IMG_[0001-0100].JPG\"><pre>❯❯ curl --remote-name http://www.example<span class=\"pl-cce\">\\\\</span>.com/images/IMG_[0001-0100].JPG</pre></div>\n<ul dir=\"auto\">\n<li>A \"stronger\" version of Ctrl-C. It sends a SIGQUIT, which will kill most programs. Some still trap it. kill -9 is even \"stronger\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Ctrl-\\\\]\"><pre>❯❯ [Ctrl-<span class=\"pl-cce\">\\\\</span>]</pre></div>\n<ul dir=\"auto\">\n<li>Set the search jump target to 10 lines down so that you see 9 previous lines of context on searches within less</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less -j10 /var/log/syslog\"><pre>❯❯ less -j10 /var/log/syslog</pre></div>\n<ul dir=\"auto\">\n<li>Some DNS ASCII ART by @dblockdotorg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dig +short naptr http://t.co/58MsxFQIoD @8.8.8.8 | sort\"><pre>❯❯ dig +short naptr http://t.co/58MsxFQIoD @8.8.8.8 <span class=\"pl-k\">|</span> sort</pre></div>\n<ul dir=\"auto\">\n<li>Find all files larger than 100MB and display their human readable size</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / -size +100M -exec ls -sh {} \\\\;\"><pre>❯❯ find / -size +100M -exec ls -sh {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>2015 is a binary palindrome</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {2048..1024};do b=$(echo &quot;ibase=10;obase=2;$i&quot;|bc);[[ $b == $(rev &lt; $b) ]]&amp;&amp;echo $i $b;done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {2048..1024}<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> b=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>echo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibase=10;obase=2;<span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>bc<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>[[ <span class=\"pl-smi\">$b</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>rev <span class=\"pl-k\">&lt;</span> <span class=\"pl-smi\">$b</span><span class=\"pl-pds\">)</span></span> ]]<span class=\"pl-k\">&amp;&amp;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$i</span> <span class=\"pl-smi\">$b</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Play an ASCII art animation via pv command for speed control</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s climagic\\\\.org/ascii/climagic8000.vt | pv -q -L9600\"><pre>❯❯ curl -s climagic<span class=\"pl-cce\">\\\\</span>.org/ascii/climagic8000.vt <span class=\"pl-k\">|</span> pv -q -L9600</pre></div>\n<ul dir=\"auto\">\n<li>gzip files in the current directory that are more than 60 days old</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -type f -mtime +60 -exec gzip -v9 {} \\\\;\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -type f -mtime +60 -exec gzip -v9 {} <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Pipe into first command available</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ time echo &quot;Happy Birthday Stephen Hawking&quot; | ( Equalizer || espeak || say -v Fred || cat )\"><pre>❯❯ <span class=\"pl-k\">time</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Happy Birthday Stephen Hawking<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> ( Equalizer <span class=\"pl-k\">||</span> espeak <span class=\"pl-k\">||</span> say -v Fred <span class=\"pl-k\">||</span> cat )</pre></div>\n<ul dir=\"auto\">\n<li>anim</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -pointsize 72 label:'01011' -duplicate 50 -virtual-pixel tile -distort SRT '0,0 1,0,%[fx:w*t/n],%[fx:h]' -loop 0 binary.gif\"><pre>❯❯ convert -pointsize 72 label:<span class=\"pl-s\"><span class=\"pl-pds\">'</span>01011<span class=\"pl-pds\">'</span></span> -duplicate 50 -virtual-pixel tile -distort SRT <span class=\"pl-s\"><span class=\"pl-pds\">'</span>0,0 1,0,%[fx:w*t/n],%[fx:h]<span class=\"pl-pds\">'</span></span> -loop 0 binary.gif</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous branch you were in. Thx @shawndumas</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ git checkout -\"><pre>❯❯ git checkout -</pre></div>\n<ul dir=\"auto\">\n<li>Use regex character classes to find 4 letter words that work in ipv6 segs. l=1, o=0, s=5</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -e &quot;^[a-flos]{4}$&quot; /usr/share/dict/words\"><pre>❯❯ egrep -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[a-flos]{4}$<span class=\"pl-pds\">\"</span></span> /usr/share/dict/words</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>print difference between the last and first row in 5th column</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{if (!first){first=$5;}; last=$5;} END {print last-first}' stats.log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{if (!first){first=$5;}; last=$5;} END {print last-first}<span class=\"pl-pds\">'</span></span> stats.log</pre></div>\n<ul dir=\"auto\">\n<li>Use your webcam and mplayer as a mirror with this function</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mirror(){ mplayer -vf mirror -v tv:// -tv device=/dev/video0:driver=v4l2; }\"><pre>❯❯ <span class=\"pl-en\">mirror</span>(){ mplayer -vf mirror -v tv:// -tv device=/dev/video0:driver=v4l2; }</pre></div>\n<ul dir=\"auto\">\n<li>Find the longest line in quotes.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk 'length &gt; max { max=length;maxline=$0 } END { print maxline; }' quotes.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>length &gt; max { max=length;maxline=$0 } END { print maxline; }<span class=\"pl-pds\">'</span></span> quotes.txt</pre></div>\n<ul dir=\"auto\">\n<li>Print the factors of 2015. Happy New Year!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq $((2015/2)) | awk '2015%$0==0'\"><pre>❯❯ seq <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-c1\">2015</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">2</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">|</span> awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>2015%$0==0<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Happy 30th Anniversary Free Software Foundation in 2015. Inspiring video</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/Po0nUSbALT\"><pre>❯❯ https://t.co/Po0nUSbALT</pre></div>\n<ul dir=\"auto\">\n<li>Using +F option or pressing F in less is similar to <code>tail -f filename.log</code> but you can use less's features</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less +F filename.log\"><pre>❯❯ less +F filename.log</pre></div>\n<ul dir=\"auto\">\n<li>Find 10 most freq words in file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cat mybook.txt|tr -s '[:space:]' '\\\\n' |tr '[:upper:]' '[:lower:]'|sort|uniq -c|sort -nr|head -10\"><pre>❯❯ cat mybook.txt<span class=\"pl-k\">|</span>tr -s <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[:space:]<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>\\\\n<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>tr <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[:upper:]<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[:lower:]<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -nr<span class=\"pl-k\">|</span>head -10</pre></div>\n<ul dir=\"auto\">\n<li>Search the file system, but don't descend into the /sys or /proc directories</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find / \\\\( -path /proc -o -path /sys \\\\) -prune -o -print\"><pre>❯❯ find / <span class=\"pl-cce\">\\\\</span>( -path /proc -o -path /sys <span class=\"pl-cce\">\\\\</span>) -prune -o -print</pre></div>\n<ul dir=\"auto\">\n<li>5 second per screensaver visual preview</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in /usr/lib/xscreensaver/i* ; do echo &quot;This one is $i&quot; ; $i &amp; sleep 5 ; kill %% ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> /usr/lib/xscreensaver/i<span class=\"pl-k\">*</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>This one is <span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-smi\">$i</span> <span class=\"pl-k\">&amp;</span> sleep 5 <span class=\"pl-k\">;</span> <span class=\"pl-c1\">kill</span> %% <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Snow in your terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/m7Sm2V34YW\"><pre>❯❯ http://t.co/m7Sm2V34YW</pre></div>\n<ul dir=\"auto\">\n<li>Make dated directories for next 100 days. Use date -v+{}d on BSD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ seq 100 | xargs -n1 -I{} date -d &quot;+{} days&quot; +%Y%m%d | xargs mkdir\"><pre>❯❯ seq 100 <span class=\"pl-k\">|</span> xargs -n1 -I{} date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+{} days<span class=\"pl-pds\">\"</span></span> +%Y%m%d <span class=\"pl-k\">|</span> xargs mkdir</pre></div>\n<ul dir=\"auto\">\n<li>Thx @asociale</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ googlesay(){ curl -A RG translate\\\\.google\\\\.com/translate_tts -d &quot;tl=en&amp;q=$@&quot; |mpg123 -; }; googlesay &quot;I\\'m tired of talking.\"><pre>❯❯ <span class=\"pl-en\">googlesay</span>(){ curl -A RG translate<span class=\"pl-cce\">\\\\</span>.google<span class=\"pl-cce\">\\\\</span>.com/translate_tts -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tl=en&amp;q=<span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>mpg123 -; }<span class=\"pl-k\">;</span> googlesay <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I\\'m tired of talking.</span></pre></div>\n<ul dir=\"auto\">\n<li>JB</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl climagic\\\\.org/txt/jb.txt|while read -r c n l;do printf &quot;\\\\e[1;${c}m%${COLUMNS}s\\\\e[0m\\\\n&quot; &quot; &quot;;play -q -n synth pl $n trim 0 $l;done\"><pre>❯❯ curl climagic<span class=\"pl-cce\">\\\\</span>.org/txt/jb.txt<span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r c n l<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[1;<span class=\"pl-smi\">${c}</span>m%<span class=\"pl-smi\">${COLUMNS}</span>s<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>play -q -n synth pl <span class=\"pl-smi\">$n</span> trim 0 <span class=\"pl-smi\">$l</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Space usage of directories only (This was the first climagic command posted from December 15th, 2009)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh */\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>Birthday of the late Mike Muuss, creator of ping &amp; default routes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ping -c$[2000-1958] $(ip route |awk '/default/{print $3}')\"><pre>❯❯ ping -c$[2000-1958] <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ip route <span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/default/{print $3}<span class=\"pl-pds\">'</span></span><span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Check for Poodle vuln</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ nmap --script ssl-enum-ciphers -p 443 twitter\\\\.com |grep &quot;SSLv3: No supported&quot; ||echo &quot;Site vulnerable to poodle\"><pre>❯❯ nmap --script ssl-enum-ciphers -p 443 twitter<span class=\"pl-cce\">\\\\</span>.com <span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SSLv3: No supported<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span>echo <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Site vulnerable to poodle</span></pre></div>\n<ul dir=\"auto\">\n<li>The correct image in a lossless format</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format %k http://t.co/cDn4PW1TEO\"><pre>❯❯ identify -format %k http://t.co/cDn4PW1TEO</pre></div>\n<ul dir=\"auto\">\n<li>Count unique colors in an image. Not 1,000,000 as advertised. Thx @lorddrachenblut</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ identify -format %k http://t.co/Aqy4qFfay7\"><pre>❯❯ identify -format %k http://t.co/Aqy4qFfay7</pre></div>\n<ul dir=\"auto\">\n<li>Dec 10 = Oct 12 They should use October 12th for Ada Lovelace day</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;ibase=10;obase=8;10\\\\n&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibase=10;obase=8;10<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Log start and ending timestamps of a long running job</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date +&quot;Start: %c&quot; &gt; timestamps ; runsomething ; date +&quot;Ended: %c&quot; &gt; &gt; timestamps\"><pre>❯❯ date +<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Start: %c<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> timestamps <span class=\"pl-k\">;</span> runsomething <span class=\"pl-k\">;</span> date +<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Ended: %c<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> timestamps</pre></div>\n<ul dir=\"auto\">\n<li>Overhead projectors are dangerous IT equipment. They should put warnings on them</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Username: 7p3VMO01RzeS\"><pre>❯❯ Username: 7p3VMO01RzeS</pre></div>\n<ul dir=\"auto\">\n<li>More cool visuals you can make in your terminal with your cursor</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/ammutuorZG\"><pre>❯❯ http://t.co/ammutuorZG</pre></div>\n<ul dir=\"auto\">\n<li>1000 factorial using brace expansion. Remember to backslash * or else it will act as wildcard</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo {1000..2}\\\\* 1 | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> {1000..2}<span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span> 1 <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Sometimes I think the purpose of this directory is to serve as advertising to the rest of the Unix world</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rm -fr __MACOSX\"><pre>❯❯ rm -fr __MACOSX</pre></div>\n<ul dir=\"auto\">\n<li>@CarlaSchroder has written a nice article inspired by some recent \"Fun Friday\" climagic tweets</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/TOiGQzwqZm\"><pre>❯❯ http://t.co/TOiGQzwqZm</pre></div>\n<ul dir=\"auto\">\n<li>New CLIMAGIC video: Joining files together using the join command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/9vPDDXtmPm\"><pre>❯❯ https://t.co/9vPDDXtmPm</pre></div>\n<ul dir=\"auto\">\n<li>This is an easy way to join a file into one line if you're in a hurry. Be careful with really long data though</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xargs &lt; file.txt\"><pre>❯❯ xargs <span class=\"pl-k\">&lt;</span> file.txt</pre></div>\n<ul dir=\"auto\">\n<li>For apache, this may be a good sort command to pass the previous command through</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ | sort -t' ' -k4.5,4.7M -k4.2,4.3n -k4.14,4.21\"><pre>❯❯ <span class=\"pl-k\">|</span> sort -t<span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> -k4.5,4.7M -k4.2,4.3n -k4.14,4.21</pre></div>\n<ul dir=\"auto\">\n<li>Shellshock attempts</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . \\\\( -name \\'*-access_log.1\\' -o -name \\'*-access_log\\' \\\\) -execdir grep --color=always -HE \\'\\\\(.*\\\\).*\\\\{.*\\\\}.*&quot;\\' {} +\"><pre>❯❯ find <span class=\"pl-c1\">.</span> <span class=\"pl-cce\">\\\\</span>( -name <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">*</span>-access_log.1<span class=\"pl-cce\">\\'</span> -o -name <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">*</span>-access_log<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\\\</span>) -execdir grep --color=always -HE <span class=\"pl-cce\">\\'\\\\</span>(.<span class=\"pl-k\">*</span><span class=\"pl-cce\">\\\\</span>).<span class=\"pl-k\">*</span><span class=\"pl-cce\">\\\\</span>{.<span class=\"pl-k\">*</span><span class=\"pl-cce\">\\\\</span>}.<span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\' {} +</span></pre></div>\n<ul dir=\"auto\">\n<li>Learn about the power of the lsof command.  Thx @INDIVIDUALIT</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/yh82QeqmDD\"><pre>❯❯ http://t.co/yh82QeqmDD</pre></div>\n<ul dir=\"auto\">\n<li>Find out the name of the Debian package that contains the program VirtualBox (when you execute it w/o path)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -S $( which VirtualBox )\"><pre>❯❯ dpkg -S <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which VirtualBox <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>In vim, depending on whether your terminal background is dark or light, setting this will help with color syntax</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set background=dark\"><pre>❯❯ :set background=dark</pre></div>\n<ul dir=\"auto\">\n<li>If you have a big file to copy, use pv instead of cp. pv gives you progress and speed. Thx @i4AK</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pv /oldfolder/file &gt; /newfolder/file\"><pre>❯❯ pv /oldfolder/file <span class=\"pl-k\">&gt;</span> /newfolder/file</pre></div>\n<ul dir=\"auto\">\n<li>upgrades</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Do you want to also install these other packages that will break everything else? [Y/y]\"><pre>❯❯ Do you want to also install these other packages that will <span class=\"pl-c1\">break</span> everything else<span class=\"pl-k\">?</span> [Y/y]</pre></div>\n<ul dir=\"auto\">\n<li>Handy command to help you decide if you should panic by @jschauma. Thx IgorBrigadir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ host -t txt http://t.co/6OGgztZg93\"><pre>❯❯ host -t txt http://t.co/6OGgztZg93</pre></div>\n<ul dir=\"auto\">\n<li>New CLIMAGIC video: The Star Wars Reverse DNS command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/2pOHWasKwn\"><pre>❯❯ https://t.co/2pOHWasKwn</pre></div>\n<ul dir=\"auto\">\n<li>Show when temp changes &gt; 1. (sqrt(n*n) is equivalent to absolute value)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '{n=$1-lc;if (sqrt(n*n) &gt;1) { print; lc=$1; }}' temp.log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{n=$1-lc;if (sqrt(n*n) &gt;1) { print; lc=$1; }}<span class=\"pl-pds\">'</span></span> temp.log</pre></div>\n<ul dir=\"auto\">\n<li>Print out packages with 3.11.0 in them and expand the first column (name) so its fully readable</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -l '*3.11.0*' | cut -c1-$COLUMNS\"><pre>❯❯ dpkg -l <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*3.11.0*<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> cut -c1-<span class=\"pl-smi\">$COLUMNS</span></pre></div>\n<ul dir=\"auto\">\n<li>Calculate how many days old you are. Uses GNU syntax</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(( $(( $( date +%s ) - $( date -d &quot;1989-11-29&quot; +%s ) )) / 86400 ))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span> $(( $( date <span class=\"pl-k\">+%</span>s ) <span class=\"pl-k\">-</span> $( date <span class=\"pl-k\">-</span>d \"<span class=\"pl-c1\">1989</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">11</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">29</span>\" <span class=\"pl-k\">+%</span>s ) <span class=\"pl-pds\">))</span></span> / 86400 ))</pre></div>\n<ul dir=\"auto\">\n<li>Star Wars Episode IV in Reverse DNS</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ( seq 1 8 200 ; seq 6 8 200 ) | sort -n | xargs -I{} -n 1 dig +short -x 206.214.251.{}\"><pre>❯❯ ( seq 1 8 200 <span class=\"pl-k\">;</span> seq 6 8 200 ) <span class=\"pl-k\">|</span> sort -n <span class=\"pl-k\">|</span> xargs -I{} -n 1 dig +short -x 206.214.251.{}</pre></div>\n<ul dir=\"auto\">\n<li>Generate 0 through 255 directories with 0 through 255 subdirectories inside each in one command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mkdir -p {0..255}/{0..255}\"><pre>❯❯ mkdir -p {0..255}/{0..255}</pre></div>\n<ul dir=\"auto\">\n<li>Emoticon prompt for BASH shows return status as emoticon</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ PS1=\\':$( [ $? == 0 ] &amp;&amp; echo &quot;) &quot; || echo &quot;( &quot; )\\'\"><pre>❯❯ PS1=<span class=\"pl-cce\">\\'</span>:<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> [ <span class=\"pl-smi\">$?</span> <span class=\"pl-k\">==</span> 0 ] <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>) <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>( <span class=\"pl-pds\">\"</span></span> <span class=\"pl-pds\">)</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>] and, presto!, all comments are gone. Thx @m_strehl</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Skimming through config files got so much better right now: In less(1) enter &amp;^[^\"><pre>❯❯ Skimming through config files got so much better right now: In less(1) enter <span class=\"pl-k\">&amp;</span>^[^</pre></div>\n<ul dir=\"auto\">\n<li>xkcd</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ So hopefully you\\'ll be able to defuse the &quot;tar bomb&quot; if you ever are in that situation. Sorry BSD users but you are goners. ;-)\"><pre>❯❯ So hopefully you<span class=\"pl-cce\">\\'</span>ll be able to defuse the <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tar bomb<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">if</span> you ever are <span class=\"pl-k\">in</span> that situation. Sorry BSD users but you are goners. <span class=\"pl-k\">;</span>-)</pre></div>\n<ul dir=\"auto\">\n<li>If you didn't know, GNU tar now auto-detects the compression algorithm you need. No option required</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tar xvf archive.tar.bz2\"><pre>❯❯ tar xvf archive.tar.bz2</pre></div>\n<ul dir=\"auto\">\n<li>Function to draw a dividing line in a terminal. Thx @Fluffkin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ separator(){ printf '%*s\\\\n' $(tput cols) '' | tr ' ' -; }\"><pre>❯❯ <span class=\"pl-en\">separator</span>(){ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>%*s\\\\n<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tput cols<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> tr <span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> -; }</pre></div>\n<ul dir=\"auto\">\n<li>Fix a typo in the previous command. :-(</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ !!:s/right/rite/\"><pre>❯❯ <span class=\"pl-k\">!!</span>:s/right/rite/</pre></div>\n<ul dir=\"auto\">\n<li>This used to be a right of passage for most Linux users. Today few recognize it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ make config &amp;&amp; make dep &amp;&amp; make zImage\"><pre>❯❯ make config <span class=\"pl-k\">&amp;&amp;</span> make dep <span class=\"pl-k\">&amp;&amp;</span> make zImage</pre></div>\n<ul dir=\"auto\">\n<li>I have to admit, this spam subject did make me run \"look f | egrep ^f..k$\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Subject: F**k binary\"><pre>❯❯ Subject: F<span class=\"pl-k\">**</span>k binary</pre></div>\n<ul dir=\"auto\">\n<li>Merge files together based on fields. -o specifies output format</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ join -o 1.1,2.2,1.3,1.4,1.5,1.6,1.7 -1 1 -2 1 -t: passwd shadow\"><pre>❯❯ join -o 1.1,2.2,1.3,1.4,1.5,1.6,1.7 -1 1 -2 1 -t: passwd shadow</pre></div>\n<ul dir=\"auto\">\n<li>jpegtran also rotates images, but without quality loss like IM convert. Thx @kaihendry</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ jpegtran -rotate 90 -outfile rot90.jpg image.jpg\"><pre>❯❯ jpegtran -rotate 90 -outfile rot90.jpg image.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Run sudo on the last command in your history. be careful because this can bite you.  &amp; [Ctrl-a] is just as fast</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo !!\"><pre>❯❯ sudo <span class=\"pl-k\">!!</span></pre></div>\n<ul dir=\"auto\">\n<li>Alert me when ping desktop fails. Quick diagnostics</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while ping -c 1 desktop; do sleep 10; done; xmessage &quot;Desktop unreachable at $(date)\"><pre>❯❯ <span class=\"pl-k\">while</span> ping -c 1 desktop<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep 10<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> xmessage <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Desktop unreachable at <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date<span class=\"pl-pds\">)</span></span></span></pre></div>\n<ul dir=\"auto\">\n<li>whoops</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Hostnames, they are important.\"><pre>❯❯ Hostnames, they are important.</pre></div>\n<ul dir=\"auto\">\n<li>Add header by using \"pee\"(included in moreutils)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @Heliac1999: df -Ph | pee &quot;head -n 1&quot; &quot;tail -n+2 | sort -k5nr\"><pre>❯❯ RT @Heliac1999: df -Ph <span class=\"pl-k\">|</span> pee <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>head -n 1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tail -n+2 | sort -k5nr</span></pre></div>\n<ul dir=\"auto\">\n<li>Start on the second line (-n+2) of output and sort by 5th column numerically descending. Thx @chenghlee</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -Ph | tail -n+2 | sort -k5nr\"><pre>❯❯ df -Ph <span class=\"pl-k\">|</span> tail -n+2 <span class=\"pl-k\">|</span> sort -k5nr</pre></div>\n<ul dir=\"auto\">\n<li>Show the processes of user 'someuser' in long form. Thx @clodoco</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps wu -U someuser\"><pre>❯❯ ps wu -U someuser</pre></div>\n<ul dir=\"auto\">\n<li>Organize files by month modified</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -printf &quot;%TB %f\\\\n&quot; | while read -r month file ; do mv -v &quot;$file&quot; $month/ ; done\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%TB %f<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> -r month file <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mv -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$file</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$month</span>/ <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>su tux -c xeyes\\nX11 ... wrong authentication.\\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @mvidner:\"><pre>❯❯ RT @mvidner:</pre></div>\n<ul dir=\"auto\">\n<li>ShowMeTheText</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Website slow? Try using elinks.\"><pre>❯❯ Website slow<span class=\"pl-k\">?</span> Try using elinks.</pre></div>\n<ul dir=\"auto\">\n<li>You can use the strings command on binary data to see the readable portions of it. I use this all the time</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ strings imagefile.jpg\"><pre>❯❯ strings imagefile.jpg</pre></div>\n<ul dir=\"auto\">\n<li>Pandora music client for the command line. And like many CLI clients, it has more control, features and less bloat</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pianobar\"><pre>❯❯ pianobar</pre></div>\n<ul dir=\"auto\">\n<li>CLIMagic variety show</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/6l8YD8d7BN\"><pre>❯❯ http://t.co/6l8YD8d7BN</pre></div>\n<ul dir=\"auto\">\n<li>Quick ref alias</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias what_are_those_damn_conditional_expressions=&quot;man bash | sed -n \\'/^CONDITIONAL EXPRESSIONS/,/^SIMPLE COMMAND/p\\'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> what_are_those_damn_conditional_expressions=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>man bash | sed -n \\'/^CONDITIONAL EXPRESSIONS/,/^SIMPLE COMMAND/p\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Just a quick and dirty way to list interface names and just their TX/RX byte lines</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ifconfig | grep -oE -e &quot;^[^\\\\ ]+&quot; -e &quot;.*bytes.*\"><pre>❯❯ ifconfig <span class=\"pl-k\">|</span> grep -oE -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[^<span class=\"pl-cce\">\\\\</span> ]+<span class=\"pl-pds\">\"</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.*bytes.*</span></pre></div>\n<ul dir=\"auto\">\n<li>If you are in a directory path containing symlinks, this will put you into the physical directory path that the symlinks point to</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -P .\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -P <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>Auto mouse scroll up in X for 30 seconds. Helps with <a href=\"http://t.co/s52TZ2T9Lr\" rel=\"nofollow\">http://t.co/s52TZ2T9Lr</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5; xdotool click --repeat 1500 --delay 20 4\"><pre>❯❯ sleep 5<span class=\"pl-k\">;</span> xdotool click --repeat 1500 --delay 20 4</pre></div>\n<ul dir=\"auto\">\n<li>In case you didn't know, pipe output to less so you can limit output to a page at a time. -S will prevent wrapped lines</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l | less -S\"><pre>❯❯ ls -l <span class=\"pl-k\">|</span> less -S</pre></div>\n<ul dir=\"auto\">\n<li>Print \"columns\" 5 and 11 through the end of line. Throw the rest away</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -ls | awk \\'{$1=$2=$3=$4=$6=$7=$8=$9=$10=&quot;&quot;; print $0}\\'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -ls <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{<span class=\"pl-smi\">$1</span>=<span class=\"pl-smi\">$2</span>=<span class=\"pl-smi\">$3</span>=<span class=\"pl-smi\">$4</span>=<span class=\"pl-smi\">$6</span>=<span class=\"pl-smi\">$7</span>=<span class=\"pl-smi\">$8</span>=<span class=\"pl-smi\">$9</span>=<span class=\"pl-smi\">$1</span>0=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> print <span class=\"pl-smi\">$0</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>If you use mutt, this can be a useful command to pipe an e-mail into to check for malicious domains in URLs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -o https?://[^/]*/\"><pre>❯❯ egrep -o https<span class=\"pl-k\">?</span>://[^/]<span class=\"pl-k\">*</span>/</pre></div>\n<ul dir=\"auto\">\n<li>reptyr can be used to reattach a program on another tty to the current tty so you can transfer it into screen/tmux. Thx @d3m0n35</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ reptyr\"><pre>❯❯ reptyr</pre></div>\n<ul dir=\"auto\">\n<li>Using a trap, increment $a by 1 through a USR1 signal. Then do kill -USR1 PIDOFBASH to do it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ trap 'a=$((++a)); echo a is now $a' SIGUSR1\"><pre>❯❯ <span class=\"pl-c1\">trap</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>a=$((++a)); echo a is now $a<span class=\"pl-pds\">'</span></span> SIGUSR1</pre></div>\n<ul dir=\"auto\">\n<li>You started a program, but now want it to notify you when its done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;ctrl-z &gt; bg ; wait %1 ; echo &quot;done&quot; | mail -s &quot;done&quot; you@example.com\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>ctrl-z <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">bg</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">wait</span> %1 <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>done<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> mail -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>done<span class=\"pl-pds\">\"</span></span> you@example.com</pre></div>\n<ul dir=\"auto\">\n<li>A logical &amp;&amp; after sleep gives a chance to \"Ctrl-C\" out w/o it running the other command if you \"chicken out\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 1m &amp;&amp; shutdown -h 0\"><pre>❯❯ sleep 1m <span class=\"pl-k\">&amp;&amp;</span> shutdown -h 0</pre></div>\n<ul dir=\"auto\">\n<li>By @stackpivot</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ perl -e 'use bytes; for($t=0;;$t++){ print chr($t*(($t &gt; &gt;11|$t &gt; &gt;23)&amp;53&amp;$t &gt; &gt;3)); }'  |play -t raw -b8 -r8k -e un -\"><pre>❯❯ perl -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>use bytes; for($t=0;;$t++){ print chr($t*(($t &gt; &gt;11|$t &gt; &gt;23)&amp;53&amp;$t &gt; &gt;3)); }<span class=\"pl-pds\">'</span></span>  <span class=\"pl-k\">|</span>play -t raw -b8 -r8k -e un -</pre></div>\n<ul dir=\"auto\">\n<li>Go to random site using up to 12 letter word from dictionary</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks http://www.$( look . | grep -E &quot;^[a-z]{,12}&quot; | shuf | head -n 1 ).com\"><pre>❯❯ elinks http://www.<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> look <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> grep -E <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[a-z]{,12}<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> shuf <span class=\"pl-k\">|</span> head -n 1 <span class=\"pl-pds\">)</span></span>.com</pre></div>\n<ul dir=\"auto\">\n<li>Show what files or filehandles are open in the /tmp directory (if its not a seperate partition). This can be slow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof +D /tmp\"><pre>❯❯ lsof +D /tmp</pre></div>\n<ul dir=\"auto\">\n<li>Make sure all photos in current directory have been backed up</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in *.JPG; do ls -l /multimedia/photos/family/$i ; done &gt; /dev/null\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.JPG<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> ls -l /multimedia/photos/family/<span class=\"pl-smi\">$i</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>Reverse DNS for list of IPs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -u -t. -k1n,1 -k2n,2 -k3n,3 -k4n,4 |while read -r ip; do r=$( dig +short -x $ip ); echo &quot;$ip - &gt; $r&quot;; done\"><pre>❯❯ sort -u -t. -k1n,1 -k2n,2 -k3n,3 -k4n,4 <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r ip<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> r=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> dig +short -x <span class=\"pl-smi\">$ip</span> <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$ip</span> - &gt; <span class=\"pl-smi\">$r</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Wait for a wget download to finish then shutdown the computer</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while pgrep wget ; do sleep 5 ; done ; shutdown -h now\"><pre>❯❯ <span class=\"pl-k\">while</span> pgrep wget <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep 5 <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">;</span> shutdown -h now</pre></div>\n<ul dir=\"auto\">\n<li>Remember doing this?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true; do echo $((++n)); done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-k\">++</span>n<span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Math music by viznut</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ perl -e 'use bytes; for($t=0;;$t++){ print chr($t*(($t &gt; &gt;12|$t &gt; &gt;8)&amp;63&amp;$t &gt; &gt;4)); }' | play -t raw -b8 -r8k -e un -\"><pre>❯❯ perl -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>use bytes; for($t=0;;$t++){ print chr($t*(($t &gt; &gt;12|$t &gt; &gt;8)&amp;63&amp;$t &gt; &gt;4)); }<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> play -t raw -b8 -r8k -e un -</pre></div>\n<ul dir=\"auto\">\n<li>Long list only the normal files (not directories, etc) in the current directory in last modified order</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ltrah | grep -E '^-'\"><pre>❯❯ ls -ltrah <span class=\"pl-k\">|</span> grep -E <span class=\"pl-s\"><span class=\"pl-pds\">'</span>^-<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show the total space used on all your local disk partitions</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -lkP | awk \\'{sum += $3} END { printf &quot;%d GiB\\\\n&quot;, sum/(2**20) }\\'\"><pre>❯❯ df -lkP <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{sum += <span class=\"pl-smi\">$3</span>} END { <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%d GiB<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>, sum/(2<span class=\"pl-k\">**</span>20) }<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Simple meal location decider function</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ eatwhat(){ echo &quot;Tacos,Burgers,Pizza,Sushi,Salad,Pasta&quot; | tr \\',\\' \\'\\\\n\\' | sort -R | head -1; }\"><pre>❯❯ <span class=\"pl-en\">eatwhat</span>(){ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Tacos,Burgers,Pizza,Sushi,Salad,Pasta<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> tr <span class=\"pl-cce\">\\'</span>,<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span> sort -R <span class=\"pl-k\">|</span> head -1; }</pre></div>\n<ul dir=\"auto\">\n<li>Convert image to color</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ jp2a -b --colors --fill http://t.co/JyYyscVdAZ\"><pre>❯❯ jp2a -b --colors --fill http://t.co/JyYyscVdAZ</pre></div>\n<ul dir=\"auto\">\n<li>ASCII art stereogram generated using aa3d. Focus past the text on the screen</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/ZPhxSZiTv5\"><pre>❯❯ http://t.co/ZPhxSZiTv5</pre></div>\n<ul dir=\"auto\">\n<li>less often tries to interpret known extensions using lesspipe. If you want to avoid that and see raw data, try this method</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less &lt; van.doc\"><pre>❯❯ less <span class=\"pl-k\">&lt;</span> van.doc</pre></div>\n<ul dir=\"auto\">\n<li>Top 50 404's in descending order</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zcat access_log*.gz | cat access_log - | awk \\'$9 == &quot;404&quot; {print $7}\\' |sort|uniq -c|sort -rn| head -n 50\"><pre>❯❯ zcat access_log<span class=\"pl-k\">*</span>.gz <span class=\"pl-k\">|</span> cat access_log - <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span><span class=\"pl-smi\">$9</span> == <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>404<span class=\"pl-pds\">\"</span></span> {print <span class=\"pl-smi\">$7</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>sort<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>sort -rn<span class=\"pl-k\">|</span> head -n 50</pre></div>\n<ul dir=\"auto\">\n<li>ferguson |grep --line-buffered -P \"^\\s+@\" |while read l; do date +%H:%M;done|uniq -c</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t stream search \\\\\"><pre>❯❯ t stream search <span class=\"pl-cce\">\\\\</span></pre></div>\n<ul dir=\"auto\">\n<li>Rainbowstream is another CLI twitter client that is colorful and allows in-terminal image viewing. Thanks @dtvd88</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/w1eKfgGmQO\"><pre>❯❯ http://t.co/w1eKfgGmQO</pre></div>\n<ul dir=\"auto\">\n<li>Long time follower @jeroenhjanssens is giving a webcast today at 1pm EST on data science at the command line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/0NdptnKISb\"><pre>❯❯ http://t.co/0NdptnKISb</pre></div>\n<ul dir=\"auto\">\n<li>rig is this cool little program that generates random identities and is nice for testing forms</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rig\"><pre>❯❯ rig</pre></div>\n<ul dir=\"auto\">\n<li>Using brace expansion to make it quicker to specify args when the tarfile and directory name are same base</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tar zcvf directory{.tar.gz,}\"><pre>❯❯ tar zcvf directory{.tar.gz,}</pre></div>\n<ul dir=\"auto\">\n<li>An answer on this site provides an interesting solution for coloring multiple tail outputs. Thx @DanFromGermany</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/bRjaRfrcIm\"><pre>❯❯ http://t.co/bRjaRfrcIm</pre></div>\n<ul dir=\"auto\">\n<li>script is a nice program that allows you to record your interactive shell session. Great for logging upgrades</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ script shellsession.log\"><pre>❯❯ script shellsession.log</pre></div>\n<ul dir=\"auto\">\n<li>hacktheplanet</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Grand Central Station!\"><pre>❯❯ Grand Central Station<span class=\"pl-k\">!</span></pre></div>\n<ul dir=\"auto\">\n<li>tail syslog continuously and add extra newline, which may help with readability when lines are long</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -f syslog |awk \\'{print $0 &quot;\\\\n&quot;}\\'\"><pre>❯❯ tail -f syslog <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$0</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>In ZSH, you can press Meta + h to display the man page of the command to the left of the cursor. Thx @_dhamidi</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Meta-h]\"><pre>❯❯ [Meta-h]</pre></div>\n<ul dir=\"auto\">\n<li>Show usage of files/directories, sorted by the human readable size. -h is available with newer versions of sort</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ du -sh * |sort -h\"><pre>❯❯ du -sh <span class=\"pl-k\">*</span> <span class=\"pl-k\">|</span>sort -h</pre></div>\n<ul dir=\"auto\">\n<li>This is how my day has been</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth sine 480 sine 620 remix 1-2 fade 0 0.5 delay 0.5 repeat 5\"><pre>❯❯ play -n synth sine 480 sine 620 remix 1-2 fade 0 0.5 delay 0.5 repeat 5</pre></div>\n<ul dir=\"auto\">\n<li>@sehetw likes to use the -w option, which ignores all whitespace-only changes between files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff -w file-with-crlf.dos file-with-lf.txt\"><pre>❯❯ diff -w file-with-crlf.dos file-with-lf.txt</pre></div>\n<ul dir=\"auto\">\n<li>Quickly navigate your filesystem using a couple of functions. Thx @kidpixo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/Xw8iJ5XWRD\"><pre>❯❯ http://t.co/Xw8iJ5XWRD</pre></div>\n<ul dir=\"auto\">\n<li>Show what is different between two directories containing plugin code</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff -uNr plugin-orig plugin-current | less\"><pre>❯❯ diff -uNr plugin-orig plugin-current <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>Even though my complaint is about it being the default everywhere, you can use the output of this program to set the color</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dircolors\"><pre>❯❯ dircolors</pre></div>\n<ul dir=\"auto\">\n<li>4 RPG fans</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ d20kill(){ n=$(($RANDOM%20+1));case $n in 20)kill -9 $1;echo 'Critical hit!';;1[0-9])kill $1;echo 'Hit';;*)echo 'Miss';;esac; }\"><pre>❯❯ <span class=\"pl-en\">d20kill</span>(){ n=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">20</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span>;<span class=\"pl-k\">case</span> <span class=\"pl-smi\">$n</span> <span class=\"pl-k\">in</span> 20)kill -9 <span class=\"pl-smi\">$1</span>;echo <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Critical hit!<span class=\"pl-pds\">'</span></span>;;1[0-9])kill <span class=\"pl-smi\">$1</span>;echo <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hit<span class=\"pl-pds\">'</span></span>;;<span class=\"pl-k\">*</span>)echo <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Miss<span class=\"pl-pds\">'</span></span>;;esac; }</pre></div>\n<ul dir=\"auto\">\n<li>Roll a digital 6 sided die. Thx @marissa_rae</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(($RANDOM % 6 + 1))\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span> <span class=\"pl-k\">%</span> <span class=\"pl-c1\">6</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Quickly see what day of the week some date this year is on, just use a -v for each part of the date in BSD date</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -v Nov -v 15d\"><pre>❯❯ date -v Nov -v 15d</pre></div>\n<ul dir=\"auto\">\n<li>Quickly see what day of the week some date this year is on, you can just use date -d \"short date\" in GNU date</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;Nov 15\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Nov 15</span></pre></div>\n<ul dir=\"auto\">\n<li>Watch ESSID's in your area every 5 seconds including count at the end</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ watch -n 5 &quot;iwlist wlan0 scan | grep ESSID | pee cat \\'wc -l\\'\"><pre>❯❯ watch -n 5 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>iwlist wlan0 scan | grep ESSID | pee cat \\'wc -l\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Old term is new term. Thx @JCaesar (love your cipher and your salad)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/dpX3TFgFet\"><pre>❯❯ http://t.co/dpX3TFgFet</pre></div>\n<ul dir=\"auto\">\n<li>.*//' manifests/nodes.pp|egrep -o '\\$\\w+') modules|sort -t: -k2 |uniq</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fgrep -roH -f&lt;(sed 's/\"><pre>❯❯ fgrep -roH -f<span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sed <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Look up a definition for the word autonomy in a few online sources. You probably need to install dict for this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dict minging\"><pre>❯❯ dict minging</pre></div>\n<ul dir=\"auto\">\n<li>Set your keyboard repeat rate under X windows to 220 ms delay before repeat and 60 cps. YMMV</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xset r rate 220 60\"><pre>❯❯ xset r rate 220 60</pre></div>\n<ul dir=\"auto\">\n<li>UTF8 sanitize. Thx @mvidner</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ iconv -f utf8 -t utf8//ignore &lt; mostly_utf8_with_some_invalid_characters &gt; utf8_offending_characters_removed\"><pre>❯❯ iconv -f utf8 -t utf8//ignore <span class=\"pl-k\">&lt;</span> mostly_utf8_with_some_invalid_characters <span class=\"pl-k\">&gt;</span> utf8_offending_characters_removed</pre></div>\n<ul dir=\"auto\">\n<li>Happy 15th System Administrator Day! I bring you the epic tale of The Stick!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/daCwGTySxI\"><pre>❯❯ http://t.co/daCwGTySxI</pre></div>\n<ul dir=\"auto\">\n<li>In vim, this search will find non-ascii characters and things like invisible space characters generated by \"friendly\" apps</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /[\\\\x80-\\\\xff]\"><pre>❯❯ /[<span class=\"pl-cce\">\\\\</span>x80-<span class=\"pl-cce\">\\\\</span>xff]</pre></div>\n<ul dir=\"auto\">\n<li>In OS X, send the base64 data in your copy/paste buffer into base64 for decoding</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pbpaste | base64 -D\"><pre>❯❯ pbpaste <span class=\"pl-k\">|</span> base64 -D</pre></div>\n<ul dir=\"auto\">\n<li>In X windows, send the base64 data in your copy/paste buffer into base64 for decoding</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xsel -b | base64 -d\"><pre>❯❯ xsel -b <span class=\"pl-k\">|</span> base64 -d</pre></div>\n<ul dir=\"auto\">\n<li>AT&amp;T telephone building moved in 1930 during working hours</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/oi1LzJUJBu\"><pre>❯❯ http://t.co/oi1LzJUJBu</pre></div>\n<ul dir=\"auto\">\n<li>xiki</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ All those new options and syntaxes should keep climagic going for years.\"><pre>❯❯ All those new options and syntaxes should keep climagic going <span class=\"pl-k\">for</span> years.</pre></div>\n<ul dir=\"auto\">\n<li>Show SMTP transaction to see if e-mail is valid</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ swaks --to cancelation@comcast\\\\.net --server mx1.comcast\\\\.com --quit-after RCPT\"><pre>❯❯ swaks --to cancelation@comcast<span class=\"pl-cce\">\\\\</span>.net --server mx1.comcast<span class=\"pl-cce\">\\\\</span>.com --quit-after RCPT</pre></div>\n<ul dir=\"auto\">\n<li>The ascii command also allows you to convert ascii text into the various numeric bases</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii -s &quot;show me the codes&quot; | column -t\"><pre>❯❯ ascii -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>show me the codes<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> column -t</pre></div>\n<ul dir=\"auto\">\n<li>Quick access to the ASCII character table either through the ascii program or the man page if you don't have the prog</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii || man ascii\"><pre>❯❯ ascii <span class=\"pl-k\">||</span> man ascii</pre></div>\n<ul dir=\"auto\">\n<li>Here is a short list of other useful readline keystrokes you can use in bash. Thx @komidore64</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/DOyeGUlLSN\"><pre>❯❯ http://t.co/DOyeGUlLSN</pre></div>\n<ul dir=\"auto\">\n<li>Find files under the current directory tree that have a space in the filename</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -name '*\\\\ *'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*\\\\ *<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Test your shell-fu in a \"wargame\" environment. Many climagic tricks can be used here</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/GMu32WGJCl\"><pre>❯❯ http://t.co/GMu32WGJCl</pre></div>\n<ul dir=\"auto\">\n<li>joke</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Kellogg's is tightening up its cybersecurity because they have lots of old serial connections. They're also worried about air gaps.\"><pre>❯❯ Kellogg<span class=\"pl-s\"><span class=\"pl-pds\">'</span>s is tightening up its cybersecurity because they have lots of old serial connections. They<span class=\"pl-pds\">'</span></span>re also worried about air gaps.</pre></div>\n<ul dir=\"auto\">\n<li>Instead of using sleep 60, you can use read and \"short-circuit\" the wait with a return. Thx @jpluscplusm</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do read -st 60 X ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">read</span> -st 60 X <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Remove the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivilent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Manual lists this as Ctrl-_ but Ctrl-- usually works too. Incremental undo of command line edits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-- &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-- <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-</pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>description. The</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just a reminder about the format of climagic tweets: command\"><pre>❯❯ Just a reminder about the format of climagic tweets: <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>Kinda philosophical. What is a line of text really? (Disclaimer: I know the manpage does say \"newline\" count)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf &quot;hello&quot; | wc -l\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> wc -l</pre></div>\n<ul dir=\"auto\">\n<li>space per user</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ getent passwd|while IFS=: read -r user n uid n n home n;do if [[ $uid -ge 500 ]];then printf &quot;$user &quot;;du -sh $home;fi;done\"><pre>❯❯ getent passwd<span class=\"pl-k\">|</span>while IFS=: <span class=\"pl-c1\">read</span> -r user n uid n n home n<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">if</span> [[ <span class=\"pl-smi\">$uid</span> <span class=\"pl-k\">-ge</span> 500 ]]<span class=\"pl-k\">;</span><span class=\"pl-k\">then</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$user</span> <span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>du -sh <span class=\"pl-smi\">$home</span><span class=\"pl-k\">;</span><span class=\"pl-k\">fi</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Redirect \"external\" port 3000 from your router to port 3000 of 192.168.1.100. Thx @ntnmrndn</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ upnpc -a 192.168.1.100 3000 3000 tcp\"><pre>❯❯ upnpc -a 192.168.1.100 3000 3000 tcp</pre></div>\n<ul dir=\"auto\">\n<li>Show 5 lines of context output after every match of any div tag in index.html</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -A5 '&lt;div' index.html\"><pre>❯❯ grep -A5 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&lt;div<span class=\"pl-pds\">'</span></span> index.html</pre></div>\n<ul dir=\"auto\">\n<li>More fireworks! GUI output, but many CLI options. You need the rss-glx screensavers package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/skyrocket\"><pre>❯❯ /usr/lib/xscreensaver/skyrocket</pre></div>\n<ul dir=\"auto\">\n<li>Virtual fireworks noises (WARNING: screamer)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth sine 8000 bend 0.5,-1800,5 flanger 0 3 0 20 10 tri 20 quad trim 0 7\"><pre>❯❯ play -n synth sine 8000 bend 0.5,-1800,5 flanger 0 3 0 20 10 tri 20 quad trim 0 7</pre></div>\n<ul dir=\"auto\">\n<li>Bottle rocket sound</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ play -n synth whitenoise 200 fade 0.2 1 1 trim 0 0.5 ; sleep 1 ; play -n synth whitenoise 200 fade 0 1 1 trim 0 1\"><pre>❯❯ play -n synth whitenoise 200 fade 0.2 1 1 trim 0 0.5 <span class=\"pl-k\">;</span> sleep 1 <span class=\"pl-k\">;</span> play -n synth whitenoise 200 fade 0 1 1 trim 0 1</pre></div>\n<ul dir=\"auto\">\n<li>Right, that was overkill. I forget that the default function of uniq is to just print out the unique lines. Duh!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ uniq data.txt\"><pre>❯❯ uniq data.txt</pre></div>\n<ul dir=\"auto\">\n<li>Print the lines that only occur once in data.txt</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort data.txt | uniq -c | grep &quot;^\\\\ *1\"><pre>❯❯ sort data.txt <span class=\"pl-k\">|</span> uniq -c <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^<span class=\"pl-cce\">\\\\</span> *1</span></pre></div>\n<ul dir=\"auto\">\n<li>Maybe find file/dirs in an unreadable /tmp dir</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look .| egrep &quot;^[a-z]{1,5}$&quot; |while read word; do [ -e /tmp/$word ] &amp;&amp; echo $word ; done\"><pre>❯❯ look .<span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[a-z]{1,5}$<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> word<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> [ <span class=\"pl-k\">-e</span> /tmp/<span class=\"pl-smi\">$word</span> ] <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$word</span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Print the last field of every other line in the file data.txt. Use NR%2==1 for the \"other\" line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'(NR%2==0) { print $NF }\\' data.txt\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>(NR%2==0) { print <span class=\"pl-smi\">$NF</span> }<span class=\"pl-cce\">\\'</span> data.txt</pre></div>\n<ul dir=\"auto\">\n<li>update Mac OSX on command line Thx @qtfimik</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ softwareupdate -iav\"><pre>❯❯ softwareupdate -iav</pre></div>\n<ul dir=\"auto\">\n<li>How I feel after I switch over to a new router at home and finally get it connected</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/Ih1qrFr16b\"><pre>❯❯ http://t.co/Ih1qrFr16b</pre></div>\n<ul dir=\"auto\">\n<li>Find out what Linux distro you are using</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsb_release -a || echo &quot;Its probably Red Hat based.\"><pre>❯❯ lsb_release -a <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Its probably Red Hat based.</span></pre></div>\n<ul dir=\"auto\">\n<li>Use brace expansion to copy range of images (IMG_1050.JPG through IMG_1622.JPG) to usb drive</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cp -va IMG_{1050..1622}.JPG /media/usbdrive/\"><pre>❯❯ cp -va IMG_{1050..1622}.JPG /media/usbdrive/</pre></div>\n<ul dir=\"auto\">\n<li>Convert something typed in qwerty layout on a dvorak layout. ;-)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tr &quot;qwertyuiop[]sdfghjkl;\\'zxcvbnm,./&quot; &quot;\\',.pyfgcrl/=oeuidhtns\\\\-;qjkxbmwvz\"><pre>❯❯ tr <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>qwertyuiop[]sdfghjkl;\\'zxcvbnm,./<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\',.pyfgcrl/=oeuidhtns<span class=\"pl-cce\">\\\\</span>-;qjkxbmwvz</span></pre></div>\n<ul dir=\"auto\">\n<li>sudo makecoffee works too. But /sbin/printf is \"more powerful\" so be careful</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias makecoffee=\\'printf &quot;\\\\xE2\\\\x98\\\\x95\\\\n&quot;\\'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> makecoffee=<span class=\"pl-cce\">\\'</span>printf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>xE2<span class=\"pl-cce\">\\\\</span>x98<span class=\"pl-cce\">\\\\</span>x95<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>\"}; print $0 \" \" b;}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{print $4}\\' apache_log|sort -n|cut -c1-15|uniq -c|awk \\'{b=&quot;&quot;;for(i=0;i&lt;$1/10;i++){b=b\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$4</span>}<span class=\"pl-cce\">\\'</span> apache_log<span class=\"pl-k\">|</span>sort -n<span class=\"pl-k\">|</span>cut -c1-15<span class=\"pl-k\">|</span>uniq -c<span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{b=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>for(i=0<span class=\"pl-k\">;</span>i<span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">$1</span>/10<span class=\"pl-k\">;</span>i++){b=b</pre></div>\n<ul dir=\"auto\">\n<li>Quickly give yourself an Unix time epoch value 1 year from now. Use date -v+1y +%s on Mac/BSD date</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;now + 1 year&quot; +%s\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now + 1 year<span class=\"pl-pds\">\"</span></span> +%s</pre></div>\n<ul dir=\"auto\">\n<li>Here, play some robotfindskitten, that will make things all better and you won't have to think about parsing HTML</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ robotfindskitten\"><pre>❯❯ robotfindskitten</pre></div>\n<ul dir=\"auto\">\n<li>Print only the data between open and close pre tags in an HTML doc</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -n -e '/&lt;pre &gt;/,/&lt;\\\\/pre &gt;/p' &lt; data.html\"><pre>❯❯ sed -n -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/&lt;pre &gt;/,/&lt;\\\\/pre &gt;/p<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&lt;</span> data.html</pre></div>\n<ul dir=\"auto\">\n<li>Fast extract audio track from a set of videos</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for vid in *.avi ; do mplayer -ao &quot;pcm:file=${vid%%.avi}.wav:fast&quot; -vo null &quot;$vid&quot; ; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">vid</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.avi <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> mplayer -ao <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pcm:file=<span class=\"pl-smi\">${vid<span class=\"pl-k\">%%</span>.avi}</span>.wav:fast<span class=\"pl-pds\">\"</span></span> -vo null <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$vid</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use readline shortcuts in GUI (eg. Ctrl-U)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf \\'include &quot;/usr/share/themes/Emacs/gtk-2.0-key/gtkrc&quot;\\\\ngtk-key-theme-name = &quot;Emacs&quot;\\\\n\\'\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-cce\">\\'</span>include <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/share/themes/Emacs/gtk-2.0-key/gtkrc<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\\</span>ngtk-key-theme-name = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Emacs<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Find .htaccess files with \"allow from\" directives (that may need revision)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find www -name .htaccess -exec grep -l &quot;Allow from&quot; {} +\"><pre>❯❯ find www -name .htaccess -exec grep -l <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Allow from<span class=\"pl-pds\">\"</span></span> {} +</pre></div>\n<ul dir=\"auto\">\n<li>How Wargames would have ended if they had been using two factor auth</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/KBT3N3pUOp\"><pre>❯❯ https://t.co/KBT3N3pUOp</pre></div>\n<ul dir=\"auto\">\n<li>Player chooses c h m o d as his letters. It didn't give him the access he needed. Not in the wheel group I guess</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/pt7B5B7QKf\"><pre>❯❯ http://t.co/pt7B5B7QKf</pre></div>\n<ul dir=\"auto\">\n<li>This will show a count of all lines that have more than 1 copy. So only show the duplicates. (-d)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ uniq -cd\"><pre>❯❯ uniq -cd</pre></div>\n<ul dir=\"auto\">\n<li>Show a 3 month view (before, current, after) in cal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cal -3\"><pre>❯❯ cal -3</pre></div>\n<ul dir=\"auto\">\n<li>Find which Debian package the notify-send program is included with - &gt; libnotify-bin</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -S $( which notify-send )\"><pre>❯❯ dpkg -S <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which notify-send <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Pass the output of which (showing path to lspci) into rpm's -qf, which tells you the pkg</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qf $( which lspci )\"><pre>❯❯ rpm -qf <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which lspci <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>/\\xE2\\x96\\x88/g' &lt; qr-code</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -e 's/\"><pre>❯❯ sed -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/</span></pre></div>\n<ul dir=\"auto\">\n<li>You're SSH'd to your home box and you want to port forward to your router's web admin via localhost:8080</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [Enter]~C -L 8080:192.168.1.1:80\"><pre>❯❯ [Enter]~C -L 8080:192.168.1.1:80</pre></div>\n<ul dir=\"auto\">\n<li>Use sox to invert track and get hidden audio signal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sox -m -v1 24.flac -v-1 24_CTF.flac signal.wav silence 2 5 2%\"><pre>❯❯ sox -m -v1 24.flac -v-1 24_CTF.flac signal.wav silence 2 5 2%</pre></div>\n<ul dir=\"auto\">\n<li>For your Friday amusement. Thx @komidore64</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/P4wxRLZYF7\"><pre>❯❯ http://t.co/P4wxRLZYF7</pre></div>\n<ul dir=\"auto\">\n<li>A rainbow in your shell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ yes &quot;$(seq 231 -1 16)&quot; | while read i; do printf &quot;\\\\x1b[48;5;${i}m\\\\n&quot;; sleep .02; done\"><pre>❯❯ yes <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>seq 231 -1 16<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-k\">while</span> <span class=\"pl-c1\">read</span> i<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>x1b[48;5;<span class=\"pl-smi\">${i}</span>m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> sleep .02<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>CircleCityCon in Indy. Wearing the climagic logo t-shirt so if you see me, say hi. climagic meetup near registration area at 7:10pm</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I'm at\"><pre>❯❯ I<span class=\"pl-s\"><span class=\"pl-pds\">'</span>m at</span></pre></div>\n<ul dir=\"auto\">\n<li>Unless you have this option turned off for your filesystem, this will show you the last accessed time of files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -l --time=atime\"><pre>❯❯ ls -l --time=atime</pre></div>\n<ul dir=\"auto\">\n<li>vim tip: pressing '.' in command mode will repeat the last change made (insert, append, delete, etc.). Can be prefixed with number</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ .\"><pre>❯❯ <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>Clear the contents of logfile, reducing it to 0 bytes. Often used when you don't want to change the perms/mode of the file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯  &gt;logfile\"><pre>❯❯  <span class=\"pl-k\">&gt;</span>logfile</pre></div>\n<ul dir=\"auto\">\n<li>Pass two runs of ifconfig 60 seconds apart through the same grep using a subshell</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ( ifconfig eth0 ; sleep 60 ; ifconfig eth0 ) | grep X\"><pre>❯❯ ( ifconfig eth0 <span class=\"pl-k\">;</span> sleep 60 <span class=\"pl-k\">;</span> ifconfig eth0 ) <span class=\"pl-k\">|</span> grep X</pre></div>\n<ul dir=\"auto\">\n<li>Find specific lines matching session opened and print the 3rd word from end</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '/session opened/ {print $(NF-2)}' /var/log/auth.log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/session opened/ {print $(NF-2)}<span class=\"pl-pds\">'</span></span> /var/log/auth.log</pre></div>\n<ul dir=\"auto\">\n<li>theinternetofthings</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Dude, you ssh\\'d into someone\\'s mouth?\"><pre>❯❯ Dude, you ssh<span class=\"pl-cce\">\\'</span>d into someone<span class=\"pl-cce\">\\'</span>s mouth<span class=\"pl-k\">?</span></pre></div>\n<ul dir=\"auto\">\n<li>Remote intercom system. \"Kent, this is God!\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rec -t wav - | ssh remotehost play -t wav -\"><pre>❯❯ rec -t wav - <span class=\"pl-k\">|</span> ssh remotehost play -t wav -</pre></div>\n<ul dir=\"auto\">\n<li>Show the path to the executable that was run to start PID 2394. Need permission</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof -p 2394 |awk \\'{if ($4==&quot;txt&quot;){print $NF}}\\' |head -1\"><pre>❯❯ lsof -p 2394 <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{if (<span class=\"pl-smi\">$4</span>==<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>txt<span class=\"pl-pds\">\"</span></span>){print <span class=\"pl-smi\">$NF</span>}}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>head -1</pre></div>\n<ul dir=\"auto\">\n<li>mod</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -name \\'*.html\\' |while IFS=\\\\n read f ; do r=$(mktemp);touch -r &quot;$f&quot; $r;t=$(stat -c %y &quot;$f&quot;);mod &quot;$f&quot;;touch -r $r &quot;$f&quot;;rm $r;done\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -name <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">*</span>.html<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>while IFS=<span class=\"pl-cce\">\\\\</span>n <span class=\"pl-c1\">read</span> f <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> r=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>mktemp<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>touch -r <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$r</span><span class=\"pl-k\">;</span>t=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>stat -c %y <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>mod <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>touch -r <span class=\"pl-smi\">$r</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>rm <span class=\"pl-smi\">$r</span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Use regex boundary markers (\\b) to find instances of the string ed alone in a file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -E &quot;\\\\bed\\\\b&quot; queue.txt\"><pre>❯❯ grep -E <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>bed<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-pds\">\"</span></span> queue.txt</pre></div>\n<ul dir=\"auto\">\n<li>Mmmmm, donuts. Today is national donut day. Requires rss-glx package</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/lattice --tasty\"><pre>❯❯ /usr/lib/xscreensaver/lattice --tasty</pre></div>\n<ul dir=\"auto\">\n<li>Take a single 1280x720 picture of your TV input, which is often your webcam</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -vo png -frames 1 tv:// -tv width=1280:height=720\"><pre>❯❯ mplayer -vo png -frames 1 tv:// -tv width=1280:height=720</pre></div>\n<ul dir=\"auto\">\n<li>Order filesystems by percent usage and keep header in place</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -hP |column -t |tee  &gt;( head -n1 &gt; /dev/stderr ) |grep % |sort -k5nr\"><pre>❯❯ df -hP <span class=\"pl-k\">|</span>column -t <span class=\"pl-k\">|</span>tee  <span class=\"pl-s\"><span class=\"pl-pds\">&gt;(</span> head -n1 <span class=\"pl-k\">&gt;</span> /dev/stderr <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">|</span>grep % <span class=\"pl-k\">|</span>sort -k5nr</pre></div>\n<ul dir=\"auto\">\n<li>Show perms/owner at each dir level</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ treeperms(){ d=$(cd &quot;$1&quot; ; pwd -P) ; ls -ld &quot;$d&quot;; [[ &quot;$d&quot; != &quot;/&quot; ]] &amp;&amp; treeperms $(dirname &quot;$d&quot;); }\"><pre>❯❯ <span class=\"pl-en\">treeperms</span>(){ d=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>cd <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">pwd</span> -P<span class=\"pl-pds\">)</span></span> ; ls -ld <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">&amp;&amp;</span> treeperms <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>dirname <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$d</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Don't watch the clock yourself, Auto check when a tunnel interface times out</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while ifconfig utun0 &gt; /dev/null; do sleep 15; done; date\"><pre>❯❯ <span class=\"pl-k\">while</span> ifconfig utun0 <span class=\"pl-k\">&gt;</span> /dev/null<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> sleep 15<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> date</pre></div>\n<ul dir=\"auto\">\n<li>Because you ain't got time to use find -type f -exec blah. Just redirect the errors to devnull</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -li color /etc/* 2 &gt; /dev/null\"><pre>❯❯ grep -li color /etc/<span class=\"pl-k\">*</span> 2 <span class=\"pl-k\">&gt;</span> /dev/null</pre></div>\n<ul dir=\"auto\">\n<li>Make box around text. <a href=\"http://t.co/ptTP0mmlCx\" rel=\"nofollow\">http://t.co/ptTP0mmlCx</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ function box(){ t=&quot;$1xxxx&quot;;c=${2:-=}; echo ${t//?/$c}; echo &quot;$c $1 $c&quot;; echo ${t//?/$c}; }\"><pre>❯❯ <span class=\"pl-k\">function</span> <span class=\"pl-en\">box(){</span> t=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span>xxxx<span class=\"pl-pds\">\"</span></span>;c=<span class=\"pl-smi\">${2<span class=\"pl-k\">:-</span>=}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$c</span> <span class=\"pl-smi\">$1</span> <span class=\"pl-smi\">$c</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">${t<span class=\"pl-k\">//</span>?<span class=\"pl-k\">/</span><span class=\"pl-smi\">$c</span>}</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Display top bandwidth hogs on website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk \\'{a[$1] += $10} END {for (h in a) print h &quot; &quot; a[h]}\\' access_log | sort -k 2 -nr | head -10\"><pre>❯❯ awk <span class=\"pl-cce\">\\'</span>{a[<span class=\"pl-smi\">$1</span>] += <span class=\"pl-smi\">$1</span>0} END {for (h <span class=\"pl-k\">in</span> a) print h <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> a[h]}<span class=\"pl-cce\">\\'</span> access_log <span class=\"pl-k\">|</span> sort -k 2 -nr <span class=\"pl-k\">|</span> head -10</pre></div>\n<ul dir=\"auto\">\n<li>Filter by port range to host and connection state. Thx @hecky and @raganello</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof -iTCP@irc.evil.net:1024-50000 -s TCP:ESTABLISHED\"><pre>❯❯ lsof -iTCP@irc.evil.net:1024-50000 -s TCP:ESTABLISHED</pre></div>\n<ul dir=\"auto\">\n<li>Show what processes are using port 80 either locally or remotely. Need to be root for unowned processes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsof -i TCP:80\"><pre>❯❯ lsof -i TCP:80</pre></div>\n<ul dir=\"auto\">\n<li>Learn vim while playing an adventure game</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/wGMlnbfTcx\"><pre>❯❯ http://t.co/wGMlnbfTcx</pre></div>\n<ul dir=\"auto\">\n<li>Mouse spiral</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ x=0;y=0;while [[ $y -lt 500 ]] ; do xdotool mousemove --polar $x $y ; x=$(($x+3));y=$(($y+1)); sleep 0.001; done\"><pre>❯❯ x=0<span class=\"pl-k\">;</span>y=0<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> [[ <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">-lt</span> 500 ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> xdotool mousemove --polar <span class=\"pl-smi\">$x</span> <span class=\"pl-smi\">$y</span> <span class=\"pl-k\">;</span> x=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$x</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">3</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span>y=<span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$y</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span><span class=\"pl-pds\">))</span></span><span class=\"pl-k\">;</span> sleep 0.001<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Tron lightcycles in the terminal or Etch-a-sketch. Take your pick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/zZmcvsVtwi\"><pre>❯❯ http://t.co/zZmcvsVtwi</pre></div>\n<ul dir=\"auto\">\n<li>Another one to try</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/apple2 -text -fast -program $SHELL\"><pre>❯❯ /usr/lib/xscreensaver/apple2 -text -fast -program <span class=\"pl-smi\">$SHELL</span></pre></div>\n<ul dir=\"auto\">\n<li>Use phosphor for your terminal</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ /usr/lib/xscreensaver/phosphor -scale 2 -delay 5000 -geometry 1024x768 -program $SHELL\"><pre>❯❯ /usr/lib/xscreensaver/phosphor -scale 2 -delay 5000 -geometry 1024x768 -program <span class=\"pl-smi\">$SHELL</span></pre></div>\n<ul dir=\"auto\">\n<li>climagic, meet the magic keyboard</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/SprJ1PiMMl\"><pre>❯❯ http://t.co/SprJ1PiMMl</pre></div>\n<ul dir=\"auto\">\n<li>The origin of the sudo command as told by its co-author Bob Coggeshall. Thx normod</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/DNcP31ykga\"><pre>❯❯ https://t.co/DNcP31ykga</pre></div>\n<ul dir=\"auto\">\n<li>Foremost is a file recovery program that can extract files from disk images and more. <a href=\"http://t.co/JP4nL6iSyN\" rel=\"nofollow\">http://t.co/JP4nL6iSyN</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ foremost\"><pre>❯❯ foremost</pre></div>\n<ul dir=\"auto\">\n<li>Play all the media files in the current directory by mod time for file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -tr &gt; timeordered ; mplayer -playlist timeordered\"><pre>❯❯ ls -tr <span class=\"pl-k\">&gt;</span> timeordered <span class=\"pl-k\">;</span> mplayer -playlist timeordered</pre></div>\n<ul dir=\"auto\">\n<li>saves you searching for disks and other block devs attached to your</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ lsblk\"><pre>❯❯ lsblk</pre></div>\n<ul dir=\"auto\">\n<li>The real meaning of</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in {A..Z}; do echo $i; done |nl |grep &quot;[XKCD]&quot; |awk \\'{sum+=$1} END {print sum}\\'\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> {A..Z}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$i</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span>nl <span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[XKCD]<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>{sum+=<span class=\"pl-smi\">$1</span>} END {print sum}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>\\xcf\\x80 * l33t% = 42 Happy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;scale=10; 3.1415926535 * (1337.0/100.0)&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scale=10; 3.1415926535 * (1337.0/100.0)<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>Print the decimal encoded value of an * (everything)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ printf \\'%d\\\\n\\' &quot;\\'*\"><pre>❯❯ <span class=\"pl-c1\">printf</span> <span class=\"pl-cce\">\\'</span>%d<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\'*</span></pre></div>\n<ul dir=\"auto\">\n<li>Lego keyboard. Now you have a new project</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/HRbyGyotGx\"><pre>❯❯ https://t.co/HRbyGyotGx</pre></div>\n<ul dir=\"auto\">\n<li>After receiving this command about 100x from followers over the years, I can finally safely post it. Thx @NuxRo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/n3Lqug0E1k\"><pre>❯❯ http://t.co/n3Lqug0E1k</pre></div>\n<ul dir=\"auto\">\n<li>Your own mv function for files with a \"template\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ my_mv(){ d_id=$( basename &quot;$(pwd)&quot; |cut -d\\' \\' -f2); mv -v &quot;$1&quot; &quot;special_${d_id}-$2_$1; }\"><pre>❯❯ <span class=\"pl-en\">my_mv</span>(){ d_id=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span> basename <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>pwd<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>cut -d<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span> -f2<span class=\"pl-pds\">)</span></span>; mv -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>special_<span class=\"pl-smi\">${d_id}</span>-<span class=\"pl-smi\">$2</span>_<span class=\"pl-smi\">$1</span>; }</span></pre></div>\n<ul dir=\"auto\">\n<li>Untar a program file and cd into the directory it created without the .tar.gz extension</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tar xvf program-1.2.3.tar.gz ; cd ${_%%.tar.gz}\"><pre>❯❯ tar xvf program-1.2.3.tar.gz <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">${_<span class=\"pl-k\">%%</span>.tar.gz}</span></pre></div>\n<ul dir=\"auto\">\n<li>:$:s/.png/.jpg/</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -quality 80 Screenshot-2014-05-20.png !\"><pre>❯❯ convert -quality 80 Screenshot-2014-05-20.png <span class=\"pl-k\">!</span></pre></div>\n<ul dir=\"auto\">\n<li>:1\"{}</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl http://example\\\\.com/vids/ | grep -Po \\'(?&lt;=&quot;)[^&quot;]+.webm(?=&quot;)\\' | xargs -I{} -n1 wget !\"><pre>❯❯ curl http://example<span class=\"pl-cce\">\\\\</span>.com/vids/ <span class=\"pl-k\">|</span> grep -Po <span class=\"pl-cce\">\\'</span>(<span class=\"pl-k\">?</span><span class=\"pl-k\">&lt;</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)[^<span class=\"pl-pds\">\"</span></span>]+.webm(<span class=\"pl-k\">?</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)\\' | xargs -I{} -n1 wget !</span></pre></div>\n<ul dir=\"auto\">\n<li>This document explains the differences between !$, Meta+. and $_ for referencing \"last args\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/d1wFX5sHQr\"><pre>❯❯ http://t.co/d1wFX5sHQr</pre></div>\n<ul dir=\"auto\">\n<li>$_ is a shell special variable that expands to the last argument given in the prev command. Thx @PetrHodac</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mkdir -p /tmp/a/b/c ; cd $_\"><pre>❯❯ mkdir -p /tmp/a/b/c <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">$_</span></pre></div>\n<ul dir=\"auto\">\n<li>You may have heard about Docker and Linux containers. Here is a good primer on LJ. Thx @brimston3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/Zn4bsvNGAD\"><pre>❯❯ http://t.co/Zn4bsvNGAD</pre></div>\n<ul dir=\"auto\">\n<li>How to setup THX startup sound, cd+video and Ackbar Ctrl-C for yourself</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/QtnrBFR67K\"><pre>❯❯ http://t.co/QtnrBFR67K</pre></div>\n<ul dir=\"auto\">\n<li>Correction, but I wasn't really serious</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd(){ builtin cd $@; mplayer -quiet -geometry 400x280+0+0 &quot;$(ls -1 ~/Videos/*|shuf| head -1)&quot; &amp; }\"><pre>❯❯ <span class=\"pl-en\">cd</span>(){ <span class=\"pl-c1\">builtin</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">$@</span>; mplayer -quiet -geometry 400x280+0+0 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls -1 <span class=\"pl-k\">~</span>/Videos/<span class=\"pl-k\">*</span><span class=\"pl-k\">|</span>shuf<span class=\"pl-k\">|</span> head -1<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&amp;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Make your shell more like a website</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd(){ builtin cd $@; mplayer -quiet -geometry 400x280+0+0 &quot;$(ls -1 ~/Videos/|shuf| head -1)&quot; &amp;); }\"><pre>❯❯ <span class=\"pl-en\">cd</span>(){ <span class=\"pl-c1\">builtin</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">$@</span>; mplayer -quiet -geometry 400x280+0+0 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls -1 <span class=\"pl-k\">~</span>/Videos/<span class=\"pl-k\">|</span>shuf<span class=\"pl-k\">|</span> head -1<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&amp;</span>)<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>For the non-believers. TIMTOWTDI!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep &quot;Yes it&quot; $( which frozen-bubble ) &amp;&amp; wc -l $_\"><pre>❯❯ grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Yes it<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> which frozen-bubble <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">&amp;&amp;</span> wc -l <span class=\"pl-smi\">$_</span></pre></div>\n<ul dir=\"auto\">\n<li>Convert to mp3. One of the reasons @erikaheidi &amp; @laceytech &lt;3 Linux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for f in *.wav; do lame --vbr-new -V 3 &quot;$f&quot; &quot;${f%.wav}.mp3&quot;; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">*</span>.wav<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> lame --vbr-new -V 3 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${f<span class=\"pl-k\">%</span>.wav}</span>.mp3<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Disable the Back/Forward keys (at least on my keyboard). Great for babies</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xmodmap -e &quot;keycode 166 = 0x0000&quot; -e &quot;keycode 167 = 0x0000\"><pre>❯❯ xmodmap -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keycode 166 = 0x0000<span class=\"pl-pds\">\"</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keycode 167 = 0x0000</span></pre></div>\n<ul dir=\"auto\">\n<li>SVG 2 PNG in CWD</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -maxdepth 1 -name \\'*.svg\\' |while IFS=$\\'\\\\n\\' read f ; do inkscape &quot;$f&quot; --export-png=&quot;PNG/${f%%.svg}.png&quot;; done\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -maxdepth 1 -name <span class=\"pl-cce\">\\'</span><span class=\"pl-k\">*</span>.svg<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>while IFS=$<span class=\"pl-cce\">\\'\\\\</span>n<span class=\"pl-cce\">\\'</span> <span class=\"pl-c1\">read</span> f <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> inkscape <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$f</span><span class=\"pl-pds\">\"</span></span> --export-png=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PNG/<span class=\"pl-smi\">${f<span class=\"pl-k\">%%</span>.svg}</span>.png<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>THXsh startup sound</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo '(play -q -n synth sine F2 sine C3 remix - fade 0 4 .1 norm -4 bend 0.5,2399,2 fade 0 4.0 0.5 &amp;)' &gt; &gt; ~/.bashrc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>(play -q -n synth sine F2 sine C3 remix - fade 0 4 .1 norm -4 bend 0.5,2399,2 fade 0 4.0 0.5 &amp;)<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">~</span>/.bashrc</pre></div>\n<ul dir=\"auto\">\n<li>Idea: Backslashing the * glob instead of quoting the expression. Thx @lorddrachenblut</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ./music  -name \\\\*.mp3 -exec cp {} ./new \\\\;\"><pre>❯❯ find ./music  -name <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span>.mp3 -exec cp {} ./new <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">;</span></pre></div>\n<ul dir=\"auto\">\n<li>Easy peasy time warp tweety @DrFNFurter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ at &quot;now + 5 years&quot;  &lt; \\'t update &quot;...pation&quot;\\'\"><pre>❯❯ at <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now + 5 years<span class=\"pl-pds\">\"</span></span>  <span class=\"pl-k\">&lt;</span> <span class=\"pl-cce\">\\'</span>t update <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>...pation<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>tarbombparty</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ @discreetsecure Heh, then address everyone you know in the Cc line and watch them start repling to all.\"><pre>❯❯ @discreetsecure Heh, <span class=\"pl-k\">then</span> address everyone you know <span class=\"pl-k\">in</span> the Cc line and watch them start repling to all.</pre></div>\n<ul dir=\"auto\">\n<li>If you want to learn about tar, watch this video I made 4 years ago</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/ZUP6jYwnu4\"><pre>❯❯ http://t.co/ZUP6jYwnu4</pre></div>\n<ul dir=\"auto\">\n<li>Detect</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tarbomb(){ [[ $( tar tf &quot;$1&quot; |sed \\'s,^\\\\./,,\\' |awk -F/ \\'{print $1}\\' |sort |uniq |wc -l ) -eq 1 ]] &amp;&amp; echo &quot;OK&quot; || echo \\'Tarbomb!\\'; }\"><pre>❯❯ <span class=\"pl-en\">tarbomb</span>(){ [[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> tar tf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>sed <span class=\"pl-cce\">\\'</span>s,^<span class=\"pl-cce\">\\\\</span>./,,<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>awk -F/ <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$1</span>}<span class=\"pl-cce\">\\'</span> <span class=\"pl-k\">|</span>sort <span class=\"pl-k\">|</span>uniq <span class=\"pl-k\">|</span>wc -l <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">-eq</span> 1 ]] &amp;<span class=\"pl-k\">&amp;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>OK<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\'</span>Tarbomb<span class=\"pl-k\">!</span><span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Its not Friday yet?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while [[ $( date +%A ) != &quot;Friday&quot; ]]; do echo Its not Friday yet ; sleep 1h ; done ; echo &quot;Yea Friday\"><pre>❯❯ <span class=\"pl-k\">while</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> date +%A <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Friday<span class=\"pl-pds\">\"</span></span> ]]<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> Its not Friday yet <span class=\"pl-k\">;</span> sleep 1h <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Yea Friday</span></pre></div>\n<ul dir=\"auto\">\n<li>Send every two files found through diff. (Of course, this may not always be what you want) For @mgpreppy</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find -print0 | xargs -0 -n 2 diff\"><pre>❯❯ find -print0 <span class=\"pl-k\">|</span> xargs -0 -n 2 diff</pre></div>\n<ul dir=\"auto\">\n<li>Move all files modified in the last 2 mins to ./target .Thx @davidnormo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ~/path/to/files -mmin -2 -execdir mv -t ./target/ {} +\"><pre>❯❯ find <span class=\"pl-k\">~</span>/path/to/files -mmin -2 -execdir mv -t ./target/ {} +</pre></div>\n<ul dir=\"auto\">\n<li>MIND BLOWN! \\xcf\\x80 * l33t% = 42 Thx @Notfound404__</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;scale=10; 3.1415926535 * (1337.0/100.0)&quot; | bc\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scale=10; 3.1415926535 * (1337.0/100.0)<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> bc</pre></div>\n<ul dir=\"auto\">\n<li>epoch //via @climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @blubtwit: Happy 1400000000\"><pre>❯❯ RT @blubtwit: Happy 1400000000</pre></div>\n<ul dir=\"auto\">\n<li>See what is in the file called '-'. 9 times out of 10 for me this is the output of strace or tcpdump</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ less ./-\"><pre>❯❯ less ./-</pre></div>\n<ul dir=\"auto\">\n<li>Show the differences between two directories. comm can also be good for this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ diff &lt;(cd dir1 ; ls -1 | sort) &lt;(cd dir2 ; ls -1 | sort)\"><pre>❯❯ diff <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cd dir1 <span class=\"pl-k\">;</span> ls -1 <span class=\"pl-k\">|</span> sort<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>cd dir2 <span class=\"pl-k\">;</span> ls -1 <span class=\"pl-k\">|</span> sort<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>AA countdown to 1.4 billion epoch</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ e=1400000000;while [[ $(date +%Y) -ne $e ]];do figlet $(($e-$(date +%s)));sleep 1;clear;done;figlet $e\"><pre>❯❯ e=1400000000<span class=\"pl-k\">;</span><span class=\"pl-k\">while</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">-ne</span> <span class=\"pl-smi\">$e</span> ]]<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> figlet <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$e</span><span class=\"pl-k\">-</span>$(date <span class=\"pl-k\">+%</span>s<span class=\"pl-pds\">))</span></span>)<span class=\"pl-k\">;</span>sleep 1<span class=\"pl-k\">;</span>clear<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span>figlet <span class=\"pl-smi\">$e</span></pre></div>\n<ul dir=\"auto\">\n<li>See what local time for you the</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ e=1400000000;date -d @$e || date -r $e\"><pre>❯❯ e=1400000000<span class=\"pl-k\">;</span>date -d @<span class=\"pl-smi\">$e</span> <span class=\"pl-k\">||</span> date -r <span class=\"pl-smi\">$e</span></pre></div>\n<ul dir=\"auto\">\n<li>Start a web service on port 8000. Among other things, it can be useful to testing LISTENing ports vs firewall</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ python -m SimpleHTTPServer\"><pre>❯❯ python -m SimpleHTTPServer</pre></div>\n<ul dir=\"auto\">\n<li>See the last logged in users, but filter out entries for root, reboots and asmith</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ last -da | egrep -v &quot;^(root|reboot|asmith)\"><pre>❯❯ last -da <span class=\"pl-k\">|</span> egrep -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^(root|reboot|asmith)</span></pre></div>\n<ul dir=\"auto\">\n<li>How scientist and climagic follower @MikeRSpencer is using the command line to help track snowfall in Scotland</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/SnUORpJ3tv\"><pre>❯❯ http://t.co/SnUORpJ3tv</pre></div>\n<ul dir=\"auto\">\n<li>Lots of amusing anecdotes of command line mistakes here. Especially in the comments</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/k8sSDdktZp\"><pre>❯❯ http://t.co/k8sSDdktZp</pre></div>\n<ul dir=\"auto\">\n<li>opps</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Man takes picture of himself every day for 10 years, then carelessly runs dd if=/dev/sdb of=/dev/sda to copy his 1st drive to 2nd.\"><pre>❯❯ Man takes picture of himself every day <span class=\"pl-k\">for</span> 10 years, <span class=\"pl-k\">then</span> carelessly runs dd if=/dev/sdb of=/dev/sda to copy his 1st drive to 2nd.</pre></div>\n<ul dir=\"auto\">\n<li>4fun</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -o --binary-files=text '[[:alpha:]]' /dev/urandom |tr -d '[a-zA-Z]' |xargs -n $(($COLUMNS/2)) |tr -d ' '| lolcat -f | pv -L80k\"><pre>❯❯ grep -o --binary-files=text <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[[:alpha:]]<span class=\"pl-pds\">'</span></span> /dev/urandom <span class=\"pl-k\">|</span>tr -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[a-zA-Z]<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span>xargs -n <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$COLUMNS</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">2</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-k\">|</span>tr -d <span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span> lolcat -f <span class=\"pl-k\">|</span> pv -L80k</pre></div>\n<ul dir=\"auto\">\n<li>OH THE HORROR!!</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ List thread: &quot;Subject: Troubleshooting Linux Applications Without Using the Command Line\"><pre>❯❯ List thread: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Subject: Troubleshooting Linux Applications Without Using the Command Line</span></pre></div>\n<ul dir=\"auto\">\n<li>|^\\ *$)\" httpd.conf | less</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ egrep -v &quot;(^\"><pre>❯❯ egrep -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(^</span></pre></div>\n<ul dir=\"auto\">\n<li>Alias for mplayer when you want its window matched with special rule for devilspie or other</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias mplayerdp=\\'mplayer -title &quot;mplayer dp&quot;\\'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> mplayerdp=<span class=\"pl-cce\">\\'</span>mplayer -title <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mplayer dp<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use the -d option when you want to see the directory itself instead of what's inside when you use wildcards like this</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ls -ld *log*\"><pre>❯❯ ls -ld <span class=\"pl-k\">*</span>log<span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>Send a signal to any/all dd processes to give a status report every five minutes</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while :; do killall -USR1 dd ; sleep 5m ; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">:</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> killall -USR1 dd <span class=\"pl-k\">;</span> sleep 5m <span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Moves the first line of the file to the end, allowing to cycle through it. Thx @benthorben</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -ni '1h;1!p;${x;p}' queuefile\"><pre>❯❯ sed -ni <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1h;1!p;${x;p}<span class=\"pl-pds\">'</span></span> queuefile</pre></div>\n<ul dir=\"auto\">\n<li>1: What's in this chest? Kid</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Kid\"><pre>❯❯ Kid</pre></div>\n<ul dir=\"auto\">\n<li>Using a logical &amp;&amp; after sleep gives you a chance to Ctrl-C out of sleep without it running the rest</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5m &amp;&amp; rm -fr /\"><pre>❯❯ sleep 5m <span class=\"pl-k\">&amp;&amp;</span> rm -fr /</pre></div>\n<ul dir=\"auto\">\n<li>Sleep for 5 days, 2 hours, 1 minute and 15 seconds. This syntax works in GNU coreutils sleep at least</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 5d 2h 1m 15s\"><pre>❯❯ sleep 5d 2h 1m 15s</pre></div>\n<ul dir=\"auto\">\n<li>full process output in a tree view so you can see the parent - &gt; child process relationships</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ps auxwf\"><pre>❯❯ ps auxwf</pre></div>\n<ul dir=\"auto\">\n<li>scrot is a nice command for capturing screenshots of the whole screen, a window or a selected area</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ scrot -s screenshotname.png\"><pre>❯❯ scrot -s screenshotname.png</pre></div>\n<ul dir=\"auto\">\n<li>Check if file is done downloading from Firefox (not 0 bytes) before moving</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ [ -s ./Downloaded.zip ] &amp;&amp; mv -v Downloaded.zip Ringtones.zip\"><pre>❯❯ [ <span class=\"pl-k\">-s</span> ./Downloaded.zip ] <span class=\"pl-k\">&amp;&amp;</span> mv -v Downloaded.zip Ringtones.zip</pre></div>\n<ul dir=\"auto\">\n<li>Cures most shell symptoms, including runny prompts, echo congestion, binary infection and color stain. Use only as directed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ reset\"><pre>❯❯ reset</pre></div>\n<ul dir=\"auto\">\n<li>Use -r to download a byte range from large file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -r 61049103-61865118 hackerpublicradio\\\\.org/eps/hpr1418.mp3 | mpg123 -\"><pre>❯❯ curl -r 61049103-61865118 hackerpublicradio<span class=\"pl-cce\">\\\\</span>.org/eps/hpr1418.mp3 <span class=\"pl-k\">|</span> mpg123 -</pre></div>\n<ul dir=\"auto\">\n<li>Watch in real time as people mention your city on Twitter</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ t stream search -l &quot;yourcityname state\"><pre>❯❯ t stream search -l <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>yourcityname state</span></pre></div>\n<ul dir=\"auto\">\n<li>More secure than telnetmallows, but not as hip as moshmellows. Thx @hubert3 &amp; @JCaesar</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/zBgf4cP274\"><pre>❯❯ http://t.co/zBgf4cP274</pre></div>\n<ul dir=\"auto\">\n<li>The speedometer program (<a href=\"http://t.co/noIyJQBBe6\" rel=\"nofollow\">http://t.co/noIyJQBBe6</a>) makes a nice real time network graph</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ speedometer -k 256 -i 0.2 -r eth0 -t eth0\"><pre>❯❯ speedometer -k 256 -i 0.2 -r eth0 -t eth0</pre></div>\n<ul dir=\"auto\">\n<li>Use multiple search terms, grep's count result and sort to find a doc by \"scoring\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -Irc -e php -e mysql *.pkgs |sort -t: -k2nr|head\"><pre>❯❯ grep -Irc -e php -e mysql <span class=\"pl-k\">*</span>.pkgs <span class=\"pl-k\">|</span>sort -t: -k2nr<span class=\"pl-k\">|</span>head</pre></div>\n<ul dir=\"auto\">\n<li>Start playing music files with the 51st file in (0 indexed). Good for when wildcards would be too complex</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ f=(*.mp3); mpg123 ${f[@]:50}\"><pre>❯❯ f=(<span class=\"pl-k\">*</span>.mp3)<span class=\"pl-k\">;</span> mpg123 <span class=\"pl-smi\">${f[@]<span class=\"pl-k\">:</span>50}</span></pre></div>\n<ul dir=\"auto\">\n<li>tbt <a href=\"http://t.co/IrmPouiDxs\" rel=\"nofollow\">http://t.co/IrmPouiDxs</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Its a UNIX system, I know this.\"><pre>❯❯ Its a UNIX system, I know this.</pre></div>\n<ul dir=\"auto\">\n<li>I find brace expansion very useful for renaming files. Expands to \"mv Picture.jpg Picture-of-my-cat.jpg\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mv Picture{,-of-my-cat}.jpg\"><pre>❯❯ mv Picture{,-of-my-cat}.jpg</pre></div>\n<ul dir=\"auto\">\n<li>f4f3f0 -opaque \\</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert detroit-green-shape.png -fuzz 3% -fill \\\\\"><pre>❯❯ convert detroit-green-shape.png -fuzz 3% -fill <span class=\"pl-cce\">\\\\</span></pre></div>\n<ul dir=\"auto\">\n<li>Side by side comparison of zip index</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pr -W $COLUMNS -m -t &lt;(unzip -l backup1.zip | sort -k4 ) &lt;(unzip -l backup2.zip | sort -k4 ) | less\"><pre>❯❯ pr -W <span class=\"pl-smi\">$COLUMNS</span> -m -t <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>unzip -l backup1.zip <span class=\"pl-k\">|</span> sort -k4 <span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>unzip -l backup2.zip <span class=\"pl-k\">|</span> sort -k4 <span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">|</span> less</pre></div>\n<ul dir=\"auto\">\n<li>Display changelog of 1st arg (pkg). If 2nd arg set, search for it in the log</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ changelog(){ rpm -q --changelog $1 |less -j3 ${2:++/&quot;$2&quot;}; }\"><pre>❯❯ <span class=\"pl-en\">changelog</span>(){ rpm -q --changelog <span class=\"pl-smi\">$1</span> <span class=\"pl-k\">|</span>less -j3 <span class=\"pl-smi\">${2<span class=\"pl-k\">:</span>++<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$2</span><span class=\"pl-pds\">\"</span></span>}</span>; }</pre></div>\n<ul dir=\"auto\">\n<li>Start searching for text data, but skip the first 25GB (25k of 1MB blocks) of the drive</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo dd if=/dev/sdc bs=1M skip=25k | strings -n12\"><pre>❯❯ sudo dd if=/dev/sdc bs=1M skip=25k <span class=\"pl-k\">|</span> strings -n12</pre></div>\n<ul dir=\"auto\">\n<li>Search a drive for text data, but use a longer minimum size (default 4) to get a better signal to noise ratio</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo strings -n12 /dev/sdc\"><pre>❯❯ sudo strings -n12 /dev/sdc</pre></div>\n<ul dir=\"auto\">\n<li>Sum up the bandwidth consumed by requests for matched lines. BTW, it was 35GB</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '/itdance.gif/{sum+=$10} END { print sum }' access_log\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/itdance.gif/{sum+=$10} END { print sum }<span class=\"pl-pds\">'</span></span> access_log</pre></div>\n<ul dir=\"auto\">\n<li>Give your photo a 70s look</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert +level-colors Firebrick, me.jpg oldme.jpg\"><pre>❯❯ convert +level-colors Firebrick, me.jpg oldme.jpg</pre></div>\n<ul dir=\"auto\">\n<li>This will run ls without using any alias called ls that might be in place. You can do this with any command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ \\\\ls\"><pre>❯❯ <span class=\"pl-cce\">\\\\</span>ls</pre></div>\n<ul dir=\"auto\">\n<li>Use rev twice to get around limitation of cut not being able to truncate end of a string</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo test | rev | cut -c 2- | rev\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-c1\">test</span> <span class=\"pl-k\">|</span> rev <span class=\"pl-k\">|</span> cut -c 2- <span class=\"pl-k\">|</span> rev</pre></div>\n<ul dir=\"auto\">\n<li>Wkly Box Of. change</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks imdb\\\\.to/1fzw0R4 |sed -n -e 's/[$,]//g' -e '/Gross/,/Weekend/p'|grep '(USA)'|tac|awk '{print $1-last; last=$1}'\"><pre>❯❯ elinks imdb<span class=\"pl-cce\">\\\\</span>.to/1fzw0R4 <span class=\"pl-k\">|</span>sed -n -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/[$,]//g<span class=\"pl-pds\">'</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Gross/,/Weekend/p<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>(USA)<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">|</span>tac<span class=\"pl-k\">|</span>awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{print $1-last; last=$1}<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Determine what lines the file names2 has that are unique. The comm program requires sorted files</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ comm -13 &lt;(sort names1) &lt;(sort names2)\"><pre>❯❯ comm -13 <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names1<span class=\"pl-pds\">)</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;(</span>sort names2<span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>You can put DATETIME in your shell rc file &amp; use it to make time format</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ DATETIME=&quot;%Y%m%d_%H%M%S&quot;; ps auxwwf &gt; $(date +psauxwwf-$DATETIME)\"><pre>❯❯ DATETIME=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%Y%m%d_%H%M%S<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> ps auxwwf <span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +psauxwwf-<span class=\"pl-smi\">$DATETIME</span><span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>In pulseaudio, set the application volume of input sink</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pactl set-sink-input-volume 353 60%\"><pre>❯❯ pactl set-sink-input-volume 353 60%</pre></div>\n<ul dir=\"auto\">\n<li>Get PA sink id</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pactl list| awk \\'/(^Sink|process.id = &quot;\\'$(pidof pianobar)\\'&quot;)/{if($0 ~ /^Sink/){s=$3};if($0~/process.id/){print s;exit};}\\'\"><pre>❯❯ pactl list<span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>/(^Sink<span class=\"pl-k\">|</span>process.id = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>\\'<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>pidof pianobar<span class=\"pl-pds\">)</span></span>\\'<span class=\"pl-pds\">\"</span></span>)/{if(<span class=\"pl-smi\">$0</span> <span class=\"pl-k\">~</span> /^Sink/){s=<span class=\"pl-smi\">$3</span>}<span class=\"pl-k\">;</span>if(<span class=\"pl-smi\">$0</span>~/process.id/){print s<span class=\"pl-k\">;</span>exit}<span class=\"pl-k\">;</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Use less as your pager and open the man page perlre and find first instance of \"Look-Around\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LESS=&quot;-p Look-Around&quot; man -P less perlre\"><pre>❯❯ LESS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-p Look-Around<span class=\"pl-pds\">\"</span></span> man -P less perlre</pre></div>\n<ul dir=\"auto\">\n<li>Almost 2^16</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ f=$(curl -Ls twitter\\\\.com/climagic | grep -Po \\'(?&lt;=followers_count&amp;quot;:)[0-9]+\\') ;bc  &lt; &quot;ibase=10;obase=2;$f\"><pre>❯❯ f=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>curl -Ls twitter<span class=\"pl-cce\">\\\\</span>.com/climagic <span class=\"pl-k\">|</span> grep -Po <span class=\"pl-cce\">\\'</span>(<span class=\"pl-k\">?</span><span class=\"pl-k\">&lt;</span>=followers_count<span class=\"pl-k\">&amp;</span>quot<span class=\"pl-k\">;</span>:)[0-9]+<span class=\"pl-cce\">\\'</span><span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">;</span>bc  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibase=10;obase=2;<span class=\"pl-smi\">$f</span></span></pre></div>\n<ul dir=\"auto\">\n<li>earthday</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ The command line gives you more computing power for less energy.\"><pre>❯❯ The <span class=\"pl-c1\">command</span> line gives you more computing power <span class=\"pl-k\">for</span> less energy.</pre></div>\n<ul dir=\"auto\">\n<li>This alone should save several megawatt hours today</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ killall firefox; killall chrome\"><pre>❯❯ killall firefox<span class=\"pl-k\">;</span> killall chrome</pre></div>\n<ul dir=\"auto\">\n<li>earthday</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ If each of my 65,000 followers shut off one computer for today it would save over 100 Megawatts.\"><pre>❯❯ If each of my 65,000 followers shut off one computer <span class=\"pl-k\">for</span> today it would save over 100 Megawatts.</pre></div>\n<ul dir=\"auto\">\n<li>How many of you will actually do it instead of just retweeting it?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shutdown -h 0 || shutdown now || halt\"><pre>❯❯ shutdown -h 0 <span class=\"pl-k\">||</span> shutdown now <span class=\"pl-k\">||</span> halt</pre></div>\n<ul dir=\"auto\">\n<li>earthday  How many of you will actually do it?</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shutdown -h 0 || shutdown now || halt\"><pre>❯❯ shutdown -h 0 <span class=\"pl-k\">||</span> shutdown now <span class=\"pl-k\">||</span> halt</pre></div>\n<ul dir=\"auto\">\n<li>with GNU sort doing a version sort would have the same effect</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @iiSeymour: @climagic sort -V ipv4addrs.txt\"><pre>❯❯ RT @iiSeymour: @climagic sort -V ipv4addrs.txt</pre></div>\n<ul dir=\"auto\">\n<li>Sort IPv4 addresses numerically according to each class</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sort -t . -n -k1,1 -k2,2 -k3,3 -k4,4 ipv4addrs.txt\"><pre>❯❯ sort -t <span class=\"pl-c1\">.</span> -n -k1,1 -k2,2 -k3,3 -k4,4 ipv4addrs.txt</pre></div>\n<ul dir=\"auto\">\n<li>See all the programs in path dirs with suid or sgid bits set</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find ${PATH//:/ } -type f -maxdepth 1 -perm /6000 -ls\"><pre>❯❯ find <span class=\"pl-smi\">${PATH<span class=\"pl-k\">//:/</span> }</span> -type f -maxdepth 1 -perm /6000 -ls</pre></div>\n<ul dir=\"auto\">\n<li>pzl</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ 32596b4a6e657464 4849676748626751 6e6267455861325a 69596b4253633442 53626c4248497968 435a734133596b4a 4749693548497468 4749675541633d6f\"><pre>❯❯ 32596b4a6e657464 4849676748626751 6e6267455861325a 69596b4253633442 53626c4248497968 435a734133596b4a 4749693548497468 4749675541633d6f</pre></div>\n<ul dir=\"auto\">\n<li>Move all duplicate files in CWD (except first in set) into 'dupes' sub-directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ fdupes -f . | xargs --delimiter='\\\\n' mv -vt dupes/\"><pre>❯❯ fdupes -f <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> xargs --delimiter=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>\\\\n<span class=\"pl-pds\">'</span></span> mv -vt dupes/</pre></div>\n<ul dir=\"auto\">\n<li>heartbleed <a href=\"http://t.co/zqazzAEbSu\" rel=\"nofollow\">http://t.co/zqazzAEbSu</a></li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ This one cracked me up. Thx @LizQuilty\"><pre>❯❯ This one cracked me up. Thx @LizQuilty</pre></div>\n<ul dir=\"auto\">\n<li>Check which hosts in IP list are not up</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for i in $( cat ip-list ); do ping -c1 $i 2 &gt;&amp;1 &gt; /dev/null || echo $i not up; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> cat ip-list <span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> ping -c1 <span class=\"pl-smi\">$i</span> 2 <span class=\"pl-k\">&gt;&amp;1</span> <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">||</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$i</span> not up<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Get Google results number</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gresults(){ s=&quot;$@&quot;; wget -q -O- -U Mozilla www.google\\\\.com/search?q=\\\\&quot;$s\\\\&quot; |egrep -o &quot;About [0-9,]+ results&quot;;}\"><pre>❯❯ <span class=\"pl-en\">gresults</span>(){ s=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$@</span><span class=\"pl-pds\">\"</span></span>; wget -q -O- -U Mozilla www.google<span class=\"pl-cce\">\\\\</span>.com/search<span class=\"pl-k\">?</span>q=<span class=\"pl-cce\">\\\\</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$s</span><span class=\"pl-cce\">\\\\</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>egrep -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>About [0-9,]+ results<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span>}</pre></div>\n<ul dir=\"auto\">\n<li>kill -9, the song. Warning: NSFW lyrics</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/Y1qS1EJ5HY\"><pre>❯❯ http://t.co/Y1qS1EJ5HY</pre></div>\n<ul dir=\"auto\">\n<li>Find all those crazy options you have to use to make an LDAP search, because you know you can't remember them. ;)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ history |grep ldapsearch\"><pre>❯❯ <span class=\"pl-c1\">history</span> <span class=\"pl-k\">|</span>grep ldapsearch</pre></div>\n<ul dir=\"auto\">\n<li>Or as @raganello just reminded me, you can just use the --last option. But that's too easy. ;-)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --last\"><pre>❯❯ rpm -qa --last</pre></div>\n<ul dir=\"auto\">\n<li>List rpms by date installed</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm -qa --queryformat &quot;%{INSTALLTIME} %{INSTALLTIME:date} %{NAME}\\\\n&quot; |sort -n |cut -d\\' \\' -f2-\"><pre>❯❯ rpm -qa --queryformat <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%{INSTALLTIME} %{INSTALLTIME:date} %{NAME}<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>sort -n <span class=\"pl-k\">|</span>cut -d<span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span> -f2-</pre></div>\n<ul dir=\"auto\">\n<li>Some interesting historical insight into sed's y command. Thx @gumnos</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/skoBjrQzVo\"><pre>❯❯ http://t.co/skoBjrQzVo</pre></div>\n<ul dir=\"auto\">\n<li>Reduce the verbosity of mplayer output by turning down the msglevel of most modules</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer -msglevel all=-1:statusline=5:cplayer=5 *.mp3\"><pre>❯❯ mplayer -msglevel all=-1:statusline=5:cplayer=5 <span class=\"pl-k\">*</span>.mp3</pre></div>\n<ul dir=\"auto\">\n<li>Or as @jacalvo_zentyal mentioned you can use time read or my favorite, time cat. Ctrl-D and read the \"real time\" in the output</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ time cat\"><pre>❯❯ <span class=\"pl-k\">time</span> cat</pre></div>\n<ul dir=\"auto\">\n<li>Quick and dirty stopwatch with nanosecond accuracy. [Enter] stops it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo $(a=$(date +%s.%N); line; b=$(date +%s.%N); echo &quot;$b-$a&quot;|bc )\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>a=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%s.%N<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> line<span class=\"pl-k\">;</span> b=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%s.%N<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$b</span>-<span class=\"pl-smi\">$a</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>bc <span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Show a list of mail users and their login failed attempt count</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep &quot;LOGIN FAILED&quot; maillog | egrep -o &quot;user=[^,]+,&quot; | sort | uniq -c\"><pre>❯❯ grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>LOGIN FAILED<span class=\"pl-pds\">\"</span></span> maillog <span class=\"pl-k\">|</span> egrep -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user=[^,]+,<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>I know it may be annoying at first, but it will save you hours later</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd(){ builtin cd $@; /etc/init.d/sssd restart; }\"><pre>❯❯ <span class=\"pl-en\">cd</span>(){ <span class=\"pl-c1\">builtin</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-smi\">$@</span>; /etc/init.d/sssd restart<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Generate 16 x 4 random long-word passphrases from a list of common words</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ shuf common-words-10k.txt |egrep &quot;.{5,}&quot; |head -64 |xargs -n4\"><pre>❯❯ shuf common-words-10k.txt <span class=\"pl-k\">|</span>egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.{5,}<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span>head -64 <span class=\"pl-k\">|</span>xargs -n4</pre></div>\n<ul dir=\"auto\">\n<li>As kinda a one off thing. If you find yourself doing a lot of line trimming, try this for one keystroke line delete</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :map &lt;F2 &gt; dd\"><pre>❯❯ :map <span class=\"pl-k\">&lt;</span>F2 <span class=\"pl-k\">&gt;</span> dd</pre></div>\n<ul dir=\"auto\">\n<li>Whenever I have to reboot this scene plays in my head except with \"reboot\"</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/0zXahrEZiy\"><pre>❯❯ https://t.co/0zXahrEZiy</pre></div>\n<ul dir=\"auto\">\n<li>It can be both @Brisawoman @rcalsaverini ;-)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -dump http://thefuckingweather\\\\.com/?zipcode=Fargo | grep &quot; IT\\'S&quot; | (espeak||cat)\"><pre>❯❯ elinks -dump http://thefuckingweather<span class=\"pl-cce\">\\\\</span>.com/<span class=\"pl-k\">?</span>zipcode=Fargo <span class=\"pl-k\">|</span> grep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> IT\\'S<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> (espeak<span class=\"pl-k\">||</span>cat)</pre></div>\n<ul dir=\"auto\">\n<li>Some people really go out of their way to insult others. Thx @brimston3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ for d in {0..255}; do dig +short -x 202\\\\.78.246.${d}; done\"><pre>❯❯ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">d</span> <span class=\"pl-k\">in</span> {0..255}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> dig +short -x 202<span class=\"pl-cce\">\\\\</span>.78.246.<span class=\"pl-smi\">${d}</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Get a list of website hostnames you've visited</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;select host from moz_hosts;&quot; | sqlite3 places.sqlite &gt; ~/history-hosts.txt\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>select host from moz_hosts;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sqlite3 places.sqlite <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">~</span>/history-hosts.txt</pre></div>\n<ul dir=\"auto\">\n<li>If you cant find an error message in your language on Google, run your command \"in English\". Thx @MarcCornella</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ LANG=en apt-get upgrade\"><pre>❯❯ LANG=en apt-get upgrade</pre></div>\n<ul dir=\"auto\">\n<li>On Debian, find any packages that manage files in /boot and list them uniquely</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dpkg -S '/boot/*' | cut -d: -f1 | sort | uniq\"><pre>❯❯ dpkg -S <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/boot/*<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> cut -d: -f1 <span class=\"pl-k\">|</span> sort <span class=\"pl-k\">|</span> uniq</pre></div>\n<ul dir=\"auto\">\n<li>Check what services are still using old now removed libraries and need to be reloaded. Thx @nmcfarl</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sudo lsof -n | grep ssl | grep DEL\"><pre>❯❯ sudo lsof -n <span class=\"pl-k\">|</span> grep ssl <span class=\"pl-k\">|</span> grep DEL</pre></div>\n<ul dir=\"auto\">\n<li>Create an HD color plasma image. Different each time. Uses ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 1920x1080 plasma:fractal background.png\"><pre>❯❯ convert -size 1920x1080 plasma:fractal background.png</pre></div>\n<ul dir=\"auto\">\n<li>An alias that prints out extended ASCII chars</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ alias extendedascii=\\'for i in {C..F}{{0..9},{A..F}}; do printf &quot;$i \\\\x$i\\\\n&quot;; done ; echo\\'\"><pre>❯❯ <span class=\"pl-c1\">alias</span> extendedascii=<span class=\"pl-cce\">\\'</span>for i <span class=\"pl-k\">in</span> {C..F}{{0..9},{A..F}}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span> <span class=\"pl-cce\">\\\\</span>x<span class=\"pl-smi\">$i</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">;</span> echo<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>A few people have asked about my urxvt settings, so I'll share my Xdefaults file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/leYjmU8GFQ\"><pre>❯❯ http://t.co/leYjmU8GFQ</pre></div>\n<ul dir=\"auto\">\n<li>Spice up your excessive usage of [Ctrl-C]</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ trap &quot;echo;ack-grep --bar | sed \\'y/ge/ta/\\'&quot; SIGINT\"><pre>❯❯ <span class=\"pl-c1\">trap</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>echo;ack-grep --bar | sed \\'y/ge/ta/\\'<span class=\"pl-pds\">\"</span></span> SIGINT</pre></div>\n<ul dir=\"auto\">\n<li>Confuse people SSHing to your host with a redirect back to theirs</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ socat -d -d TCP-L:22,reuseaddr,fork SYSTEM:&quot;nc \\\\$SOCAT_PEERADDR 22\"><pre>❯❯ socat -d -d TCP-L:22,reuseaddr,fork SYSTEM:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nc <span class=\"pl-cce\">\\\\</span><span class=\"pl-smi\">$SOCAT_PEERADDR</span> 22</span></pre></div>\n<ul dir=\"auto\">\n<li>Convert a string in quotes to its hexadecimal codes in ASCII</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ascii -s &quot;show me the hex codes&quot; | awk \\'{print $3}\\'\"><pre>❯❯ ascii -s <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>show me the hex codes<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> awk <span class=\"pl-cce\">\\'</span>{print <span class=\"pl-smi\">$3</span>}<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>Automatically installs your public key to the remote host (this is included in the openssh package)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ssh-copy-id 'user@remotehost'\"><pre>❯❯ ssh-copy-id <span class=\"pl-s\"><span class=\"pl-pds\">'</span>user@remotehost<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>In vim, depending on whether your terminal background is dark or light, setting this will help with color syntax</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ :set background=dark\"><pre>❯❯ :set background=dark</pre></div>\n<ul dir=\"auto\">\n<li>status=none allows you to suppress the ending status info if you don't want it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dd status=none if=/dev/zero of=bigfile bs=1k count=1M\"><pre>❯❯ dd status=none if=/dev/zero of=bigfile bs=1k count=1M</pre></div>\n<ul dir=\"auto\">\n<li>Quickly find out how much data space is left on the partition that the current directory you are in resides</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ df -h .\"><pre>❯❯ df -h <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>Display an ASCII art cat. There, after 4 years I finally posted an ack command</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ack-grep --thpppt\"><pre>❯❯ ack-grep --thpppt</pre></div>\n<ul dir=\"auto\">\n<li>New rot546 is super strong encryption</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rot546(){ s=$@;for ((r=0;r&lt;43;r++)){ s=$(tr A-Za-z N-ZA-Mn-za-m  &lt; &quot;$s&quot;|base64);};echo &quot;$s&quot;; }\"><pre>❯❯ <span class=\"pl-en\">rot546</span>(){ s=<span class=\"pl-smi\">$@</span>;<span class=\"pl-k\">for</span> <span class=\"pl-s\"><span class=\"pl-pds\">((</span>r<span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>;r<span class=\"pl-k\">&lt;</span><span class=\"pl-c1\">43</span>;r<span class=\"pl-k\">++</span><span class=\"pl-pds\">))</span></span>{ s=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>tr A-Za-z N-ZA-Mn-za-m  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$s</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">|</span>base64<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span>}<span class=\"pl-k\">;</span><span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$s</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Nobody will criticize your ideas again</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ echo &quot;XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X&quot; &gt; &gt; .signature\"><pre>❯❯ <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> .signature</pre></div>\n<ul dir=\"auto\">\n<li>Poor man's auto updating slideshow image</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true;do for i in ~/Pictures/*.jpg ;do cp &quot;$i&quot; ~/slideshow.jpg ;sleep 5;done; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">~</span>/Pictures/<span class=\"pl-k\">*</span>.jpg <span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> cp <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">~</span>/slideshow.jpg <span class=\"pl-k\">;</span>sleep 5<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>See how many references to pi are made in the Linux version 3.14 patch</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ xzgrep -E -o &quot;\\\\bpi\\\\b&quot; patch-3.14.xz | wc -w\"><pre>❯❯ xzgrep -E -o <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>bpi<span class=\"pl-cce\">\\\\</span>b<span class=\"pl-pds\">\"</span></span> patch-3.14.xz <span class=\"pl-k\">|</span> wc -w</pre></div>\n<ul dir=\"auto\">\n<li>See the BUGS part of the mutt man page. Thx mof18202  (check man man for 'col -b' trick)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ man mutt | col -b | sed -n '/^BUGS/,+10p'\"><pre>❯❯ man mutt <span class=\"pl-k\">|</span> col -b <span class=\"pl-k\">|</span> sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/^BUGS/,+10p<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Linux manpages. :3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ RT @mof18202: &quot;BUGS: More than you can imagine.&quot; I like honest\"><pre>❯❯ RT @mof18202: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>BUGS: More than you can imagine.<span class=\"pl-pds\">\"</span></span> I like honest</pre></div>\n<ul dir=\"auto\">\n<li>Upgrade new</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sed -i \\'s/{% url \\\\([a-z_]*\\\\) /{% url &quot;\\\\1&quot; /\\' $(find . -name &quot;*.html&quot;)\"><pre>❯❯ sed -i <span class=\"pl-cce\">\\'</span>s/{% url <span class=\"pl-cce\">\\\\</span>([a-z_]<span class=\"pl-k\">*</span><span class=\"pl-cce\">\\\\</span>) /{% url <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>1<span class=\"pl-pds\">\"</span></span> /<span class=\"pl-cce\">\\'</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>find <span class=\"pl-c1\">.</span> -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.html<span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Spinning ASCII art globe</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s http://artscene.textfiles\\\\.com/vt100/globe.vt | pv -L9600 -q\"><pre>❯❯ curl -s http://artscene.textfiles<span class=\"pl-cce\">\\\\</span>.com/vt100/globe.vt <span class=\"pl-k\">|</span> pv -L9600 -q</pre></div>\n<ul dir=\"auto\">\n<li>Divide files by the column count in each line. Thx @unfo</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk -F\\';\\' \\'{ fname=sprintf(&quot;lines_with_%s_columns.txt&quot;, NF); print &gt; &gt; fname }\\'\"><pre>❯❯ awk -F<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">;</span><span class=\"pl-cce\">\\'</span> <span class=\"pl-cce\">\\'</span>{ fname=sprintf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lines_with_%s_columns.txt<span class=\"pl-pds\">\"</span></span>, NF)<span class=\"pl-k\">;</span> print <span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&gt;</span> fname }<span class=\"pl-cce\">\\'</span></pre></div>\n<ul dir=\"auto\">\n<li>If you encounter a file that is hard to type/tab complete, try using a ? to replace the characters you can't type</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mplayer M?rklintage*\"><pre>❯❯ mplayer M<span class=\"pl-k\">?</span>rklintage<span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>The pee command can run head and tail on same input. sponge waits for all the data first</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ping -c100 4.2.2.2 | sponge | pee head tail\"><pre>❯❯ ping -c100 4.2.2.2 <span class=\"pl-k\">|</span> sponge <span class=\"pl-k\">|</span> pee head tail</pre></div>\n<ul dir=\"auto\">\n<li>Exploding cow animation I found in old e-mail</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ curl -s www.climagic\\\\.org/ascii/explodingcow-animation-1995.gz |zcat |pv -L2400 -q\"><pre>❯❯ curl -s www.climagic<span class=\"pl-cce\">\\\\</span>.org/ascii/explodingcow-animation-1995.gz <span class=\"pl-k\">|</span>zcat <span class=\"pl-k\">|</span>pv -L2400 -q</pre></div>\n<ul dir=\"auto\">\n<li>Today's famous birthdays</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -no-numbering -dump-width $COLUMNS $(date +&quot;http://t.co/8PCWfAtTFP&quot;)|sed \\'/Births/,/Deaths/!d\\'|grep \\\\*\"><pre>❯❯ elinks -no-numbering -dump-width <span class=\"pl-smi\">$COLUMNS</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://t.co/8PCWfAtTFP<span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-k\">|</span>sed <span class=\"pl-cce\">\\'</span>/Births/,/Deaths/<span class=\"pl-k\">!</span>d<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>grep <span class=\"pl-cce\">\\\\</span><span class=\"pl-k\">*</span></pre></div>\n<ul dir=\"auto\">\n<li>reptyr can be used to reattach a program on another tty to the current tty so you can transfer it into screen/tmux</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ reptyr &lt;pid &gt;\"><pre>❯❯ reptyr <span class=\"pl-k\">&lt;</span>pid <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Using -e multiple times for multiple expressions is possible and a bit more readable</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep -e string1 -e string2 -e regex1 file\"><pre>❯❯ grep -e string1 -e string2 -e regex1 file</pre></div>\n<ul dir=\"auto\">\n<li>Someone made a clone of 2048 in only 278 lines of bash script. Sorry about your time. Thx @PBirkants</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ https://t.co/bgcwCShaCR\"><pre>❯❯ https://t.co/bgcwCShaCR</pre></div>\n<ul dir=\"auto\">\n<li>pi_backup is a new command that simply returns an index number where your data is stored within pi. See also, pi_restore</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ pi_backup /\"><pre>❯❯ pi_backup /</pre></div>\n<ul dir=\"auto\">\n<li>Req. ImageMagick</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 413x314 xc:tan -fill red -pointsize 200 -gravity center -draw &quot;text 0,0 \\'3.14\\'&quot; -flop pie.png\"><pre>❯❯ convert -size 413x314 xc:tan -fill red -pointsize 200 -gravity center -draw <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text 0,0 \\'3.14\\'<span class=\"pl-pds\">\"</span></span> -flop pie.png</pre></div>\n<ul dir=\"auto\">\n<li>EFF! Thx @Matteotom</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dig -t NAPTR +short http://t.co/EXIR3mAPn9 | sort\"><pre>❯❯ dig -t NAPTR +short http://t.co/EXIR3mAPn9 <span class=\"pl-k\">|</span> sort</pre></div>\n<ul dir=\"auto\">\n<li>Show a count of the number of sent messages by day through your mail server</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ grep status=sent /var/log/maillog | cut -c1-7 | uniq -c\"><pre>❯❯ grep status=sent /var/log/maillog <span class=\"pl-k\">|</span> cut -c1-7 <span class=\"pl-k\">|</span> uniq -c</pre></div>\n<ul dir=\"auto\">\n<li>isintime 8am 5pm &amp;&amp; update Thx @brimston3</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ isintime(){ s=$(date +%s);[ $(date -d &quot;$1&quot; +%s) -lt $s ] &amp;&amp; [ $s -lt  $(date -d &quot;$2&quot; +%s) ]; }\"><pre>❯❯ <span class=\"pl-en\">isintime</span>(){ s=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%s<span class=\"pl-pds\">)</span></span>;[ <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span> +%s<span class=\"pl-pds\">)</span></span> <span class=\"pl-k\">-lt</span> <span class=\"pl-smi\">$s</span> ] <span class=\"pl-k\">&amp;&amp;</span> [ <span class=\"pl-smi\">$s</span> <span class=\"pl-k\">-lt</span>  <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$2</span><span class=\"pl-pds\">\"</span></span> +%s<span class=\"pl-pds\">)</span></span> ]<span class=\"pl-k\">;</span> }</pre></div>\n<ul dir=\"auto\">\n<li>Run update every 5min between 8am and 5pm</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true; h=$(date +%_H); [[ $h -ge 8 &amp;&amp; $h -lt 17 ]] &amp;&amp; update; sleep 5m; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> h=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%_H<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> [[ <span class=\"pl-smi\">$h</span> <span class=\"pl-k\">-ge</span> 8 <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$h</span> <span class=\"pl-k\">-lt</span> 17 ]] <span class=\"pl-k\">&amp;&amp;</span> update<span class=\"pl-k\">;</span> sleep 5m<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Only run update every 5min between 8am and 5pm</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ while true; h=$(date +%_H); [ $h -ge 8 &amp;&amp; $h -lt 17 ] &amp;&amp; update; sleep 5m; done\"><pre>❯❯ <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> h=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%_H<span class=\"pl-pds\">)</span></span><span class=\"pl-k\">;</span> [ <span class=\"pl-smi\">$h</span> <span class=\"pl-k\">-ge</span> 8 <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">$h</span> <span class=\"pl-k\">-lt</span> 17 ] <span class=\"pl-k\">&amp;&amp;</span> update<span class=\"pl-k\">;</span> sleep 5m<span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>You can specify alternate rpm db paths if you want. You can even do this on non-rpm based systems</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rpm --dbpath=~/backup-rpm-dir -qi httpd\"><pre>❯❯ rpm --dbpath=<span class=\"pl-k\">~</span>/backup-rpm-dir -qi httpd</pre></div>\n<ul dir=\"auto\">\n<li>climagic</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ I still haven't figured out a way to notify you when Twitter is down from the shell yet. Maybe just 'weechat irc.freenode\\\\.org/\"><pre>❯❯ I still haven<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t figured out a way to notify you when Twitter is down from the shell yet. Maybe just <span class=\"pl-pds\">'</span></span>weechat irc.freenode<span class=\"pl-cce\">\\\\</span>.org/</pre></div>\n<ul dir=\"auto\">\n<li>% Pkt loss</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ elinks -no-numbering -no-references internetpulse\\\\.net/?Metric=PL |egrep --color=no -e \\'Dest|Gener\\' -e &quot;NTT.*XO&quot; -e &quot; 0 .* 0\"><pre>❯❯ elinks -no-numbering -no-references internetpulse<span class=\"pl-cce\">\\\\</span>.net/<span class=\"pl-k\">?</span>Metric=PL <span class=\"pl-k\">|</span>egrep --color=no -e <span class=\"pl-cce\">\\'</span>Dest<span class=\"pl-k\">|</span>Gener<span class=\"pl-cce\">\\'</span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NTT.*XO<span class=\"pl-pds\">\"</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> 0 .* 0</span></pre></div>\n<ul dir=\"auto\">\n<li>PWD is ~/.config/xfce4/xfconf/xfce-perchannel-xml and I needed to copy from a xfce4-backup dir I made</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cp -a ${PWD/xfce4/xfce4-backup}/* .\"><pre>❯❯ cp -a <span class=\"pl-smi\">${PWD<span class=\"pl-k\">/</span>xfce4<span class=\"pl-k\">/</span>xfce4-backup}</span>/<span class=\"pl-k\">*</span> <span class=\"pl-c1\">.</span></pre></div>\n<ul dir=\"auto\">\n<li>A text mode file manager similar to mc, but isn't as cumbersome as mc IMHO. View, play, manage media files quickly. Thx @mtelesha</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ranger\"><pre>❯❯ ranger</pre></div>\n<ul dir=\"auto\">\n<li>See what the word inconceivable really means</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ dict inconceivable\"><pre>❯❯ dict inconceivable</pre></div>\n<ul dir=\"auto\">\n<li>Check what databases are stored inside a simple compressed mysql dump file</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ zgrep &quot;^CREATE DATABASE&quot; dbbackups.mysql.gz\"><pre>❯❯ zgrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^CREATE DATABASE<span class=\"pl-pds\">\"</span></span> dbbackups.mysql.gz</pre></div>\n<ul dir=\"auto\">\n<li>thedownside it means I have to reboot my computers</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Moving into a bigger cube is nice, but on\"><pre>❯❯ Moving into a bigger cube is nice, but on</pre></div>\n<ul dir=\"auto\">\n<li>You can use rev to reverse a word or sentence</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ rev  &lt; &quot;Naomi, sex at noon taxes I moan\"><pre>❯❯ rev  <span class=\"pl-k\">&lt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Naomi, sex at noon taxes I moan</span></pre></div>\n<ul dir=\"auto\">\n<li>Find out if xfce4-terminal uses the libvte library or not. Check your own terminal program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ldd /usr/bin/xfce4-terminal | grep libvte\"><pre>❯❯ ldd /usr/bin/xfce4-terminal <span class=\"pl-k\">|</span> grep libvte</pre></div>\n<ul dir=\"auto\">\n<li>Find out if the terminator terminal uses the libvte library or not. Check your own terminal program</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ldd /usr/bin/terminator | grep libvte\"><pre>❯❯ ldd /usr/bin/terminator <span class=\"pl-k\">|</span> grep libvte</pre></div>\n<ul dir=\"auto\">\n<li>Print the line if it has a 6th column of text in it</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ awk '$6' scan.txt\"><pre>❯❯ awk <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$6<span class=\"pl-pds\">'</span></span> scan.txt</pre></div>\n<ul dir=\"auto\">\n<li>Move a directory while you're inside it. Only works if on same partition</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ mkdir sub1 sub2; cd sub1 ; mv ../sub1 ../sub2 ; cd . ; pwd\"><pre>❯❯ mkdir sub1 sub2<span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> sub1 <span class=\"pl-k\">;</span> mv ../sub1 ../sub2 <span class=\"pl-k\">;</span> <span class=\"pl-c1\">cd</span> <span class=\"pl-c1\">.</span> <span class=\"pl-k\">;</span> <span class=\"pl-c1\">pwd</span></pre></div>\n<ul dir=\"auto\">\n<li>Climagic video demonstrating gnome-terminal's scrollback being written to disk</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/wDRy0UO5G4\"><pre>❯❯ http://t.co/wDRy0UO5G4</pre></div>\n<ul dir=\"auto\">\n<li>Still a problem after 2 years. Don't use libvte based terms (gnome-terminal, Terminator, xfce4-term, etc.)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ http://t.co/WWKCZU75fh\"><pre>❯❯ http://t.co/WWKCZU75fh</pre></div>\n<ul dir=\"auto\">\n<li>Quickly find the largest 5 files in a directory tree on a single file system</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -xdev -ls 2 &gt; /dev/null | sort -k7nr | head -5\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -xdev -ls 2 <span class=\"pl-k\">&gt;</span> /dev/null <span class=\"pl-k\">|</span> sort -k7nr <span class=\"pl-k\">|</span> head -5</pre></div>\n<ul dir=\"auto\">\n<li>Random color per log line</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ tail -F syslog |while read -r line;do printf &quot;\\\\e[38;5;%dm%s\\\\e[0m\\\\n&quot; $(($RANDOM%255)) &quot;$line&quot;;done\"><pre>❯❯ tail -F syslog <span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> -r line<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">printf</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>e[38;5;%dm%s<span class=\"pl-cce\">\\\\</span>e[0m<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-smi\">$RANDOM</span><span class=\"pl-k\">%</span><span class=\"pl-c1\">255</span><span class=\"pl-pds\">))</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$line</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Stump your friends. How many months had only 19 days? Answer: 1 (The Month the United States switched to Gregorian)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cal 9 1752\"><pre>❯❯ cal 9 1752</pre></div>\n<ul dir=\"auto\">\n<li>Sleep infinitely or until the next shutdown, whichever comes first</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep infinity\"><pre>❯❯ sleep infinity</pre></div>\n<ul dir=\"auto\">\n<li>Yes this works and sleeps for 255 seconds. (doesn't work on all versions of sleep)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ sleep 0xFF\"><pre>❯❯ sleep 0xFF</pre></div>\n<ul dir=\"auto\">\n<li>List the contents of each gz compressed file, including the compression ratio/uncompressed size. Doesn't work on stdin- &gt;gzip</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ gzip -l *.gz\"><pre>❯❯ gzip -l <span class=\"pl-k\">*</span>.gz</pre></div>\n<ul dir=\"auto\">\n<li>Copy file to the previous directory you were in. See \"tilde expansion\" in bash man page. Thx @gumnos</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cp file.txt ~-/\"><pre>❯❯ cp file.txt <span class=\"pl-k\">~</span>-/</pre></div>\n<ul dir=\"auto\">\n<li>Remove the previous word on the command line (before the cursor). This is highly useful when reusing old commands</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-w &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-w <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>This is usually equivilent to running 'clear'.  Its usually quicker and doesn't leave the command in your command line history</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-l &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-l <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Manual lists this as Ctrl-_ but Ctrl-- usually works too. Incremental undo of command line edits</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-- &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-- <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Insert the last argument from the previous line in the command history into the current line. Different from !$</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Meta-. &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Meta-. <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the end of the line. Faster than holding down right arrow</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-e &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-e <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Move your cursor to the beginning of the line. Faster than holding down left arrow. In screen, you need to press </li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-a &gt;\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-a <span class=\"pl-k\">&gt;</span></pre></div>\n<ul dir=\"auto\">\n<li>Reverse search through your command history for 'string'. Press Ctrl-r again to continue searching backwards. ESC when done</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ &lt;Ctrl-r &gt;string\"><pre>❯❯ <span class=\"pl-k\">&lt;</span>Ctrl-r <span class=\"pl-k\">&gt;</span>string</pre></div>\n<ul dir=\"auto\">\n<li>description. The</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ Just a reminder about the format of climagic tweets: command\"><pre>❯❯ Just a reminder about the format of climagic tweets: <span class=\"pl-c1\">command</span></pre></div>\n<ul dir=\"auto\">\n<li>(With no arguments) Takes you back to your home directory</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd\"><pre>❯❯ <span class=\"pl-c1\">cd</span></pre></div>\n<ul dir=\"auto\">\n<li>Takes you back to the previous directory you were in. Good to know if you don't already</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ cd -\"><pre>❯❯ <span class=\"pl-c1\">cd</span> -</pre></div>\n<ul dir=\"auto\">\n<li>Date the system booted last. Uses Perl regex (zero-width look behind assertion)</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ date -d &quot;now - $( uptime | grep -o -P &quot;(?&lt;=up )[^,]+&quot; )\"><pre>❯❯ date -d <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>now - <span class=\"pl-s\"><span class=\"pl-pds\">$(</span> uptime <span class=\"pl-k\">|</span> grep -o -P <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>(?&lt;=up )[^,]+<span class=\"pl-pds\">\"</span></span> <span class=\"pl-pds\">)</span></span></span></pre></div>\n<ul dir=\"auto\">\n<li>Thx @gumnos</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look .|awk \\'/^[a-g]{3,}$/{print gensub(&quot;.&quot;,&quot; pl &amp;3&quot;,&quot;g&quot;,toupper($0))}\\'|while read w;do echo $w;play -n synth $w fade h 0 2;done\"><pre>❯❯ look .<span class=\"pl-k\">|</span>awk <span class=\"pl-cce\">\\'</span>/^[a-g]{3,}$/{print gensub(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> pl &amp;3<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>g<span class=\"pl-pds\">\"</span></span>,toupper(<span class=\"pl-smi\">$0</span>))}<span class=\"pl-cce\">\\'</span><span class=\"pl-k\">|</span>while <span class=\"pl-c1\">read</span> w<span class=\"pl-k\">;</span><span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$w</span><span class=\"pl-k\">;</span>play -n synth <span class=\"pl-smi\">$w</span> fade h 0 2<span class=\"pl-k\">;</span><span class=\"pl-k\">done</span></pre></div>\n<ul dir=\"auto\">\n<li>Download a series of timed images from a site with 1 second delay between</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ wget -w1 http://www.example\\\\.com/{00..23}h{00,15,30,45}m.png\"><pre>❯❯ wget -w1 http://www.example<span class=\"pl-cce\">\\\\</span>.com/{00..23}h{00,15,30,45}m.png</pre></div>\n<ul dir=\"auto\">\n<li>Find 4+ letter words that are spelled using only musical note letters</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ look . | egrep &quot;^[a-g]{4,}$\"><pre>❯❯ look <span class=\"pl-c1\">.</span> <span class=\"pl-k\">|</span> egrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^[a-g]{4,}$</span></pre></div>\n<ul dir=\"auto\">\n<li>Stack a lot of files Thx @amenthes_de</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ convert -size 1920x1080 `find . -iname &quot;*test*&quot; | sed &quot;s/^/ -page +0+0 /&quot;` -layers flatten stack.png\"><pre>❯❯ convert -size 1920x1080 <span class=\"pl-s\"><span class=\"pl-pds\">`</span>find <span class=\"pl-c1\">.</span> -iname <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*test*<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sed <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s/^/ -page +0+0 /<span class=\"pl-pds\">\"</span></span><span class=\"pl-pds\">`</span></span> -layers flatten stack.png</pre></div>\n<ul dir=\"auto\">\n<li>Find a file with a newline or carriage return characters in its name. Req by @peelman</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ find . -name '*['$'\\\\r'$'\\\\n'']*'\"><pre>❯❯ find <span class=\"pl-c1\">.</span> -name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*[<span class=\"pl-pds\">'</span></span><span class=\"pl-s\"><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>r<span class=\"pl-pds\">'</span><span class=\"pl-pds\">$'</span><span class=\"pl-cce\">\\\\</span>n<span class=\"pl-pds\">'</span></span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>]*<span class=\"pl-pds\">'</span></span></pre></div>\n<ul dir=\"auto\">\n<li>Swap integer values without intermediary variable using XOR Equals (As long as they aren't too big). Thx @spikygeek</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯❯ ((A^=B,B^=A,A^=B))\"><pre>❯❯ <span class=\"pl-s\"><span class=\"pl-pds\">((</span>A<span class=\"pl-k\">^=</span>B<span class=\"pl-k\">,</span>B<span class=\"pl-k\">^=</span>A<span class=\"pl-k\">,</span>A<span class=\"pl-k\">^=</span>B<span class=\"pl-pds\">))</span></span></pre></div>\n</article>","renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"wwong99","repoName":"pentest-notes","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"Useful commands By [@climagic](https://twitter.com/climagic)","kind":"section_1","identStart":2,"identEnd":62,"extentStart":0,"extentEnd":217446,"fullyQualifiedName":"Useful commands By [@climagic](https://twitter.com/climagic)","identUtf16":{"start":{"lineNumber":0,"utf16Col":2},"end":{"lineNumber":0,"utf16Col":62}},"extentUtf16":{"start":{"lineNumber":0,"utf16Col":0},"end":{"lineNumber":9320,"utf16Col":0}}}]}},"copilotInfo":null,"copilotAccessAllowed":false,"csrf_tokens":{"/wwong99/pentest-notes/branches":{"post":"TEnNBBzSMeAvbzHzp0UCNi_nPDWp7IvDRvokhYhECpi5Zy5WviHdCQY_69_2Qtv07mRmJXsFx-LQKw7dtrMlcA"},"/repos/preferences":{"post":"jmg3bCMcBrITxH6omP3NH_ab6wBgTKwl5DScFo33UAbFxEupAQk7g3bTUImKAB5fYSaDsWg_HoFWMT2c1HL60w"}}},"title":"pentest-notes/os/useful_commands.md at master · wwong99/pentest-notes"}