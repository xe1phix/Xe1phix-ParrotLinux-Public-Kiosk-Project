TEST PLAN FOR UK BEFORE ISSUANCE

1. Define the combat group that we are going to distribute.
Combat groups are numerically spelled (1, 2, 3, etc.) and are intended for combat use only.
Test groups have a symbolic spelling (one, two, etc.) and are intended for development, testing new functionality, finding bugs, stabilizing code, etc.
2. Ask the coder for a set of software for the test groups.
There should be a total of 8 binary - 4 with logs and 4 without:
- 2 binaries each for loader, 32/64
- 2 binary for the bot, 32/64
Set aside those with logs.
They are needed in case of an error in functionality - then these binary files will be easier for the developer to localize the problem.
4. Crypt both loaders without logs
5. Sign both loaders and both bots without logs
6. Pour the prepared binary into the admin panel (into the right group!)
6.1 For the battle versions of software (for battle groups) in the admin panel fill only tester!
6.2 When filling the files you must write for each binary a new version number.
Version number must be specified by the developer when issuing.
7. On each AV we conduct a smoke test
7.0. there must be no log files!
Lowader: %HOMEPATH%\Desktop\dl2.log
bot: %HOMEPATH%\Desktop\bd2.log
Lowader: c:\temp\ld.log
bot: c:\temp\bd.log
If the files are there, it means that we're testing a version with logs and you can't give it away!
7.1. no detection.
7.2. The bot reports
7.3. System Info command passes
7.4. if there is time, we test all commands. If there is no time, limit it to 7.3.

TEST PLAN GENERAL

We check the entire system - the resident loader, backdoor, admin.
In the antivirus settings, you need to turn off sending samples and cloud protection, at least at first, so as not to leak samples.

0. We get a set of loaders from the developer - logged and unlogged versions, x86 and x64.
First we check the logged version, then the unlogged version. We test it on the virtual machines on the network.
We do this so that we can show the log for any error and call the developer on the machine.
If there is an error when checking the unlogged version, try to repeat it on the logged one.
If it happens again on the logged version, fix the log and call the developer.
If it does NOT happen on the logged version, fix that the bug is present only on the non-logical version.
Prerequisite for the success of the test at any step - no activity on the target machine screen (popups, messages from AVs etc),
unless otherwise stipulated (for example, if it is not a special build, which conversely shows the running programs, etc.).

1. Run the loeder on the target VM.
2. Go to the admin as an operator who has access to the group of this bot.
Wait for the bounce, within 5 minutes. If there is no feedback, error, stop.
Bot should appear as "online" if for at least 15 recent minutes with him was a connection.
3. Execute commands one by one.
The first command may be executed with a delay (up to 5 minutes) - this is normal.
3.1 Get System Info.
This should retrieve system information from the corresponding tab.
3.2 Run .exe with different combinations of fields Run Type, Host Process (Mask).
Choose a file which does not require any third-party .dll (statically linked). For example, pscp.exe.
The command should be executed, and the output of the command should contain the text of the command.

* If timeout = background run is selected, no response to the command is expected - the command is executed in the background and we are not interested in its fate.
The bot is immediately ready to receive new commands.
3.3 Run .dll
TODO
3.4 Run .bat
3.4.1 Type a single command, e.g. hostname, whoami, date /t
Command has to run, it has to have a text output in the output of command.
3.4.2 Pour the prepared .bat-file of several commands. The tester should know the result of running the file on his machine.
The script should run, the output text of this script should be in the output of the command.
3.5 Run PowerShell
3.5.1. type some special command like $PSVersionTable.PSVersion
(prints out the version of the Powershell)
It should run and the output should have the text in it.
3.5.2 Fill in the prepared .ps1 file from several commands. The tester should know the result of running this file on his machine.
The script should run, the output text of this script should be in the output of the command.
3.6. Reset
Before executing this command, you have to run something long (you can try running .bat timeout 10000),
which will block commands from being executed by the bot.
After running Reset, the previous blocking command should be marked as done, the bot is ready to receive the next command.
3.7 Terminate Process
The command kills a process by its number (pid)
To do this you have to prepare the victim process (e.g. run notepad.exe manually and look at its number in task manager).
After running the command the process must exit.
3.8 Download File
The command downloads a file from the target machine (up to 10M in size).
You should enter the full path to the file in the appropriate field.
You should be able to download the file after it's finished. You should see the link in the output of the command.
3.9. suicide
This command removes the loeder from the target machine.
After rebooting the machine the bot should not be tapping.
4. Latching.
After rebooting the machine bot should bang in the admin area.
5. Detects.
There should be no detects on either the loader or the bot.
6. Updating
6.1 If you are running an x86 loeder on an x64 machine, the first thing it must do is to update to the x64 version of itself,
and then boot only the x64 bot.
In simple words, the loeder should start the bot with the maximum available bit depth.
6.2.1 Go to the admin area under the role of QA (this is the person who is responsible for releases and updates)
6.2.2 Prepare a kit with a new version of the bot and loeder, which has the same group, the same upgrade paths.
6.2.3 Find out from the developer a line with the version of this kit. Note: each file from the kit can have its own version.
6.2.4. Pour new versions of the files into panels and set the files to the version you found out at the previous step.
Reboot the target machine. The updates should get to the machine.
